// Code generated by volcstack with private/model/cli/gen-api/main.go. DO NOT EDIT.

package clb

import (
	"github.com/volcengine/volcstack-go-sdk/volcstack"
	"github.com/volcengine/volcstack-go-sdk/volcstack/request"
	"github.com/volcengine/volcstack-go-sdk/volcstack/response"
	"github.com/volcengine/volcstack-go-sdk/volcstack/volcstackutil"
)

const opRemoveAclEntriesCommon = "RemoveAclEntries"

// RemoveAclEntriesCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the RemoveAclEntriesCommon operation. The "output" return
// value will be populated with the RemoveAclEntriesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned RemoveAclEntriesCommon Request to send the API call to the service.
// the "output" return value is not valid until after RemoveAclEntriesCommon Send returns without error.
//
// See RemoveAclEntriesCommon for more information on using the RemoveAclEntriesCommon
// API call, and error handling.
//
//    // Example sending a request using the RemoveAclEntriesCommonRequest method.
//    req, resp := client.RemoveAclEntriesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLB) RemoveAclEntriesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opRemoveAclEntriesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// RemoveAclEntriesCommon API operation for CLB.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for CLB's
// API operation RemoveAclEntriesCommon for usage and error information.
func (c *CLB) RemoveAclEntriesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.RemoveAclEntriesCommonRequest(input)
	return out, req.Send()
}

// RemoveAclEntriesCommonWithContext is the same as RemoveAclEntriesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See RemoveAclEntriesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLB) RemoveAclEntriesCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.RemoveAclEntriesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opRemoveAclEntries = "RemoveAclEntries"

// RemoveAclEntriesRequest generates a "volcstack/request.Request" representing the
// client's request for the RemoveAclEntries operation. The "output" return
// value will be populated with the RemoveAclEntriesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned RemoveAclEntriesCommon Request to send the API call to the service.
// the "output" return value is not valid until after RemoveAclEntriesCommon Send returns without error.
//
// See RemoveAclEntries for more information on using the RemoveAclEntries
// API call, and error handling.
//
//    // Example sending a request using the RemoveAclEntriesRequest method.
//    req, resp := client.RemoveAclEntriesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLB) RemoveAclEntriesRequest(input *RemoveAclEntriesInput) (req *request.Request, output *RemoveAclEntriesOutput) {
	op := &request.Operation{
		Name:       opRemoveAclEntries,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &RemoveAclEntriesInput{}
	}

	output = &RemoveAclEntriesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// RemoveAclEntries API operation for CLB.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for CLB's
// API operation RemoveAclEntries for usage and error information.
func (c *CLB) RemoveAclEntries(input *RemoveAclEntriesInput) (*RemoveAclEntriesOutput, error) {
	req, out := c.RemoveAclEntriesRequest(input)
	return out, req.Send()
}

// RemoveAclEntriesWithContext is the same as RemoveAclEntries with the addition of
// the ability to pass a context and additional request options.
//
// See RemoveAclEntries for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLB) RemoveAclEntriesWithContext(ctx volcstack.Context, input *RemoveAclEntriesInput, opts ...request.Option) (*RemoveAclEntriesOutput, error) {
	req, out := c.RemoveAclEntriesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type RemoveAclEntriesInput struct {
	_ struct{} `type:"structure"`

	// AclId is a required field
	AclId *string `type:"string" required:"true"`

	// Entries is a required field
	Entries []*string `type:"list" required:"true"`
}

// String returns the string representation
func (s RemoveAclEntriesInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s RemoveAclEntriesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *RemoveAclEntriesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "RemoveAclEntriesInput"}
	if s.AclId == nil {
		invalidParams.Add(request.NewErrParamRequired("AclId"))
	}
	if s.Entries == nil {
		invalidParams.Add(request.NewErrParamRequired("Entries"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAclId sets the AclId field's value.
func (s *RemoveAclEntriesInput) SetAclId(v string) *RemoveAclEntriesInput {
	s.AclId = &v
	return s
}

// SetEntries sets the Entries field's value.
func (s *RemoveAclEntriesInput) SetEntries(v []*string) *RemoveAclEntriesInput {
	s.Entries = v
	return s
}

type RemoveAclEntriesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	RequestId *string `type:"string"`
}

// String returns the string representation
func (s RemoveAclEntriesOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s RemoveAclEntriesOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *RemoveAclEntriesOutput) SetRequestId(v string) *RemoveAclEntriesOutput {
	s.RequestId = &v
	return s
}
