// Code generated by volcstack with private/model/cli/gen-api/main.go. DO NOT EDIT.

package clb

import (
	"github.com/volcengine/volcstack-go-sdk/volcstack"
	"github.com/volcengine/volcstack-go-sdk/volcstack/request"
	"github.com/volcengine/volcstack-go-sdk/volcstack/response"
	"github.com/volcengine/volcstack-go-sdk/volcstack/volcstackutil"
)

const opDescribeServerGroupsCommon = "DescribeServerGroups"

// DescribeServerGroupsCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the DescribeServerGroupsCommon operation. The "output" return
// value will be populated with the DescribeServerGroupsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeServerGroupsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeServerGroupsCommon Send returns without error.
//
// See DescribeServerGroupsCommon for more information on using the DescribeServerGroupsCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeServerGroupsCommonRequest method.
//    req, resp := client.DescribeServerGroupsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLB) DescribeServerGroupsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeServerGroupsCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeServerGroupsCommon API operation for CLB.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for CLB's
// API operation DescribeServerGroupsCommon for usage and error information.
func (c *CLB) DescribeServerGroupsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeServerGroupsCommonRequest(input)
	return out, req.Send()
}

// DescribeServerGroupsCommonWithContext is the same as DescribeServerGroupsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeServerGroupsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLB) DescribeServerGroupsCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeServerGroupsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeServerGroups = "DescribeServerGroups"

// DescribeServerGroupsRequest generates a "volcstack/request.Request" representing the
// client's request for the DescribeServerGroups operation. The "output" return
// value will be populated with the DescribeServerGroupsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeServerGroupsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeServerGroupsCommon Send returns without error.
//
// See DescribeServerGroups for more information on using the DescribeServerGroups
// API call, and error handling.
//
//    // Example sending a request using the DescribeServerGroupsRequest method.
//    req, resp := client.DescribeServerGroupsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLB) DescribeServerGroupsRequest(input *DescribeServerGroupsInput) (req *request.Request, output *DescribeServerGroupsOutput) {
	op := &request.Operation{
		Name:       opDescribeServerGroups,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeServerGroupsInput{}
	}

	output = &DescribeServerGroupsOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeServerGroups API operation for CLB.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for CLB's
// API operation DescribeServerGroups for usage and error information.
func (c *CLB) DescribeServerGroups(input *DescribeServerGroupsInput) (*DescribeServerGroupsOutput, error) {
	req, out := c.DescribeServerGroupsRequest(input)
	return out, req.Send()
}

// DescribeServerGroupsWithContext is the same as DescribeServerGroups with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeServerGroups for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLB) DescribeServerGroupsWithContext(ctx volcstack.Context, input *DescribeServerGroupsInput, opts ...request.Option) (*DescribeServerGroupsOutput, error) {
	req, out := c.DescribeServerGroupsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeServerGroupsInput struct {
	_ struct{} `type:"structure"`

	LoadBalancerId *string `type:"string"`

	PageNumber *int64 `type:"integer"`

	PageSize *int64 `type:"integer"`

	ServerGroupIds []*string `type:"list"`

	ServerGroupName *string `type:"string"`
}

// String returns the string representation
func (s DescribeServerGroupsInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeServerGroupsInput) GoString() string {
	return s.String()
}

// SetLoadBalancerId sets the LoadBalancerId field's value.
func (s *DescribeServerGroupsInput) SetLoadBalancerId(v string) *DescribeServerGroupsInput {
	s.LoadBalancerId = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeServerGroupsInput) SetPageNumber(v int64) *DescribeServerGroupsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeServerGroupsInput) SetPageSize(v int64) *DescribeServerGroupsInput {
	s.PageSize = &v
	return s
}

// SetServerGroupIds sets the ServerGroupIds field's value.
func (s *DescribeServerGroupsInput) SetServerGroupIds(v []*string) *DescribeServerGroupsInput {
	s.ServerGroupIds = v
	return s
}

// SetServerGroupName sets the ServerGroupName field's value.
func (s *DescribeServerGroupsInput) SetServerGroupName(v string) *DescribeServerGroupsInput {
	s.ServerGroupName = &v
	return s
}

type DescribeServerGroupsOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	PageNumber *int64 `type:"integer"`

	PageSize *int64 `type:"integer"`

	RequestId *string `type:"string"`

	ServerGroups []*ServerGroupForDescribeServerGroupsOutput `type:"list"`

	TotalCount *int64 `type:"integer"`
}

// String returns the string representation
func (s DescribeServerGroupsOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeServerGroupsOutput) GoString() string {
	return s.String()
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeServerGroupsOutput) SetPageNumber(v int64) *DescribeServerGroupsOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeServerGroupsOutput) SetPageSize(v int64) *DescribeServerGroupsOutput {
	s.PageSize = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeServerGroupsOutput) SetRequestId(v string) *DescribeServerGroupsOutput {
	s.RequestId = &v
	return s
}

// SetServerGroups sets the ServerGroups field's value.
func (s *DescribeServerGroupsOutput) SetServerGroups(v []*ServerGroupForDescribeServerGroupsOutput) *DescribeServerGroupsOutput {
	s.ServerGroups = v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *DescribeServerGroupsOutput) SetTotalCount(v int64) *DescribeServerGroupsOutput {
	s.TotalCount = &v
	return s
}

type ServerGroupForDescribeServerGroupsOutput struct {
	_ struct{} `type:"structure"`

	CreateTime *string `type:"string"`

	Description *string `type:"string"`

	ServerGroupId *string `type:"string"`

	ServerGroupName *string `type:"string"`

	UpdateTime *string `type:"string"`
}

// String returns the string representation
func (s ServerGroupForDescribeServerGroupsOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s ServerGroupForDescribeServerGroupsOutput) GoString() string {
	return s.String()
}

// SetCreateTime sets the CreateTime field's value.
func (s *ServerGroupForDescribeServerGroupsOutput) SetCreateTime(v string) *ServerGroupForDescribeServerGroupsOutput {
	s.CreateTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *ServerGroupForDescribeServerGroupsOutput) SetDescription(v string) *ServerGroupForDescribeServerGroupsOutput {
	s.Description = &v
	return s
}

// SetServerGroupId sets the ServerGroupId field's value.
func (s *ServerGroupForDescribeServerGroupsOutput) SetServerGroupId(v string) *ServerGroupForDescribeServerGroupsOutput {
	s.ServerGroupId = &v
	return s
}

// SetServerGroupName sets the ServerGroupName field's value.
func (s *ServerGroupForDescribeServerGroupsOutput) SetServerGroupName(v string) *ServerGroupForDescribeServerGroupsOutput {
	s.ServerGroupName = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *ServerGroupForDescribeServerGroupsOutput) SetUpdateTime(v string) *ServerGroupForDescribeServerGroupsOutput {
	s.UpdateTime = &v
	return s
}
