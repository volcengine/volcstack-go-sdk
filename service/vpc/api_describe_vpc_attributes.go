// Code generated by volcstack with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vpc

import (
	"github.com/volcengine/volcstack-go-sdk/volcstack"
	"github.com/volcengine/volcstack-go-sdk/volcstack/request"
	"github.com/volcengine/volcstack-go-sdk/volcstack/response"
	"github.com/volcengine/volcstack-go-sdk/volcstack/volcstackutil"
)

const opDescribeVpcAttributesCommon = "DescribeVpcAttributes"

// DescribeVpcAttributesCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the DescribeVpcAttributesCommon operation. The "output" return
// value will be populated with the DescribeVpcAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeVpcAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeVpcAttributesCommon Send returns without error.
//
// See DescribeVpcAttributesCommon for more information on using the DescribeVpcAttributesCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeVpcAttributesCommonRequest method.
//    req, resp := client.DescribeVpcAttributesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPC) DescribeVpcAttributesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeVpcAttributesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeVpcAttributesCommon API operation for VPC.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for VPC's
// API operation DescribeVpcAttributesCommon for usage and error information.
func (c *VPC) DescribeVpcAttributesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeVpcAttributesCommonRequest(input)
	return out, req.Send()
}

// DescribeVpcAttributesCommonWithContext is the same as DescribeVpcAttributesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeVpcAttributesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPC) DescribeVpcAttributesCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeVpcAttributesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeVpcAttributes = "DescribeVpcAttributes"

// DescribeVpcAttributesRequest generates a "volcstack/request.Request" representing the
// client's request for the DescribeVpcAttributes operation. The "output" return
// value will be populated with the DescribeVpcAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeVpcAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeVpcAttributesCommon Send returns without error.
//
// See DescribeVpcAttributes for more information on using the DescribeVpcAttributes
// API call, and error handling.
//
//    // Example sending a request using the DescribeVpcAttributesRequest method.
//    req, resp := client.DescribeVpcAttributesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPC) DescribeVpcAttributesRequest(input *DescribeVpcAttributesInput) (req *request.Request, output *DescribeVpcAttributesOutput) {
	op := &request.Operation{
		Name:       opDescribeVpcAttributes,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeVpcAttributesInput{}
	}

	output = &DescribeVpcAttributesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeVpcAttributes API operation for VPC.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for VPC's
// API operation DescribeVpcAttributes for usage and error information.
func (c *VPC) DescribeVpcAttributes(input *DescribeVpcAttributesInput) (*DescribeVpcAttributesOutput, error) {
	req, out := c.DescribeVpcAttributesRequest(input)
	return out, req.Send()
}

// DescribeVpcAttributesWithContext is the same as DescribeVpcAttributes with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeVpcAttributes for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPC) DescribeVpcAttributesWithContext(ctx volcstack.Context, input *DescribeVpcAttributesInput, opts ...request.Option) (*DescribeVpcAttributesOutput, error) {
	req, out := c.DescribeVpcAttributesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AssociateCenForDescribeVpcAttributesOutput struct {
	_ struct{} `type:"structure"`

	CenId *string `type:"string"`

	CenOwnerId *string `type:"string"`

	CenStatus *string `type:"string"`
}

// String returns the string representation
func (s AssociateCenForDescribeVpcAttributesOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s AssociateCenForDescribeVpcAttributesOutput) GoString() string {
	return s.String()
}

// SetCenId sets the CenId field's value.
func (s *AssociateCenForDescribeVpcAttributesOutput) SetCenId(v string) *AssociateCenForDescribeVpcAttributesOutput {
	s.CenId = &v
	return s
}

// SetCenOwnerId sets the CenOwnerId field's value.
func (s *AssociateCenForDescribeVpcAttributesOutput) SetCenOwnerId(v string) *AssociateCenForDescribeVpcAttributesOutput {
	s.CenOwnerId = &v
	return s
}

// SetCenStatus sets the CenStatus field's value.
func (s *AssociateCenForDescribeVpcAttributesOutput) SetCenStatus(v string) *AssociateCenForDescribeVpcAttributesOutput {
	s.CenStatus = &v
	return s
}

type DescribeVpcAttributesInput struct {
	_ struct{} `type:"structure"`

	// VpcId is a required field
	VpcId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DescribeVpcAttributesInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeVpcAttributesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeVpcAttributesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeVpcAttributesInput"}
	if s.VpcId == nil {
		invalidParams.Add(request.NewErrParamRequired("VpcId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetVpcId sets the VpcId field's value.
func (s *DescribeVpcAttributesInput) SetVpcId(v string) *DescribeVpcAttributesInput {
	s.VpcId = &v
	return s
}

type DescribeVpcAttributesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	AccountId *string `type:"string"`

	AssociateCens []*AssociateCenForDescribeVpcAttributesOutput `type:"list"`

	CidrBlock *string `type:"string"`

	CreationTime *string `type:"string"`

	Description *string `type:"string"`

	DnsServers []*string `type:"list"`

	NatGatewayIds []*string `type:"list"`

	NetworkAclNum *string `type:"string"`

	RequestId *string `type:"string"`

	RouteTableIds []*string `type:"list"`

	SecurityGroupIds []*string `type:"list"`

	Status *string `type:"string"`

	SubnetIds []*string `type:"list"`

	UpdateTime *string `type:"string"`

	VpcId *string `type:"string"`

	VpcName *string `type:"string"`
}

// String returns the string representation
func (s DescribeVpcAttributesOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeVpcAttributesOutput) GoString() string {
	return s.String()
}

// SetAccountId sets the AccountId field's value.
func (s *DescribeVpcAttributesOutput) SetAccountId(v string) *DescribeVpcAttributesOutput {
	s.AccountId = &v
	return s
}

// SetAssociateCens sets the AssociateCens field's value.
func (s *DescribeVpcAttributesOutput) SetAssociateCens(v []*AssociateCenForDescribeVpcAttributesOutput) *DescribeVpcAttributesOutput {
	s.AssociateCens = v
	return s
}

// SetCidrBlock sets the CidrBlock field's value.
func (s *DescribeVpcAttributesOutput) SetCidrBlock(v string) *DescribeVpcAttributesOutput {
	s.CidrBlock = &v
	return s
}

// SetCreationTime sets the CreationTime field's value.
func (s *DescribeVpcAttributesOutput) SetCreationTime(v string) *DescribeVpcAttributesOutput {
	s.CreationTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *DescribeVpcAttributesOutput) SetDescription(v string) *DescribeVpcAttributesOutput {
	s.Description = &v
	return s
}

// SetDnsServers sets the DnsServers field's value.
func (s *DescribeVpcAttributesOutput) SetDnsServers(v []*string) *DescribeVpcAttributesOutput {
	s.DnsServers = v
	return s
}

// SetNatGatewayIds sets the NatGatewayIds field's value.
func (s *DescribeVpcAttributesOutput) SetNatGatewayIds(v []*string) *DescribeVpcAttributesOutput {
	s.NatGatewayIds = v
	return s
}

// SetNetworkAclNum sets the NetworkAclNum field's value.
func (s *DescribeVpcAttributesOutput) SetNetworkAclNum(v string) *DescribeVpcAttributesOutput {
	s.NetworkAclNum = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeVpcAttributesOutput) SetRequestId(v string) *DescribeVpcAttributesOutput {
	s.RequestId = &v
	return s
}

// SetRouteTableIds sets the RouteTableIds field's value.
func (s *DescribeVpcAttributesOutput) SetRouteTableIds(v []*string) *DescribeVpcAttributesOutput {
	s.RouteTableIds = v
	return s
}

// SetSecurityGroupIds sets the SecurityGroupIds field's value.
func (s *DescribeVpcAttributesOutput) SetSecurityGroupIds(v []*string) *DescribeVpcAttributesOutput {
	s.SecurityGroupIds = v
	return s
}

// SetStatus sets the Status field's value.
func (s *DescribeVpcAttributesOutput) SetStatus(v string) *DescribeVpcAttributesOutput {
	s.Status = &v
	return s
}

// SetSubnetIds sets the SubnetIds field's value.
func (s *DescribeVpcAttributesOutput) SetSubnetIds(v []*string) *DescribeVpcAttributesOutput {
	s.SubnetIds = v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *DescribeVpcAttributesOutput) SetUpdateTime(v string) *DescribeVpcAttributesOutput {
	s.UpdateTime = &v
	return s
}

// SetVpcId sets the VpcId field's value.
func (s *DescribeVpcAttributesOutput) SetVpcId(v string) *DescribeVpcAttributesOutput {
	s.VpcId = &v
	return s
}

// SetVpcName sets the VpcName field's value.
func (s *DescribeVpcAttributesOutput) SetVpcName(v string) *DescribeVpcAttributesOutput {
	s.VpcName = &v
	return s
}
