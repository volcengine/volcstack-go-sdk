// Code generated by volcstack with private/model/cli/gen-api/main.go. DO NOT EDIT.

package volcobserve

import (
	"github.com/volcengine/volcstack-go-sdk/volcstack"
	"github.com/volcengine/volcstack-go-sdk/volcstack/request"
	"github.com/volcengine/volcstack-go-sdk/volcstack/volcstackutil"
)

const opCreateRuleCommon = "CreateRule"

// CreateRuleCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the CreateRuleCommon operation. The "output" return
// value will be populated with the CreateRuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateRuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateRuleCommon Send returns without error.
//
// See CreateRuleCommon for more information on using the CreateRuleCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateRuleCommonRequest method.
//    req, resp := client.CreateRuleCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VOLCOBSERVE) CreateRuleCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateRuleCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateRuleCommon API operation for VOLC_OBSERVE.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for VOLC_OBSERVE's
// API operation CreateRuleCommon for usage and error information.
func (c *VOLCOBSERVE) CreateRuleCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateRuleCommonRequest(input)
	return out, req.Send()
}

// CreateRuleCommonWithContext is the same as CreateRuleCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateRuleCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VOLCOBSERVE) CreateRuleCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateRuleCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateRule = "CreateRule"

// CreateRuleRequest generates a "volcstack/request.Request" representing the
// client's request for the CreateRule operation. The "output" return
// value will be populated with the CreateRuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateRuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateRuleCommon Send returns without error.
//
// See CreateRule for more information on using the CreateRule
// API call, and error handling.
//
//    // Example sending a request using the CreateRuleRequest method.
//    req, resp := client.CreateRuleRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VOLCOBSERVE) CreateRuleRequest(input *CreateRuleInput) (req *request.Request, output *CreateRuleOutput) {
	op := &request.Operation{
		Name:       opCreateRule,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateRuleInput{}
	}

	output = &CreateRuleOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateRule API operation for VOLC_OBSERVE.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for VOLC_OBSERVE's
// API operation CreateRule for usage and error information.
func (c *VOLCOBSERVE) CreateRule(input *CreateRuleInput) (*CreateRuleOutput, error) {
	req, out := c.CreateRuleRequest(input)
	return out, req.Send()
}

// CreateRuleWithContext is the same as CreateRule with the addition of
// the ability to pass a context and additional request options.
//
// See CreateRule for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VOLCOBSERVE) CreateRuleWithContext(ctx volcstack.Context, input *CreateRuleInput, opts ...request.Option) (*CreateRuleOutput, error) {
	req, out := c.CreateRuleRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteRulesByIdsCommon = "DeleteRulesByIds"

// DeleteRulesByIdsCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the DeleteRulesByIdsCommon operation. The "output" return
// value will be populated with the DeleteRulesByIdsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteRulesByIdsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteRulesByIdsCommon Send returns without error.
//
// See DeleteRulesByIdsCommon for more information on using the DeleteRulesByIdsCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteRulesByIdsCommonRequest method.
//    req, resp := client.DeleteRulesByIdsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VOLCOBSERVE) DeleteRulesByIdsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteRulesByIdsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteRulesByIdsCommon API operation for VOLC_OBSERVE.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for VOLC_OBSERVE's
// API operation DeleteRulesByIdsCommon for usage and error information.
func (c *VOLCOBSERVE) DeleteRulesByIdsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteRulesByIdsCommonRequest(input)
	return out, req.Send()
}

// DeleteRulesByIdsCommonWithContext is the same as DeleteRulesByIdsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteRulesByIdsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VOLCOBSERVE) DeleteRulesByIdsCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteRulesByIdsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteRulesByIds = "DeleteRulesByIds"

// DeleteRulesByIdsRequest generates a "volcstack/request.Request" representing the
// client's request for the DeleteRulesByIds operation. The "output" return
// value will be populated with the DeleteRulesByIdsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteRulesByIdsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteRulesByIdsCommon Send returns without error.
//
// See DeleteRulesByIds for more information on using the DeleteRulesByIds
// API call, and error handling.
//
//    // Example sending a request using the DeleteRulesByIdsRequest method.
//    req, resp := client.DeleteRulesByIdsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VOLCOBSERVE) DeleteRulesByIdsRequest(input *DeleteRulesByIdsInput) (req *request.Request, output *DeleteRulesByIdsOutput) {
	op := &request.Operation{
		Name:       opDeleteRulesByIds,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteRulesByIdsInput{}
	}

	output = &DeleteRulesByIdsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteRulesByIds API operation for VOLC_OBSERVE.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for VOLC_OBSERVE's
// API operation DeleteRulesByIds for usage and error information.
func (c *VOLCOBSERVE) DeleteRulesByIds(input *DeleteRulesByIdsInput) (*DeleteRulesByIdsOutput, error) {
	req, out := c.DeleteRulesByIdsRequest(input)
	return out, req.Send()
}

// DeleteRulesByIdsWithContext is the same as DeleteRulesByIds with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteRulesByIds for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VOLCOBSERVE) DeleteRulesByIdsWithContext(ctx volcstack.Context, input *DeleteRulesByIdsInput, opts ...request.Option) (*DeleteRulesByIdsOutput, error) {
	req, out := c.DeleteRulesByIdsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListRulesByIdsCommon = "ListRulesByIds"

// ListRulesByIdsCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the ListRulesByIdsCommon operation. The "output" return
// value will be populated with the ListRulesByIdsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListRulesByIdsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListRulesByIdsCommon Send returns without error.
//
// See ListRulesByIdsCommon for more information on using the ListRulesByIdsCommon
// API call, and error handling.
//
//    // Example sending a request using the ListRulesByIdsCommonRequest method.
//    req, resp := client.ListRulesByIdsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VOLCOBSERVE) ListRulesByIdsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListRulesByIdsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListRulesByIdsCommon API operation for VOLC_OBSERVE.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for VOLC_OBSERVE's
// API operation ListRulesByIdsCommon for usage and error information.
func (c *VOLCOBSERVE) ListRulesByIdsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListRulesByIdsCommonRequest(input)
	return out, req.Send()
}

// ListRulesByIdsCommonWithContext is the same as ListRulesByIdsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListRulesByIdsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VOLCOBSERVE) ListRulesByIdsCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListRulesByIdsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListRulesByIds = "ListRulesByIds"

// ListRulesByIdsRequest generates a "volcstack/request.Request" representing the
// client's request for the ListRulesByIds operation. The "output" return
// value will be populated with the ListRulesByIdsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListRulesByIdsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListRulesByIdsCommon Send returns without error.
//
// See ListRulesByIds for more information on using the ListRulesByIds
// API call, and error handling.
//
//    // Example sending a request using the ListRulesByIdsRequest method.
//    req, resp := client.ListRulesByIdsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VOLCOBSERVE) ListRulesByIdsRequest(input *ListRulesByIdsInput) (req *request.Request, output *ListRulesByIdsOutput) {
	op := &request.Operation{
		Name:       opListRulesByIds,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListRulesByIdsInput{}
	}

	output = &ListRulesByIdsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListRulesByIds API operation for VOLC_OBSERVE.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for VOLC_OBSERVE's
// API operation ListRulesByIds for usage and error information.
func (c *VOLCOBSERVE) ListRulesByIds(input *ListRulesByIdsInput) (*ListRulesByIdsOutput, error) {
	req, out := c.ListRulesByIdsRequest(input)
	return out, req.Send()
}

// ListRulesByIdsWithContext is the same as ListRulesByIds with the addition of
// the ability to pass a context and additional request options.
//
// See ListRulesByIds for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VOLCOBSERVE) ListRulesByIdsWithContext(ctx volcstack.Context, input *ListRulesByIdsInput, opts ...request.Option) (*ListRulesByIdsOutput, error) {
	req, out := c.ListRulesByIdsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateRuleCommon = "UpdateRule"

// UpdateRuleCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the UpdateRuleCommon operation. The "output" return
// value will be populated with the UpdateRuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateRuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateRuleCommon Send returns without error.
//
// See UpdateRuleCommon for more information on using the UpdateRuleCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateRuleCommonRequest method.
//    req, resp := client.UpdateRuleCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VOLCOBSERVE) UpdateRuleCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateRuleCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateRuleCommon API operation for VOLC_OBSERVE.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for VOLC_OBSERVE's
// API operation UpdateRuleCommon for usage and error information.
func (c *VOLCOBSERVE) UpdateRuleCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateRuleCommonRequest(input)
	return out, req.Send()
}

// UpdateRuleCommonWithContext is the same as UpdateRuleCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateRuleCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VOLCOBSERVE) UpdateRuleCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateRuleCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateRule = "UpdateRule"

// UpdateRuleRequest generates a "volcstack/request.Request" representing the
// client's request for the UpdateRule operation. The "output" return
// value will be populated with the UpdateRuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateRuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateRuleCommon Send returns without error.
//
// See UpdateRule for more information on using the UpdateRule
// API call, and error handling.
//
//    // Example sending a request using the UpdateRuleRequest method.
//    req, resp := client.UpdateRuleRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VOLCOBSERVE) UpdateRuleRequest(input *UpdateRuleInput) (req *request.Request, output *UpdateRuleOutput) {
	op := &request.Operation{
		Name:       opUpdateRule,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateRuleInput{}
	}

	output = &UpdateRuleOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateRule API operation for VOLC_OBSERVE.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for VOLC_OBSERVE's
// API operation UpdateRule for usage and error information.
func (c *VOLCOBSERVE) UpdateRule(input *UpdateRuleInput) (*UpdateRuleOutput, error) {
	req, out := c.UpdateRuleRequest(input)
	return out, req.Send()
}

// UpdateRuleWithContext is the same as UpdateRule with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateRule for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VOLCOBSERVE) UpdateRuleWithContext(ctx volcstack.Context, input *UpdateRuleInput, opts ...request.Option) (*UpdateRuleOutput, error) {
	req, out := c.UpdateRuleRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ConditionForCreateRuleInput struct {
	_ struct{} `type:"structure"`

	ComparisonOperator *string `type:"string"`

	MetricName *string `type:"string"`

	MetricUnit *string `type:"string"`

	Namespace *string `type:"string"`

	Period *string `type:"string"`

	Statistics *string `type:"string"`

	Threshold *string `type:"string"`
}

// String returns the string representation
func (s ConditionForCreateRuleInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s ConditionForCreateRuleInput) GoString() string {
	return s.String()
}

// SetComparisonOperator sets the ComparisonOperator field's value.
func (s *ConditionForCreateRuleInput) SetComparisonOperator(v string) *ConditionForCreateRuleInput {
	s.ComparisonOperator = &v
	return s
}

// SetMetricName sets the MetricName field's value.
func (s *ConditionForCreateRuleInput) SetMetricName(v string) *ConditionForCreateRuleInput {
	s.MetricName = &v
	return s
}

// SetMetricUnit sets the MetricUnit field's value.
func (s *ConditionForCreateRuleInput) SetMetricUnit(v string) *ConditionForCreateRuleInput {
	s.MetricUnit = &v
	return s
}

// SetNamespace sets the Namespace field's value.
func (s *ConditionForCreateRuleInput) SetNamespace(v string) *ConditionForCreateRuleInput {
	s.Namespace = &v
	return s
}

// SetPeriod sets the Period field's value.
func (s *ConditionForCreateRuleInput) SetPeriod(v string) *ConditionForCreateRuleInput {
	s.Period = &v
	return s
}

// SetStatistics sets the Statistics field's value.
func (s *ConditionForCreateRuleInput) SetStatistics(v string) *ConditionForCreateRuleInput {
	s.Statistics = &v
	return s
}

// SetThreshold sets the Threshold field's value.
func (s *ConditionForCreateRuleInput) SetThreshold(v string) *ConditionForCreateRuleInput {
	s.Threshold = &v
	return s
}

type ConditionForListRulesByIdsOutput struct {
	_ struct{} `type:"structure"`

	ComparisonOperator *string `type:"string"`

	MetricName *string `type:"string"`

	MetricUnit *string `type:"string"`

	Namespace *string `type:"string"`

	Period *string `type:"string"`

	Statistics *string `type:"string"`

	Threshold *string `type:"string"`
}

// String returns the string representation
func (s ConditionForListRulesByIdsOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s ConditionForListRulesByIdsOutput) GoString() string {
	return s.String()
}

// SetComparisonOperator sets the ComparisonOperator field's value.
func (s *ConditionForListRulesByIdsOutput) SetComparisonOperator(v string) *ConditionForListRulesByIdsOutput {
	s.ComparisonOperator = &v
	return s
}

// SetMetricName sets the MetricName field's value.
func (s *ConditionForListRulesByIdsOutput) SetMetricName(v string) *ConditionForListRulesByIdsOutput {
	s.MetricName = &v
	return s
}

// SetMetricUnit sets the MetricUnit field's value.
func (s *ConditionForListRulesByIdsOutput) SetMetricUnit(v string) *ConditionForListRulesByIdsOutput {
	s.MetricUnit = &v
	return s
}

// SetNamespace sets the Namespace field's value.
func (s *ConditionForListRulesByIdsOutput) SetNamespace(v string) *ConditionForListRulesByIdsOutput {
	s.Namespace = &v
	return s
}

// SetPeriod sets the Period field's value.
func (s *ConditionForListRulesByIdsOutput) SetPeriod(v string) *ConditionForListRulesByIdsOutput {
	s.Period = &v
	return s
}

// SetStatistics sets the Statistics field's value.
func (s *ConditionForListRulesByIdsOutput) SetStatistics(v string) *ConditionForListRulesByIdsOutput {
	s.Statistics = &v
	return s
}

// SetThreshold sets the Threshold field's value.
func (s *ConditionForListRulesByIdsOutput) SetThreshold(v string) *ConditionForListRulesByIdsOutput {
	s.Threshold = &v
	return s
}

type ConditionForUpdateRuleInput struct {
	_ struct{} `type:"structure"`

	ComparisonOperator *string `type:"string"`

	MetricName *string `type:"string"`

	MetricUnit *string `type:"string"`

	Namespace *string `type:"string"`

	Period *string `type:"string"`

	Statistics *string `type:"string"`

	Threshold *string `type:"string"`
}

// String returns the string representation
func (s ConditionForUpdateRuleInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s ConditionForUpdateRuleInput) GoString() string {
	return s.String()
}

// SetComparisonOperator sets the ComparisonOperator field's value.
func (s *ConditionForUpdateRuleInput) SetComparisonOperator(v string) *ConditionForUpdateRuleInput {
	s.ComparisonOperator = &v
	return s
}

// SetMetricName sets the MetricName field's value.
func (s *ConditionForUpdateRuleInput) SetMetricName(v string) *ConditionForUpdateRuleInput {
	s.MetricName = &v
	return s
}

// SetMetricUnit sets the MetricUnit field's value.
func (s *ConditionForUpdateRuleInput) SetMetricUnit(v string) *ConditionForUpdateRuleInput {
	s.MetricUnit = &v
	return s
}

// SetNamespace sets the Namespace field's value.
func (s *ConditionForUpdateRuleInput) SetNamespace(v string) *ConditionForUpdateRuleInput {
	s.Namespace = &v
	return s
}

// SetPeriod sets the Period field's value.
func (s *ConditionForUpdateRuleInput) SetPeriod(v string) *ConditionForUpdateRuleInput {
	s.Period = &v
	return s
}

// SetStatistics sets the Statistics field's value.
func (s *ConditionForUpdateRuleInput) SetStatistics(v string) *ConditionForUpdateRuleInput {
	s.Statistics = &v
	return s
}

// SetThreshold sets the Threshold field's value.
func (s *ConditionForUpdateRuleInput) SetThreshold(v string) *ConditionForUpdateRuleInput {
	s.Threshold = &v
	return s
}

type CreateRuleInput struct {
	_ struct{} `type:"structure"`

	AccountId *string `type:"string"`

	AlertMethods []*string `type:"list"`

	Asc *bool `type:"boolean"`

	CheckInterval *int64 `type:"integer"`

	Conditions []*ConditionForCreateRuleInput `type:"list"`

	ContactGroupsIds []*string `type:"list"`

	Description *string `type:"string"`

	Dimensions []*string `type:"list"`

	EffectEndAt *string `type:"string"`

	EffectStartAt *string `type:"string"`

	EnableState *string `type:"string"`

	EvaluationCount *int64 `type:"integer"`

	HandleSuggestion *string `type:"string"`

	Id *string `type:"string"`

	Level *string `type:"string"`

	Namespace *string `type:"string"`

	OrderBy *string `type:"string"`

	OriginalDimensions map[string][]*string `type:"map"`

	PageNumber *int64 `type:"integer"`

	PageSize *int64 `type:"integer"`

	Regions []*string `type:"list"`

	RuleExpr *string `type:"string"`

	RuleName *string `type:"string"`

	RuleType *string `type:"string"`

	SilenceTime *int64 `type:"integer"`

	SubNamespace *string `type:"string"`

	TotalCount *int64 `type:"integer"`

	WebHook *string `type:"string"`
}

// String returns the string representation
func (s CreateRuleInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateRuleInput) GoString() string {
	return s.String()
}

// SetAccountId sets the AccountId field's value.
func (s *CreateRuleInput) SetAccountId(v string) *CreateRuleInput {
	s.AccountId = &v
	return s
}

// SetAlertMethods sets the AlertMethods field's value.
func (s *CreateRuleInput) SetAlertMethods(v []*string) *CreateRuleInput {
	s.AlertMethods = v
	return s
}

// SetAsc sets the Asc field's value.
func (s *CreateRuleInput) SetAsc(v bool) *CreateRuleInput {
	s.Asc = &v
	return s
}

// SetCheckInterval sets the CheckInterval field's value.
func (s *CreateRuleInput) SetCheckInterval(v int64) *CreateRuleInput {
	s.CheckInterval = &v
	return s
}

// SetConditions sets the Conditions field's value.
func (s *CreateRuleInput) SetConditions(v []*ConditionForCreateRuleInput) *CreateRuleInput {
	s.Conditions = v
	return s
}

// SetContactGroupsIds sets the ContactGroupsIds field's value.
func (s *CreateRuleInput) SetContactGroupsIds(v []*string) *CreateRuleInput {
	s.ContactGroupsIds = v
	return s
}

// SetDescription sets the Description field's value.
func (s *CreateRuleInput) SetDescription(v string) *CreateRuleInput {
	s.Description = &v
	return s
}

// SetDimensions sets the Dimensions field's value.
func (s *CreateRuleInput) SetDimensions(v []*string) *CreateRuleInput {
	s.Dimensions = v
	return s
}

// SetEffectEndAt sets the EffectEndAt field's value.
func (s *CreateRuleInput) SetEffectEndAt(v string) *CreateRuleInput {
	s.EffectEndAt = &v
	return s
}

// SetEffectStartAt sets the EffectStartAt field's value.
func (s *CreateRuleInput) SetEffectStartAt(v string) *CreateRuleInput {
	s.EffectStartAt = &v
	return s
}

// SetEnableState sets the EnableState field's value.
func (s *CreateRuleInput) SetEnableState(v string) *CreateRuleInput {
	s.EnableState = &v
	return s
}

// SetEvaluationCount sets the EvaluationCount field's value.
func (s *CreateRuleInput) SetEvaluationCount(v int64) *CreateRuleInput {
	s.EvaluationCount = &v
	return s
}

// SetHandleSuggestion sets the HandleSuggestion field's value.
func (s *CreateRuleInput) SetHandleSuggestion(v string) *CreateRuleInput {
	s.HandleSuggestion = &v
	return s
}

// SetId sets the Id field's value.
func (s *CreateRuleInput) SetId(v string) *CreateRuleInput {
	s.Id = &v
	return s
}

// SetLevel sets the Level field's value.
func (s *CreateRuleInput) SetLevel(v string) *CreateRuleInput {
	s.Level = &v
	return s
}

// SetNamespace sets the Namespace field's value.
func (s *CreateRuleInput) SetNamespace(v string) *CreateRuleInput {
	s.Namespace = &v
	return s
}

// SetOrderBy sets the OrderBy field's value.
func (s *CreateRuleInput) SetOrderBy(v string) *CreateRuleInput {
	s.OrderBy = &v
	return s
}

// SetOriginalDimensions sets the OriginalDimensions field's value.
func (s *CreateRuleInput) SetOriginalDimensions(v map[string][]*string) *CreateRuleInput {
	s.OriginalDimensions = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *CreateRuleInput) SetPageNumber(v int64) *CreateRuleInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *CreateRuleInput) SetPageSize(v int64) *CreateRuleInput {
	s.PageSize = &v
	return s
}

// SetRegions sets the Regions field's value.
func (s *CreateRuleInput) SetRegions(v []*string) *CreateRuleInput {
	s.Regions = v
	return s
}

// SetRuleExpr sets the RuleExpr field's value.
func (s *CreateRuleInput) SetRuleExpr(v string) *CreateRuleInput {
	s.RuleExpr = &v
	return s
}

// SetRuleName sets the RuleName field's value.
func (s *CreateRuleInput) SetRuleName(v string) *CreateRuleInput {
	s.RuleName = &v
	return s
}

// SetRuleType sets the RuleType field's value.
func (s *CreateRuleInput) SetRuleType(v string) *CreateRuleInput {
	s.RuleType = &v
	return s
}

// SetSilenceTime sets the SilenceTime field's value.
func (s *CreateRuleInput) SetSilenceTime(v int64) *CreateRuleInput {
	s.SilenceTime = &v
	return s
}

// SetSubNamespace sets the SubNamespace field's value.
func (s *CreateRuleInput) SetSubNamespace(v string) *CreateRuleInput {
	s.SubNamespace = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *CreateRuleInput) SetTotalCount(v int64) *CreateRuleInput {
	s.TotalCount = &v
	return s
}

// SetWebHook sets the WebHook field's value.
func (s *CreateRuleInput) SetWebHook(v string) *CreateRuleInput {
	s.WebHook = &v
	return s
}

type CreateRuleOutput struct {
	_ struct{} `type:"structure"`

	Data []*string `type:"list"`
}

// String returns the string representation
func (s CreateRuleOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateRuleOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *CreateRuleOutput) SetData(v []*string) *CreateRuleOutput {
	s.Data = v
	return s
}

type DeleteRulesByIdsInput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s DeleteRulesByIdsInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteRulesByIdsInput) GoString() string {
	return s.String()
}

type DeleteRulesByIdsOutput struct {
	_ struct{} `type:"structure"`

	Data []*string `type:"list"`
}

// String returns the string representation
func (s DeleteRulesByIdsOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteRulesByIdsOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *DeleteRulesByIdsOutput) SetData(v []*string) *DeleteRulesByIdsOutput {
	s.Data = v
	return s
}

type ListRulesByIdsInput struct {
	_ struct{} `type:"structure"`

	Asc *bool `type:"boolean"`

	Ids []*string `type:"list"`

	OrderBy *string `type:"string"`

	PageNumber *int64 `type:"integer"`

	PageSize *int64 `type:"integer"`

	TotalCount *int64 `type:"integer"`
}

// String returns the string representation
func (s ListRulesByIdsInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s ListRulesByIdsInput) GoString() string {
	return s.String()
}

// SetAsc sets the Asc field's value.
func (s *ListRulesByIdsInput) SetAsc(v bool) *ListRulesByIdsInput {
	s.Asc = &v
	return s
}

// SetIds sets the Ids field's value.
func (s *ListRulesByIdsInput) SetIds(v []*string) *ListRulesByIdsInput {
	s.Ids = v
	return s
}

// SetOrderBy sets the OrderBy field's value.
func (s *ListRulesByIdsInput) SetOrderBy(v string) *ListRulesByIdsInput {
	s.OrderBy = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListRulesByIdsInput) SetPageNumber(v int64) *ListRulesByIdsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListRulesByIdsInput) SetPageSize(v int64) *ListRulesByIdsInput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListRulesByIdsInput) SetTotalCount(v int64) *ListRulesByIdsInput {
	s.TotalCount = &v
	return s
}

type ListRulesByIdsOutput struct {
	_ struct{} `type:"structure"`

	Data []*RuleVOListForListRulesByIdsOutput `type:"list"`
}

// String returns the string representation
func (s ListRulesByIdsOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s ListRulesByIdsOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *ListRulesByIdsOutput) SetData(v []*RuleVOListForListRulesByIdsOutput) *ListRulesByIdsOutput {
	s.Data = v
	return s
}

type RuleVOListForListRulesByIdsOutput struct {
	_ struct{} `type:"structure"`

	AccountId *string `type:"string"`

	AlertMethods []*string `type:"list"`

	AlertState *string `type:"string"`

	CheckInterval *int64 `type:"integer"`

	Conditions []*ConditionForListRulesByIdsOutput `type:"list"`

	ContactGroupsIds []*string `type:"list"`

	CreatedAt *string `type:"string"`

	Description *string `type:"string"`

	Dimension *string `type:"string"`

	Dimensions []*string `type:"list"`

	EffectEndAt *string `type:"string"`

	EffectStartAt *string `type:"string"`

	EnableState *string `type:"string"`

	EvaluationCount *int64 `type:"integer"`

	HandleSuggestion *string `type:"string"`

	Id *string `type:"string"`

	Level *string `type:"string"`

	Namespace *string `type:"string"`

	OriginalDimensions map[string][]*string `type:"map"`

	Regions []*string `type:"list"`

	ResourceType *string `type:"string"`

	Resources map[string][]*string `type:"map"`

	RuleExpr *string `type:"string"`

	RuleName *string `type:"string"`

	RuleType *string `type:"string"`

	SilenceTime *int64 `type:"integer"`

	SubNamespace *string `type:"string"`

	TriggerCondition *string `type:"string"`

	UpdatedAt *string `type:"string"`

	WebHook *string `type:"string"`
}

// String returns the string representation
func (s RuleVOListForListRulesByIdsOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s RuleVOListForListRulesByIdsOutput) GoString() string {
	return s.String()
}

// SetAccountId sets the AccountId field's value.
func (s *RuleVOListForListRulesByIdsOutput) SetAccountId(v string) *RuleVOListForListRulesByIdsOutput {
	s.AccountId = &v
	return s
}

// SetAlertMethods sets the AlertMethods field's value.
func (s *RuleVOListForListRulesByIdsOutput) SetAlertMethods(v []*string) *RuleVOListForListRulesByIdsOutput {
	s.AlertMethods = v
	return s
}

// SetAlertState sets the AlertState field's value.
func (s *RuleVOListForListRulesByIdsOutput) SetAlertState(v string) *RuleVOListForListRulesByIdsOutput {
	s.AlertState = &v
	return s
}

// SetCheckInterval sets the CheckInterval field's value.
func (s *RuleVOListForListRulesByIdsOutput) SetCheckInterval(v int64) *RuleVOListForListRulesByIdsOutput {
	s.CheckInterval = &v
	return s
}

// SetConditions sets the Conditions field's value.
func (s *RuleVOListForListRulesByIdsOutput) SetConditions(v []*ConditionForListRulesByIdsOutput) *RuleVOListForListRulesByIdsOutput {
	s.Conditions = v
	return s
}

// SetContactGroupsIds sets the ContactGroupsIds field's value.
func (s *RuleVOListForListRulesByIdsOutput) SetContactGroupsIds(v []*string) *RuleVOListForListRulesByIdsOutput {
	s.ContactGroupsIds = v
	return s
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *RuleVOListForListRulesByIdsOutput) SetCreatedAt(v string) *RuleVOListForListRulesByIdsOutput {
	s.CreatedAt = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *RuleVOListForListRulesByIdsOutput) SetDescription(v string) *RuleVOListForListRulesByIdsOutput {
	s.Description = &v
	return s
}

// SetDimension sets the Dimension field's value.
func (s *RuleVOListForListRulesByIdsOutput) SetDimension(v string) *RuleVOListForListRulesByIdsOutput {
	s.Dimension = &v
	return s
}

// SetDimensions sets the Dimensions field's value.
func (s *RuleVOListForListRulesByIdsOutput) SetDimensions(v []*string) *RuleVOListForListRulesByIdsOutput {
	s.Dimensions = v
	return s
}

// SetEffectEndAt sets the EffectEndAt field's value.
func (s *RuleVOListForListRulesByIdsOutput) SetEffectEndAt(v string) *RuleVOListForListRulesByIdsOutput {
	s.EffectEndAt = &v
	return s
}

// SetEffectStartAt sets the EffectStartAt field's value.
func (s *RuleVOListForListRulesByIdsOutput) SetEffectStartAt(v string) *RuleVOListForListRulesByIdsOutput {
	s.EffectStartAt = &v
	return s
}

// SetEnableState sets the EnableState field's value.
func (s *RuleVOListForListRulesByIdsOutput) SetEnableState(v string) *RuleVOListForListRulesByIdsOutput {
	s.EnableState = &v
	return s
}

// SetEvaluationCount sets the EvaluationCount field's value.
func (s *RuleVOListForListRulesByIdsOutput) SetEvaluationCount(v int64) *RuleVOListForListRulesByIdsOutput {
	s.EvaluationCount = &v
	return s
}

// SetHandleSuggestion sets the HandleSuggestion field's value.
func (s *RuleVOListForListRulesByIdsOutput) SetHandleSuggestion(v string) *RuleVOListForListRulesByIdsOutput {
	s.HandleSuggestion = &v
	return s
}

// SetId sets the Id field's value.
func (s *RuleVOListForListRulesByIdsOutput) SetId(v string) *RuleVOListForListRulesByIdsOutput {
	s.Id = &v
	return s
}

// SetLevel sets the Level field's value.
func (s *RuleVOListForListRulesByIdsOutput) SetLevel(v string) *RuleVOListForListRulesByIdsOutput {
	s.Level = &v
	return s
}

// SetNamespace sets the Namespace field's value.
func (s *RuleVOListForListRulesByIdsOutput) SetNamespace(v string) *RuleVOListForListRulesByIdsOutput {
	s.Namespace = &v
	return s
}

// SetOriginalDimensions sets the OriginalDimensions field's value.
func (s *RuleVOListForListRulesByIdsOutput) SetOriginalDimensions(v map[string][]*string) *RuleVOListForListRulesByIdsOutput {
	s.OriginalDimensions = v
	return s
}

// SetRegions sets the Regions field's value.
func (s *RuleVOListForListRulesByIdsOutput) SetRegions(v []*string) *RuleVOListForListRulesByIdsOutput {
	s.Regions = v
	return s
}

// SetResourceType sets the ResourceType field's value.
func (s *RuleVOListForListRulesByIdsOutput) SetResourceType(v string) *RuleVOListForListRulesByIdsOutput {
	s.ResourceType = &v
	return s
}

// SetResources sets the Resources field's value.
func (s *RuleVOListForListRulesByIdsOutput) SetResources(v map[string][]*string) *RuleVOListForListRulesByIdsOutput {
	s.Resources = v
	return s
}

// SetRuleExpr sets the RuleExpr field's value.
func (s *RuleVOListForListRulesByIdsOutput) SetRuleExpr(v string) *RuleVOListForListRulesByIdsOutput {
	s.RuleExpr = &v
	return s
}

// SetRuleName sets the RuleName field's value.
func (s *RuleVOListForListRulesByIdsOutput) SetRuleName(v string) *RuleVOListForListRulesByIdsOutput {
	s.RuleName = &v
	return s
}

// SetRuleType sets the RuleType field's value.
func (s *RuleVOListForListRulesByIdsOutput) SetRuleType(v string) *RuleVOListForListRulesByIdsOutput {
	s.RuleType = &v
	return s
}

// SetSilenceTime sets the SilenceTime field's value.
func (s *RuleVOListForListRulesByIdsOutput) SetSilenceTime(v int64) *RuleVOListForListRulesByIdsOutput {
	s.SilenceTime = &v
	return s
}

// SetSubNamespace sets the SubNamespace field's value.
func (s *RuleVOListForListRulesByIdsOutput) SetSubNamespace(v string) *RuleVOListForListRulesByIdsOutput {
	s.SubNamespace = &v
	return s
}

// SetTriggerCondition sets the TriggerCondition field's value.
func (s *RuleVOListForListRulesByIdsOutput) SetTriggerCondition(v string) *RuleVOListForListRulesByIdsOutput {
	s.TriggerCondition = &v
	return s
}

// SetUpdatedAt sets the UpdatedAt field's value.
func (s *RuleVOListForListRulesByIdsOutput) SetUpdatedAt(v string) *RuleVOListForListRulesByIdsOutput {
	s.UpdatedAt = &v
	return s
}

// SetWebHook sets the WebHook field's value.
func (s *RuleVOListForListRulesByIdsOutput) SetWebHook(v string) *RuleVOListForListRulesByIdsOutput {
	s.WebHook = &v
	return s
}

type UpdateRuleInput struct {
	_ struct{} `type:"structure"`

	AccountId *string `type:"string"`

	AlertMethods []*string `type:"list"`

	Asc *bool `type:"boolean"`

	CheckInterval *int64 `type:"integer"`

	Conditions []*ConditionForUpdateRuleInput `type:"list"`

	ContactGroupsIds []*string `type:"list"`

	Description *string `type:"string"`

	Dimensions []*string `type:"list"`

	EffectEndAt *string `type:"string"`

	EffectStartAt *string `type:"string"`

	EnableState *string `type:"string"`

	EvaluationCount *int64 `type:"integer"`

	HandleSuggestion *string `type:"string"`

	Id *string `type:"string"`

	Level *string `type:"string"`

	Namespace *string `type:"string"`

	OrderBy *string `type:"string"`

	OriginalDimensions map[string][]*string `type:"map"`

	PageNumber *int64 `type:"integer"`

	PageSize *int64 `type:"integer"`

	Regions []*string `type:"list"`

	RuleExpr *string `type:"string"`

	RuleName *string `type:"string"`

	RuleType *string `type:"string"`

	SilenceTime *int64 `type:"integer"`

	SubNamespace *string `type:"string"`

	TotalCount *int64 `type:"integer"`

	WebHook *string `type:"string"`
}

// String returns the string representation
func (s UpdateRuleInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateRuleInput) GoString() string {
	return s.String()
}

// SetAccountId sets the AccountId field's value.
func (s *UpdateRuleInput) SetAccountId(v string) *UpdateRuleInput {
	s.AccountId = &v
	return s
}

// SetAlertMethods sets the AlertMethods field's value.
func (s *UpdateRuleInput) SetAlertMethods(v []*string) *UpdateRuleInput {
	s.AlertMethods = v
	return s
}

// SetAsc sets the Asc field's value.
func (s *UpdateRuleInput) SetAsc(v bool) *UpdateRuleInput {
	s.Asc = &v
	return s
}

// SetCheckInterval sets the CheckInterval field's value.
func (s *UpdateRuleInput) SetCheckInterval(v int64) *UpdateRuleInput {
	s.CheckInterval = &v
	return s
}

// SetConditions sets the Conditions field's value.
func (s *UpdateRuleInput) SetConditions(v []*ConditionForUpdateRuleInput) *UpdateRuleInput {
	s.Conditions = v
	return s
}

// SetContactGroupsIds sets the ContactGroupsIds field's value.
func (s *UpdateRuleInput) SetContactGroupsIds(v []*string) *UpdateRuleInput {
	s.ContactGroupsIds = v
	return s
}

// SetDescription sets the Description field's value.
func (s *UpdateRuleInput) SetDescription(v string) *UpdateRuleInput {
	s.Description = &v
	return s
}

// SetDimensions sets the Dimensions field's value.
func (s *UpdateRuleInput) SetDimensions(v []*string) *UpdateRuleInput {
	s.Dimensions = v
	return s
}

// SetEffectEndAt sets the EffectEndAt field's value.
func (s *UpdateRuleInput) SetEffectEndAt(v string) *UpdateRuleInput {
	s.EffectEndAt = &v
	return s
}

// SetEffectStartAt sets the EffectStartAt field's value.
func (s *UpdateRuleInput) SetEffectStartAt(v string) *UpdateRuleInput {
	s.EffectStartAt = &v
	return s
}

// SetEnableState sets the EnableState field's value.
func (s *UpdateRuleInput) SetEnableState(v string) *UpdateRuleInput {
	s.EnableState = &v
	return s
}

// SetEvaluationCount sets the EvaluationCount field's value.
func (s *UpdateRuleInput) SetEvaluationCount(v int64) *UpdateRuleInput {
	s.EvaluationCount = &v
	return s
}

// SetHandleSuggestion sets the HandleSuggestion field's value.
func (s *UpdateRuleInput) SetHandleSuggestion(v string) *UpdateRuleInput {
	s.HandleSuggestion = &v
	return s
}

// SetId sets the Id field's value.
func (s *UpdateRuleInput) SetId(v string) *UpdateRuleInput {
	s.Id = &v
	return s
}

// SetLevel sets the Level field's value.
func (s *UpdateRuleInput) SetLevel(v string) *UpdateRuleInput {
	s.Level = &v
	return s
}

// SetNamespace sets the Namespace field's value.
func (s *UpdateRuleInput) SetNamespace(v string) *UpdateRuleInput {
	s.Namespace = &v
	return s
}

// SetOrderBy sets the OrderBy field's value.
func (s *UpdateRuleInput) SetOrderBy(v string) *UpdateRuleInput {
	s.OrderBy = &v
	return s
}

// SetOriginalDimensions sets the OriginalDimensions field's value.
func (s *UpdateRuleInput) SetOriginalDimensions(v map[string][]*string) *UpdateRuleInput {
	s.OriginalDimensions = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *UpdateRuleInput) SetPageNumber(v int64) *UpdateRuleInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *UpdateRuleInput) SetPageSize(v int64) *UpdateRuleInput {
	s.PageSize = &v
	return s
}

// SetRegions sets the Regions field's value.
func (s *UpdateRuleInput) SetRegions(v []*string) *UpdateRuleInput {
	s.Regions = v
	return s
}

// SetRuleExpr sets the RuleExpr field's value.
func (s *UpdateRuleInput) SetRuleExpr(v string) *UpdateRuleInput {
	s.RuleExpr = &v
	return s
}

// SetRuleName sets the RuleName field's value.
func (s *UpdateRuleInput) SetRuleName(v string) *UpdateRuleInput {
	s.RuleName = &v
	return s
}

// SetRuleType sets the RuleType field's value.
func (s *UpdateRuleInput) SetRuleType(v string) *UpdateRuleInput {
	s.RuleType = &v
	return s
}

// SetSilenceTime sets the SilenceTime field's value.
func (s *UpdateRuleInput) SetSilenceTime(v int64) *UpdateRuleInput {
	s.SilenceTime = &v
	return s
}

// SetSubNamespace sets the SubNamespace field's value.
func (s *UpdateRuleInput) SetSubNamespace(v string) *UpdateRuleInput {
	s.SubNamespace = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *UpdateRuleInput) SetTotalCount(v int64) *UpdateRuleInput {
	s.TotalCount = &v
	return s
}

// SetWebHook sets the WebHook field's value.
func (s *UpdateRuleInput) SetWebHook(v string) *UpdateRuleInput {
	s.WebHook = &v
	return s
}

type UpdateRuleOutput struct {
	_ struct{} `type:"structure"`

	Data []*string `type:"list"`
}

// String returns the string representation
func (s UpdateRuleOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateRuleOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *UpdateRuleOutput) SetData(v []*string) *UpdateRuleOutput {
	s.Data = v
	return s
}
