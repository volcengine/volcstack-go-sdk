// Code generated by volcstack with private/model/cli/gen-api/main.go. DO NOT EDIT.

package autoscaling

import (
	"code.byted.org/iaasng/volcstack-go-sdk/volcstack"
	"code.byted.org/iaasng/volcstack-go-sdk/volcstack/request"
	"code.byted.org/iaasng/volcstack-go-sdk/volcstack/volcstackutil"
)

const opAttachInstancesCommon = "AttachInstances"

// AttachInstancesCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the AttachInstancesCommon operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See AttachInstancesCommon for more information on using the AttachInstancesCommon
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the AttachInstancesCommonRequest method.
//    req, resp := client.AttachInstancesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) AttachInstancesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opAttachInstancesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// AttachInstancesCommon API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation AttachInstancesCommon for usage and error information.
func (c *AUTOSCALING) AttachInstancesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.AttachInstancesCommonRequest(input)
	return out, req.Send()
}

// AttachInstancesCommonWithContext is the same as AttachInstancesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See AttachInstancesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) AttachInstancesCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.AttachInstancesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opAttachInstances = "AttachInstances"

// AttachInstancesRequest generates a "volcstack/request.Request" representing the
// client's request for the AttachInstances operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See AttachInstances for more information on using the AttachInstances
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the AttachInstancesRequest method.
//    req, resp := client.AttachInstancesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) AttachInstancesRequest(input *AttachInstancesInput) (req *request.Request, output *AttachInstancesOutput) {
	op := &request.Operation{
		Name:       opAttachInstances,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &AttachInstancesInput{}
	}

	output = &AttachInstancesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// AttachInstances API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation AttachInstances for usage and error information.
func (c *AUTOSCALING) AttachInstances(input *AttachInstancesInput) (*AttachInstancesOutput, error) {
	req, out := c.AttachInstancesRequest(input)
	return out, req.Send()
}

// AttachInstancesWithContext is the same as AttachInstances with the addition of
// the ability to pass a context and additional request options.
//
// See AttachInstances for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) AttachInstancesWithContext(ctx volcstack.Context, input *AttachInstancesInput, opts ...request.Option) (*AttachInstancesOutput, error) {
	req, out := c.AttachInstancesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opAttachLoadBalancersCommon = "AttachLoadBalancers"

// AttachLoadBalancersCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the AttachLoadBalancersCommon operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See AttachLoadBalancersCommon for more information on using the AttachLoadBalancersCommon
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the AttachLoadBalancersCommonRequest method.
//    req, resp := client.AttachLoadBalancersCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) AttachLoadBalancersCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opAttachLoadBalancersCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// AttachLoadBalancersCommon API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation AttachLoadBalancersCommon for usage and error information.
func (c *AUTOSCALING) AttachLoadBalancersCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.AttachLoadBalancersCommonRequest(input)
	return out, req.Send()
}

// AttachLoadBalancersCommonWithContext is the same as AttachLoadBalancersCommon with the addition of
// the ability to pass a context and additional request options.
//
// See AttachLoadBalancersCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) AttachLoadBalancersCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.AttachLoadBalancersCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opAttachLoadBalancers = "AttachLoadBalancers"

// AttachLoadBalancersRequest generates a "volcstack/request.Request" representing the
// client's request for the AttachLoadBalancers operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See AttachLoadBalancers for more information on using the AttachLoadBalancers
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the AttachLoadBalancersRequest method.
//    req, resp := client.AttachLoadBalancersRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) AttachLoadBalancersRequest(input *AttachLoadBalancersInput) (req *request.Request, output *AttachLoadBalancersOutput) {
	op := &request.Operation{
		Name:       opAttachLoadBalancers,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &AttachLoadBalancersInput{}
	}

	output = &AttachLoadBalancersOutput{}
	req = c.newRequest(op, input, output)

	return
}

// AttachLoadBalancers API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation AttachLoadBalancers for usage and error information.
func (c *AUTOSCALING) AttachLoadBalancers(input *AttachLoadBalancersInput) (*AttachLoadBalancersOutput, error) {
	req, out := c.AttachLoadBalancersRequest(input)
	return out, req.Send()
}

// AttachLoadBalancersWithContext is the same as AttachLoadBalancers with the addition of
// the ability to pass a context and additional request options.
//
// See AttachLoadBalancers for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) AttachLoadBalancersWithContext(ctx volcstack.Context, input *AttachLoadBalancersInput, opts ...request.Option) (*AttachLoadBalancersOutput, error) {
	req, out := c.AttachLoadBalancersRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateScalingConfigurationCommon = "CreateScalingConfiguration"

// CreateScalingConfigurationCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the CreateScalingConfigurationCommon operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See CreateScalingConfigurationCommon for more information on using the CreateScalingConfigurationCommon
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the CreateScalingConfigurationCommonRequest method.
//    req, resp := client.CreateScalingConfigurationCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) CreateScalingConfigurationCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateScalingConfigurationCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// CreateScalingConfigurationCommon API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation CreateScalingConfigurationCommon for usage and error information.
func (c *AUTOSCALING) CreateScalingConfigurationCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateScalingConfigurationCommonRequest(input)
	return out, req.Send()
}

// CreateScalingConfigurationCommonWithContext is the same as CreateScalingConfigurationCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateScalingConfigurationCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) CreateScalingConfigurationCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateScalingConfigurationCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateScalingConfiguration = "CreateScalingConfiguration"

// CreateScalingConfigurationRequest generates a "volcstack/request.Request" representing the
// client's request for the CreateScalingConfiguration operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See CreateScalingConfiguration for more information on using the CreateScalingConfiguration
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the CreateScalingConfigurationRequest method.
//    req, resp := client.CreateScalingConfigurationRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) CreateScalingConfigurationRequest(input *CreateScalingConfigurationInput) (req *request.Request, output *CreateScalingConfigurationOutput) {
	op := &request.Operation{
		Name:       opCreateScalingConfiguration,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateScalingConfigurationInput{}
	}

	output = &CreateScalingConfigurationOutput{}
	req = c.newRequest(op, input, output)

	return
}

// CreateScalingConfiguration API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation CreateScalingConfiguration for usage and error information.
func (c *AUTOSCALING) CreateScalingConfiguration(input *CreateScalingConfigurationInput) (*CreateScalingConfigurationOutput, error) {
	req, out := c.CreateScalingConfigurationRequest(input)
	return out, req.Send()
}

// CreateScalingConfigurationWithContext is the same as CreateScalingConfiguration with the addition of
// the ability to pass a context and additional request options.
//
// See CreateScalingConfiguration for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) CreateScalingConfigurationWithContext(ctx volcstack.Context, input *CreateScalingConfigurationInput, opts ...request.Option) (*CreateScalingConfigurationOutput, error) {
	req, out := c.CreateScalingConfigurationRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateScalingGroupCommon = "CreateScalingGroup"

// CreateScalingGroupCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the CreateScalingGroupCommon operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See CreateScalingGroupCommon for more information on using the CreateScalingGroupCommon
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the CreateScalingGroupCommonRequest method.
//    req, resp := client.CreateScalingGroupCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) CreateScalingGroupCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateScalingGroupCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// CreateScalingGroupCommon API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation CreateScalingGroupCommon for usage and error information.
func (c *AUTOSCALING) CreateScalingGroupCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateScalingGroupCommonRequest(input)
	return out, req.Send()
}

// CreateScalingGroupCommonWithContext is the same as CreateScalingGroupCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateScalingGroupCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) CreateScalingGroupCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateScalingGroupCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateScalingGroup = "CreateScalingGroup"

// CreateScalingGroupRequest generates a "volcstack/request.Request" representing the
// client's request for the CreateScalingGroup operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See CreateScalingGroup for more information on using the CreateScalingGroup
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the CreateScalingGroupRequest method.
//    req, resp := client.CreateScalingGroupRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) CreateScalingGroupRequest(input *CreateScalingGroupInput) (req *request.Request, output *CreateScalingGroupOutput) {
	op := &request.Operation{
		Name:       opCreateScalingGroup,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateScalingGroupInput{}
	}

	output = &CreateScalingGroupOutput{}
	req = c.newRequest(op, input, output)

	return
}

// CreateScalingGroup API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation CreateScalingGroup for usage and error information.
func (c *AUTOSCALING) CreateScalingGroup(input *CreateScalingGroupInput) (*CreateScalingGroupOutput, error) {
	req, out := c.CreateScalingGroupRequest(input)
	return out, req.Send()
}

// CreateScalingGroupWithContext is the same as CreateScalingGroup with the addition of
// the ability to pass a context and additional request options.
//
// See CreateScalingGroup for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) CreateScalingGroupWithContext(ctx volcstack.Context, input *CreateScalingGroupInput, opts ...request.Option) (*CreateScalingGroupOutput, error) {
	req, out := c.CreateScalingGroupRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateScalingPolicyCommon = "CreateScalingPolicy"

// CreateScalingPolicyCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the CreateScalingPolicyCommon operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See CreateScalingPolicyCommon for more information on using the CreateScalingPolicyCommon
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the CreateScalingPolicyCommonRequest method.
//    req, resp := client.CreateScalingPolicyCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) CreateScalingPolicyCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateScalingPolicyCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// CreateScalingPolicyCommon API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation CreateScalingPolicyCommon for usage and error information.
func (c *AUTOSCALING) CreateScalingPolicyCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateScalingPolicyCommonRequest(input)
	return out, req.Send()
}

// CreateScalingPolicyCommonWithContext is the same as CreateScalingPolicyCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateScalingPolicyCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) CreateScalingPolicyCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateScalingPolicyCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateScalingPolicy = "CreateScalingPolicy"

// CreateScalingPolicyRequest generates a "volcstack/request.Request" representing the
// client's request for the CreateScalingPolicy operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See CreateScalingPolicy for more information on using the CreateScalingPolicy
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the CreateScalingPolicyRequest method.
//    req, resp := client.CreateScalingPolicyRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) CreateScalingPolicyRequest(input *CreateScalingPolicyInput) (req *request.Request, output *CreateScalingPolicyOutput) {
	op := &request.Operation{
		Name:       opCreateScalingPolicy,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateScalingPolicyInput{}
	}

	output = &CreateScalingPolicyOutput{}
	req = c.newRequest(op, input, output)

	return
}

// CreateScalingPolicy API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation CreateScalingPolicy for usage and error information.
func (c *AUTOSCALING) CreateScalingPolicy(input *CreateScalingPolicyInput) (*CreateScalingPolicyOutput, error) {
	req, out := c.CreateScalingPolicyRequest(input)
	return out, req.Send()
}

// CreateScalingPolicyWithContext is the same as CreateScalingPolicy with the addition of
// the ability to pass a context and additional request options.
//
// See CreateScalingPolicy for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) CreateScalingPolicyWithContext(ctx volcstack.Context, input *CreateScalingPolicyInput, opts ...request.Option) (*CreateScalingPolicyOutput, error) {
	req, out := c.CreateScalingPolicyRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteScalingConfigurationCommon = "DeleteScalingConfiguration"

// DeleteScalingConfigurationCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the DeleteScalingConfigurationCommon operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DeleteScalingConfigurationCommon for more information on using the DeleteScalingConfigurationCommon
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DeleteScalingConfigurationCommonRequest method.
//    req, resp := client.DeleteScalingConfigurationCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) DeleteScalingConfigurationCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteScalingConfigurationCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DeleteScalingConfigurationCommon API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation DeleteScalingConfigurationCommon for usage and error information.
func (c *AUTOSCALING) DeleteScalingConfigurationCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteScalingConfigurationCommonRequest(input)
	return out, req.Send()
}

// DeleteScalingConfigurationCommonWithContext is the same as DeleteScalingConfigurationCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteScalingConfigurationCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) DeleteScalingConfigurationCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteScalingConfigurationCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteScalingConfiguration = "DeleteScalingConfiguration"

// DeleteScalingConfigurationRequest generates a "volcstack/request.Request" representing the
// client's request for the DeleteScalingConfiguration operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DeleteScalingConfiguration for more information on using the DeleteScalingConfiguration
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DeleteScalingConfigurationRequest method.
//    req, resp := client.DeleteScalingConfigurationRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) DeleteScalingConfigurationRequest(input *DeleteScalingConfigurationInput) (req *request.Request, output *DeleteScalingConfigurationOutput) {
	op := &request.Operation{
		Name:       opDeleteScalingConfiguration,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteScalingConfigurationInput{}
	}

	output = &DeleteScalingConfigurationOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DeleteScalingConfiguration API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation DeleteScalingConfiguration for usage and error information.
func (c *AUTOSCALING) DeleteScalingConfiguration(input *DeleteScalingConfigurationInput) (*DeleteScalingConfigurationOutput, error) {
	req, out := c.DeleteScalingConfigurationRequest(input)
	return out, req.Send()
}

// DeleteScalingConfigurationWithContext is the same as DeleteScalingConfiguration with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteScalingConfiguration for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) DeleteScalingConfigurationWithContext(ctx volcstack.Context, input *DeleteScalingConfigurationInput, opts ...request.Option) (*DeleteScalingConfigurationOutput, error) {
	req, out := c.DeleteScalingConfigurationRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteScalingGroupCommon = "DeleteScalingGroup"

// DeleteScalingGroupCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the DeleteScalingGroupCommon operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DeleteScalingGroupCommon for more information on using the DeleteScalingGroupCommon
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DeleteScalingGroupCommonRequest method.
//    req, resp := client.DeleteScalingGroupCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) DeleteScalingGroupCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteScalingGroupCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DeleteScalingGroupCommon API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation DeleteScalingGroupCommon for usage and error information.
func (c *AUTOSCALING) DeleteScalingGroupCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteScalingGroupCommonRequest(input)
	return out, req.Send()
}

// DeleteScalingGroupCommonWithContext is the same as DeleteScalingGroupCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteScalingGroupCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) DeleteScalingGroupCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteScalingGroupCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteScalingGroup = "DeleteScalingGroup"

// DeleteScalingGroupRequest generates a "volcstack/request.Request" representing the
// client's request for the DeleteScalingGroup operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DeleteScalingGroup for more information on using the DeleteScalingGroup
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DeleteScalingGroupRequest method.
//    req, resp := client.DeleteScalingGroupRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) DeleteScalingGroupRequest(input *DeleteScalingGroupInput) (req *request.Request, output *DeleteScalingGroupOutput) {
	op := &request.Operation{
		Name:       opDeleteScalingGroup,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteScalingGroupInput{}
	}

	output = &DeleteScalingGroupOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DeleteScalingGroup API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation DeleteScalingGroup for usage and error information.
func (c *AUTOSCALING) DeleteScalingGroup(input *DeleteScalingGroupInput) (*DeleteScalingGroupOutput, error) {
	req, out := c.DeleteScalingGroupRequest(input)
	return out, req.Send()
}

// DeleteScalingGroupWithContext is the same as DeleteScalingGroup with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteScalingGroup for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) DeleteScalingGroupWithContext(ctx volcstack.Context, input *DeleteScalingGroupInput, opts ...request.Option) (*DeleteScalingGroupOutput, error) {
	req, out := c.DeleteScalingGroupRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteScalingPolicyCommon = "DeleteScalingPolicy"

// DeleteScalingPolicyCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the DeleteScalingPolicyCommon operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DeleteScalingPolicyCommon for more information on using the DeleteScalingPolicyCommon
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DeleteScalingPolicyCommonRequest method.
//    req, resp := client.DeleteScalingPolicyCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) DeleteScalingPolicyCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteScalingPolicyCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DeleteScalingPolicyCommon API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation DeleteScalingPolicyCommon for usage and error information.
func (c *AUTOSCALING) DeleteScalingPolicyCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteScalingPolicyCommonRequest(input)
	return out, req.Send()
}

// DeleteScalingPolicyCommonWithContext is the same as DeleteScalingPolicyCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteScalingPolicyCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) DeleteScalingPolicyCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteScalingPolicyCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteScalingPolicy = "DeleteScalingPolicy"

// DeleteScalingPolicyRequest generates a "volcstack/request.Request" representing the
// client's request for the DeleteScalingPolicy operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DeleteScalingPolicy for more information on using the DeleteScalingPolicy
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DeleteScalingPolicyRequest method.
//    req, resp := client.DeleteScalingPolicyRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) DeleteScalingPolicyRequest(input *DeleteScalingPolicyInput) (req *request.Request, output *DeleteScalingPolicyOutput) {
	op := &request.Operation{
		Name:       opDeleteScalingPolicy,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteScalingPolicyInput{}
	}

	output = &DeleteScalingPolicyOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DeleteScalingPolicy API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation DeleteScalingPolicy for usage and error information.
func (c *AUTOSCALING) DeleteScalingPolicy(input *DeleteScalingPolicyInput) (*DeleteScalingPolicyOutput, error) {
	req, out := c.DeleteScalingPolicyRequest(input)
	return out, req.Send()
}

// DeleteScalingPolicyWithContext is the same as DeleteScalingPolicy with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteScalingPolicy for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) DeleteScalingPolicyWithContext(ctx volcstack.Context, input *DeleteScalingPolicyInput, opts ...request.Option) (*DeleteScalingPolicyOutput, error) {
	req, out := c.DeleteScalingPolicyRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeScalingActivitiesCommon = "DescribeScalingActivities"

// DescribeScalingActivitiesCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the DescribeScalingActivitiesCommon operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeScalingActivitiesCommon for more information on using the DescribeScalingActivitiesCommon
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DescribeScalingActivitiesCommonRequest method.
//    req, resp := client.DescribeScalingActivitiesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) DescribeScalingActivitiesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeScalingActivitiesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeScalingActivitiesCommon API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation DescribeScalingActivitiesCommon for usage and error information.
func (c *AUTOSCALING) DescribeScalingActivitiesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeScalingActivitiesCommonRequest(input)
	return out, req.Send()
}

// DescribeScalingActivitiesCommonWithContext is the same as DescribeScalingActivitiesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeScalingActivitiesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) DescribeScalingActivitiesCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeScalingActivitiesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeScalingActivities = "DescribeScalingActivities"

// DescribeScalingActivitiesRequest generates a "volcstack/request.Request" representing the
// client's request for the DescribeScalingActivities operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeScalingActivities for more information on using the DescribeScalingActivities
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DescribeScalingActivitiesRequest method.
//    req, resp := client.DescribeScalingActivitiesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) DescribeScalingActivitiesRequest(input *DescribeScalingActivitiesInput) (req *request.Request, output *DescribeScalingActivitiesOutput) {
	op := &request.Operation{
		Name:       opDescribeScalingActivities,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeScalingActivitiesInput{}
	}

	output = &DescribeScalingActivitiesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeScalingActivities API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation DescribeScalingActivities for usage and error information.
func (c *AUTOSCALING) DescribeScalingActivities(input *DescribeScalingActivitiesInput) (*DescribeScalingActivitiesOutput, error) {
	req, out := c.DescribeScalingActivitiesRequest(input)
	return out, req.Send()
}

// DescribeScalingActivitiesWithContext is the same as DescribeScalingActivities with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeScalingActivities for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) DescribeScalingActivitiesWithContext(ctx volcstack.Context, input *DescribeScalingActivitiesInput, opts ...request.Option) (*DescribeScalingActivitiesOutput, error) {
	req, out := c.DescribeScalingActivitiesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeScalingConfigurationsCommon = "DescribeScalingConfigurations"

// DescribeScalingConfigurationsCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the DescribeScalingConfigurationsCommon operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeScalingConfigurationsCommon for more information on using the DescribeScalingConfigurationsCommon
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DescribeScalingConfigurationsCommonRequest method.
//    req, resp := client.DescribeScalingConfigurationsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) DescribeScalingConfigurationsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeScalingConfigurationsCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeScalingConfigurationsCommon API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation DescribeScalingConfigurationsCommon for usage and error information.
func (c *AUTOSCALING) DescribeScalingConfigurationsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeScalingConfigurationsCommonRequest(input)
	return out, req.Send()
}

// DescribeScalingConfigurationsCommonWithContext is the same as DescribeScalingConfigurationsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeScalingConfigurationsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) DescribeScalingConfigurationsCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeScalingConfigurationsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeScalingConfigurations = "DescribeScalingConfigurations"

// DescribeScalingConfigurationsRequest generates a "volcstack/request.Request" representing the
// client's request for the DescribeScalingConfigurations operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeScalingConfigurations for more information on using the DescribeScalingConfigurations
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DescribeScalingConfigurationsRequest method.
//    req, resp := client.DescribeScalingConfigurationsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) DescribeScalingConfigurationsRequest(input *DescribeScalingConfigurationsInput) (req *request.Request, output *DescribeScalingConfigurationsOutput) {
	op := &request.Operation{
		Name:       opDescribeScalingConfigurations,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeScalingConfigurationsInput{}
	}

	output = &DescribeScalingConfigurationsOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeScalingConfigurations API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation DescribeScalingConfigurations for usage and error information.
func (c *AUTOSCALING) DescribeScalingConfigurations(input *DescribeScalingConfigurationsInput) (*DescribeScalingConfigurationsOutput, error) {
	req, out := c.DescribeScalingConfigurationsRequest(input)
	return out, req.Send()
}

// DescribeScalingConfigurationsWithContext is the same as DescribeScalingConfigurations with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeScalingConfigurations for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) DescribeScalingConfigurationsWithContext(ctx volcstack.Context, input *DescribeScalingConfigurationsInput, opts ...request.Option) (*DescribeScalingConfigurationsOutput, error) {
	req, out := c.DescribeScalingConfigurationsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeScalingGroupsCommon = "DescribeScalingGroups"

// DescribeScalingGroupsCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the DescribeScalingGroupsCommon operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeScalingGroupsCommon for more information on using the DescribeScalingGroupsCommon
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DescribeScalingGroupsCommonRequest method.
//    req, resp := client.DescribeScalingGroupsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) DescribeScalingGroupsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeScalingGroupsCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeScalingGroupsCommon API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation DescribeScalingGroupsCommon for usage and error information.
func (c *AUTOSCALING) DescribeScalingGroupsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeScalingGroupsCommonRequest(input)
	return out, req.Send()
}

// DescribeScalingGroupsCommonWithContext is the same as DescribeScalingGroupsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeScalingGroupsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) DescribeScalingGroupsCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeScalingGroupsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeScalingGroups = "DescribeScalingGroups"

// DescribeScalingGroupsRequest generates a "volcstack/request.Request" representing the
// client's request for the DescribeScalingGroups operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeScalingGroups for more information on using the DescribeScalingGroups
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DescribeScalingGroupsRequest method.
//    req, resp := client.DescribeScalingGroupsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) DescribeScalingGroupsRequest(input *DescribeScalingGroupsInput) (req *request.Request, output *DescribeScalingGroupsOutput) {
	op := &request.Operation{
		Name:       opDescribeScalingGroups,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeScalingGroupsInput{}
	}

	output = &DescribeScalingGroupsOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeScalingGroups API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation DescribeScalingGroups for usage and error information.
func (c *AUTOSCALING) DescribeScalingGroups(input *DescribeScalingGroupsInput) (*DescribeScalingGroupsOutput, error) {
	req, out := c.DescribeScalingGroupsRequest(input)
	return out, req.Send()
}

// DescribeScalingGroupsWithContext is the same as DescribeScalingGroups with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeScalingGroups for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) DescribeScalingGroupsWithContext(ctx volcstack.Context, input *DescribeScalingGroupsInput, opts ...request.Option) (*DescribeScalingGroupsOutput, error) {
	req, out := c.DescribeScalingGroupsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeScalingInstancesCommon = "DescribeScalingInstances"

// DescribeScalingInstancesCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the DescribeScalingInstancesCommon operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeScalingInstancesCommon for more information on using the DescribeScalingInstancesCommon
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DescribeScalingInstancesCommonRequest method.
//    req, resp := client.DescribeScalingInstancesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) DescribeScalingInstancesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeScalingInstancesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeScalingInstancesCommon API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation DescribeScalingInstancesCommon for usage and error information.
func (c *AUTOSCALING) DescribeScalingInstancesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeScalingInstancesCommonRequest(input)
	return out, req.Send()
}

// DescribeScalingInstancesCommonWithContext is the same as DescribeScalingInstancesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeScalingInstancesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) DescribeScalingInstancesCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeScalingInstancesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeScalingInstances = "DescribeScalingInstances"

// DescribeScalingInstancesRequest generates a "volcstack/request.Request" representing the
// client's request for the DescribeScalingInstances operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeScalingInstances for more information on using the DescribeScalingInstances
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DescribeScalingInstancesRequest method.
//    req, resp := client.DescribeScalingInstancesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) DescribeScalingInstancesRequest(input *DescribeScalingInstancesInput) (req *request.Request, output *DescribeScalingInstancesOutput) {
	op := &request.Operation{
		Name:       opDescribeScalingInstances,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeScalingInstancesInput{}
	}

	output = &DescribeScalingInstancesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeScalingInstances API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation DescribeScalingInstances for usage and error information.
func (c *AUTOSCALING) DescribeScalingInstances(input *DescribeScalingInstancesInput) (*DescribeScalingInstancesOutput, error) {
	req, out := c.DescribeScalingInstancesRequest(input)
	return out, req.Send()
}

// DescribeScalingInstancesWithContext is the same as DescribeScalingInstances with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeScalingInstances for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) DescribeScalingInstancesWithContext(ctx volcstack.Context, input *DescribeScalingInstancesInput, opts ...request.Option) (*DescribeScalingInstancesOutput, error) {
	req, out := c.DescribeScalingInstancesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeScalingPoliciesCommon = "DescribeScalingPolicies"

// DescribeScalingPoliciesCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the DescribeScalingPoliciesCommon operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeScalingPoliciesCommon for more information on using the DescribeScalingPoliciesCommon
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DescribeScalingPoliciesCommonRequest method.
//    req, resp := client.DescribeScalingPoliciesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) DescribeScalingPoliciesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeScalingPoliciesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeScalingPoliciesCommon API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation DescribeScalingPoliciesCommon for usage and error information.
func (c *AUTOSCALING) DescribeScalingPoliciesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeScalingPoliciesCommonRequest(input)
	return out, req.Send()
}

// DescribeScalingPoliciesCommonWithContext is the same as DescribeScalingPoliciesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeScalingPoliciesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) DescribeScalingPoliciesCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeScalingPoliciesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeScalingPolicies = "DescribeScalingPolicies"

// DescribeScalingPoliciesRequest generates a "volcstack/request.Request" representing the
// client's request for the DescribeScalingPolicies operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeScalingPolicies for more information on using the DescribeScalingPolicies
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DescribeScalingPoliciesRequest method.
//    req, resp := client.DescribeScalingPoliciesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) DescribeScalingPoliciesRequest(input *DescribeScalingPoliciesInput) (req *request.Request, output *DescribeScalingPoliciesOutput) {
	op := &request.Operation{
		Name:       opDescribeScalingPolicies,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeScalingPoliciesInput{}
	}

	output = &DescribeScalingPoliciesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeScalingPolicies API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation DescribeScalingPolicies for usage and error information.
func (c *AUTOSCALING) DescribeScalingPolicies(input *DescribeScalingPoliciesInput) (*DescribeScalingPoliciesOutput, error) {
	req, out := c.DescribeScalingPoliciesRequest(input)
	return out, req.Send()
}

// DescribeScalingPoliciesWithContext is the same as DescribeScalingPolicies with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeScalingPolicies for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) DescribeScalingPoliciesWithContext(ctx volcstack.Context, input *DescribeScalingPoliciesInput, opts ...request.Option) (*DescribeScalingPoliciesOutput, error) {
	req, out := c.DescribeScalingPoliciesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDetachInstancesCommon = "DetachInstances"

// DetachInstancesCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the DetachInstancesCommon operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DetachInstancesCommon for more information on using the DetachInstancesCommon
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DetachInstancesCommonRequest method.
//    req, resp := client.DetachInstancesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) DetachInstancesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDetachInstancesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DetachInstancesCommon API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation DetachInstancesCommon for usage and error information.
func (c *AUTOSCALING) DetachInstancesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DetachInstancesCommonRequest(input)
	return out, req.Send()
}

// DetachInstancesCommonWithContext is the same as DetachInstancesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DetachInstancesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) DetachInstancesCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DetachInstancesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDetachInstances = "DetachInstances"

// DetachInstancesRequest generates a "volcstack/request.Request" representing the
// client's request for the DetachInstances operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DetachInstances for more information on using the DetachInstances
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DetachInstancesRequest method.
//    req, resp := client.DetachInstancesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) DetachInstancesRequest(input *DetachInstancesInput) (req *request.Request, output *DetachInstancesOutput) {
	op := &request.Operation{
		Name:       opDetachInstances,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DetachInstancesInput{}
	}

	output = &DetachInstancesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DetachInstances API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation DetachInstances for usage and error information.
func (c *AUTOSCALING) DetachInstances(input *DetachInstancesInput) (*DetachInstancesOutput, error) {
	req, out := c.DetachInstancesRequest(input)
	return out, req.Send()
}

// DetachInstancesWithContext is the same as DetachInstances with the addition of
// the ability to pass a context and additional request options.
//
// See DetachInstances for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) DetachInstancesWithContext(ctx volcstack.Context, input *DetachInstancesInput, opts ...request.Option) (*DetachInstancesOutput, error) {
	req, out := c.DetachInstancesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDetachLoadBalancersCommon = "DetachLoadBalancers"

// DetachLoadBalancersCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the DetachLoadBalancersCommon operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DetachLoadBalancersCommon for more information on using the DetachLoadBalancersCommon
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DetachLoadBalancersCommonRequest method.
//    req, resp := client.DetachLoadBalancersCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) DetachLoadBalancersCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDetachLoadBalancersCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DetachLoadBalancersCommon API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation DetachLoadBalancersCommon for usage and error information.
func (c *AUTOSCALING) DetachLoadBalancersCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DetachLoadBalancersCommonRequest(input)
	return out, req.Send()
}

// DetachLoadBalancersCommonWithContext is the same as DetachLoadBalancersCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DetachLoadBalancersCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) DetachLoadBalancersCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DetachLoadBalancersCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDetachLoadBalancers = "DetachLoadBalancers"

// DetachLoadBalancersRequest generates a "volcstack/request.Request" representing the
// client's request for the DetachLoadBalancers operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DetachLoadBalancers for more information on using the DetachLoadBalancers
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DetachLoadBalancersRequest method.
//    req, resp := client.DetachLoadBalancersRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) DetachLoadBalancersRequest(input *DetachLoadBalancersInput) (req *request.Request, output *DetachLoadBalancersOutput) {
	op := &request.Operation{
		Name:       opDetachLoadBalancers,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DetachLoadBalancersInput{}
	}

	output = &DetachLoadBalancersOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DetachLoadBalancers API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation DetachLoadBalancers for usage and error information.
func (c *AUTOSCALING) DetachLoadBalancers(input *DetachLoadBalancersInput) (*DetachLoadBalancersOutput, error) {
	req, out := c.DetachLoadBalancersRequest(input)
	return out, req.Send()
}

// DetachLoadBalancersWithContext is the same as DetachLoadBalancers with the addition of
// the ability to pass a context and additional request options.
//
// See DetachLoadBalancers for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) DetachLoadBalancersWithContext(ctx volcstack.Context, input *DetachLoadBalancersInput, opts ...request.Option) (*DetachLoadBalancersOutput, error) {
	req, out := c.DetachLoadBalancersRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDisableScalingGroupCommon = "DisableScalingGroup"

// DisableScalingGroupCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the DisableScalingGroupCommon operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DisableScalingGroupCommon for more information on using the DisableScalingGroupCommon
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DisableScalingGroupCommonRequest method.
//    req, resp := client.DisableScalingGroupCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) DisableScalingGroupCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDisableScalingGroupCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DisableScalingGroupCommon API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation DisableScalingGroupCommon for usage and error information.
func (c *AUTOSCALING) DisableScalingGroupCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DisableScalingGroupCommonRequest(input)
	return out, req.Send()
}

// DisableScalingGroupCommonWithContext is the same as DisableScalingGroupCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DisableScalingGroupCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) DisableScalingGroupCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DisableScalingGroupCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDisableScalingGroup = "DisableScalingGroup"

// DisableScalingGroupRequest generates a "volcstack/request.Request" representing the
// client's request for the DisableScalingGroup operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DisableScalingGroup for more information on using the DisableScalingGroup
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DisableScalingGroupRequest method.
//    req, resp := client.DisableScalingGroupRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) DisableScalingGroupRequest(input *DisableScalingGroupInput) (req *request.Request, output *DisableScalingGroupOutput) {
	op := &request.Operation{
		Name:       opDisableScalingGroup,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DisableScalingGroupInput{}
	}

	output = &DisableScalingGroupOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DisableScalingGroup API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation DisableScalingGroup for usage and error information.
func (c *AUTOSCALING) DisableScalingGroup(input *DisableScalingGroupInput) (*DisableScalingGroupOutput, error) {
	req, out := c.DisableScalingGroupRequest(input)
	return out, req.Send()
}

// DisableScalingGroupWithContext is the same as DisableScalingGroup with the addition of
// the ability to pass a context and additional request options.
//
// See DisableScalingGroup for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) DisableScalingGroupWithContext(ctx volcstack.Context, input *DisableScalingGroupInput, opts ...request.Option) (*DisableScalingGroupOutput, error) {
	req, out := c.DisableScalingGroupRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opEnableScalingConfigurationCommon = "EnableScalingConfiguration"

// EnableScalingConfigurationCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the EnableScalingConfigurationCommon operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See EnableScalingConfigurationCommon for more information on using the EnableScalingConfigurationCommon
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the EnableScalingConfigurationCommonRequest method.
//    req, resp := client.EnableScalingConfigurationCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) EnableScalingConfigurationCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opEnableScalingConfigurationCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// EnableScalingConfigurationCommon API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation EnableScalingConfigurationCommon for usage and error information.
func (c *AUTOSCALING) EnableScalingConfigurationCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.EnableScalingConfigurationCommonRequest(input)
	return out, req.Send()
}

// EnableScalingConfigurationCommonWithContext is the same as EnableScalingConfigurationCommon with the addition of
// the ability to pass a context and additional request options.
//
// See EnableScalingConfigurationCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) EnableScalingConfigurationCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.EnableScalingConfigurationCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opEnableScalingConfiguration = "EnableScalingConfiguration"

// EnableScalingConfigurationRequest generates a "volcstack/request.Request" representing the
// client's request for the EnableScalingConfiguration operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See EnableScalingConfiguration for more information on using the EnableScalingConfiguration
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the EnableScalingConfigurationRequest method.
//    req, resp := client.EnableScalingConfigurationRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) EnableScalingConfigurationRequest(input *EnableScalingConfigurationInput) (req *request.Request, output *EnableScalingConfigurationOutput) {
	op := &request.Operation{
		Name:       opEnableScalingConfiguration,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &EnableScalingConfigurationInput{}
	}

	output = &EnableScalingConfigurationOutput{}
	req = c.newRequest(op, input, output)

	return
}

// EnableScalingConfiguration API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation EnableScalingConfiguration for usage and error information.
func (c *AUTOSCALING) EnableScalingConfiguration(input *EnableScalingConfigurationInput) (*EnableScalingConfigurationOutput, error) {
	req, out := c.EnableScalingConfigurationRequest(input)
	return out, req.Send()
}

// EnableScalingConfigurationWithContext is the same as EnableScalingConfiguration with the addition of
// the ability to pass a context and additional request options.
//
// See EnableScalingConfiguration for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) EnableScalingConfigurationWithContext(ctx volcstack.Context, input *EnableScalingConfigurationInput, opts ...request.Option) (*EnableScalingConfigurationOutput, error) {
	req, out := c.EnableScalingConfigurationRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opEnableScalingGroupCommon = "EnableScalingGroup"

// EnableScalingGroupCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the EnableScalingGroupCommon operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See EnableScalingGroupCommon for more information on using the EnableScalingGroupCommon
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the EnableScalingGroupCommonRequest method.
//    req, resp := client.EnableScalingGroupCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) EnableScalingGroupCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opEnableScalingGroupCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// EnableScalingGroupCommon API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation EnableScalingGroupCommon for usage and error information.
func (c *AUTOSCALING) EnableScalingGroupCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.EnableScalingGroupCommonRequest(input)
	return out, req.Send()
}

// EnableScalingGroupCommonWithContext is the same as EnableScalingGroupCommon with the addition of
// the ability to pass a context and additional request options.
//
// See EnableScalingGroupCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) EnableScalingGroupCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.EnableScalingGroupCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opEnableScalingGroup = "EnableScalingGroup"

// EnableScalingGroupRequest generates a "volcstack/request.Request" representing the
// client's request for the EnableScalingGroup operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See EnableScalingGroup for more information on using the EnableScalingGroup
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the EnableScalingGroupRequest method.
//    req, resp := client.EnableScalingGroupRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) EnableScalingGroupRequest(input *EnableScalingGroupInput) (req *request.Request, output *EnableScalingGroupOutput) {
	op := &request.Operation{
		Name:       opEnableScalingGroup,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &EnableScalingGroupInput{}
	}

	output = &EnableScalingGroupOutput{}
	req = c.newRequest(op, input, output)

	return
}

// EnableScalingGroup API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation EnableScalingGroup for usage and error information.
func (c *AUTOSCALING) EnableScalingGroup(input *EnableScalingGroupInput) (*EnableScalingGroupOutput, error) {
	req, out := c.EnableScalingGroupRequest(input)
	return out, req.Send()
}

// EnableScalingGroupWithContext is the same as EnableScalingGroup with the addition of
// the ability to pass a context and additional request options.
//
// See EnableScalingGroup for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) EnableScalingGroupWithContext(ctx volcstack.Context, input *EnableScalingGroupInput, opts ...request.Option) (*EnableScalingGroupOutput, error) {
	req, out := c.EnableScalingGroupRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyInstancesProtectionCommon = "ModifyInstancesProtection"

// ModifyInstancesProtectionCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the ModifyInstancesProtectionCommon operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ModifyInstancesProtectionCommon for more information on using the ModifyInstancesProtectionCommon
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the ModifyInstancesProtectionCommonRequest method.
//    req, resp := client.ModifyInstancesProtectionCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) ModifyInstancesProtectionCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyInstancesProtectionCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyInstancesProtectionCommon API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation ModifyInstancesProtectionCommon for usage and error information.
func (c *AUTOSCALING) ModifyInstancesProtectionCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyInstancesProtectionCommonRequest(input)
	return out, req.Send()
}

// ModifyInstancesProtectionCommonWithContext is the same as ModifyInstancesProtectionCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyInstancesProtectionCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) ModifyInstancesProtectionCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyInstancesProtectionCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyInstancesProtection = "ModifyInstancesProtection"

// ModifyInstancesProtectionRequest generates a "volcstack/request.Request" representing the
// client's request for the ModifyInstancesProtection operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ModifyInstancesProtection for more information on using the ModifyInstancesProtection
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the ModifyInstancesProtectionRequest method.
//    req, resp := client.ModifyInstancesProtectionRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) ModifyInstancesProtectionRequest(input *ModifyInstancesProtectionInput) (req *request.Request, output *ModifyInstancesProtectionOutput) {
	op := &request.Operation{
		Name:       opModifyInstancesProtection,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyInstancesProtectionInput{}
	}

	output = &ModifyInstancesProtectionOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyInstancesProtection API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation ModifyInstancesProtection for usage and error information.
func (c *AUTOSCALING) ModifyInstancesProtection(input *ModifyInstancesProtectionInput) (*ModifyInstancesProtectionOutput, error) {
	req, out := c.ModifyInstancesProtectionRequest(input)
	return out, req.Send()
}

// ModifyInstancesProtectionWithContext is the same as ModifyInstancesProtection with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyInstancesProtection for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) ModifyInstancesProtectionWithContext(ctx volcstack.Context, input *ModifyInstancesProtectionInput, opts ...request.Option) (*ModifyInstancesProtectionOutput, error) {
	req, out := c.ModifyInstancesProtectionRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyScalingConfigurationCommon = "ModifyScalingConfiguration"

// ModifyScalingConfigurationCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the ModifyScalingConfigurationCommon operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ModifyScalingConfigurationCommon for more information on using the ModifyScalingConfigurationCommon
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the ModifyScalingConfigurationCommonRequest method.
//    req, resp := client.ModifyScalingConfigurationCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) ModifyScalingConfigurationCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyScalingConfigurationCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyScalingConfigurationCommon API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation ModifyScalingConfigurationCommon for usage and error information.
func (c *AUTOSCALING) ModifyScalingConfigurationCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyScalingConfigurationCommonRequest(input)
	return out, req.Send()
}

// ModifyScalingConfigurationCommonWithContext is the same as ModifyScalingConfigurationCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyScalingConfigurationCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) ModifyScalingConfigurationCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyScalingConfigurationCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyScalingConfiguration = "ModifyScalingConfiguration"

// ModifyScalingConfigurationRequest generates a "volcstack/request.Request" representing the
// client's request for the ModifyScalingConfiguration operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ModifyScalingConfiguration for more information on using the ModifyScalingConfiguration
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the ModifyScalingConfigurationRequest method.
//    req, resp := client.ModifyScalingConfigurationRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) ModifyScalingConfigurationRequest(input *ModifyScalingConfigurationInput) (req *request.Request, output *ModifyScalingConfigurationOutput) {
	op := &request.Operation{
		Name:       opModifyScalingConfiguration,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyScalingConfigurationInput{}
	}

	output = &ModifyScalingConfigurationOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyScalingConfiguration API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation ModifyScalingConfiguration for usage and error information.
func (c *AUTOSCALING) ModifyScalingConfiguration(input *ModifyScalingConfigurationInput) (*ModifyScalingConfigurationOutput, error) {
	req, out := c.ModifyScalingConfigurationRequest(input)
	return out, req.Send()
}

// ModifyScalingConfigurationWithContext is the same as ModifyScalingConfiguration with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyScalingConfiguration for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) ModifyScalingConfigurationWithContext(ctx volcstack.Context, input *ModifyScalingConfigurationInput, opts ...request.Option) (*ModifyScalingConfigurationOutput, error) {
	req, out := c.ModifyScalingConfigurationRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyScalingGroupCommon = "ModifyScalingGroup"

// ModifyScalingGroupCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the ModifyScalingGroupCommon operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ModifyScalingGroupCommon for more information on using the ModifyScalingGroupCommon
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the ModifyScalingGroupCommonRequest method.
//    req, resp := client.ModifyScalingGroupCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) ModifyScalingGroupCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyScalingGroupCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyScalingGroupCommon API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation ModifyScalingGroupCommon for usage and error information.
func (c *AUTOSCALING) ModifyScalingGroupCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyScalingGroupCommonRequest(input)
	return out, req.Send()
}

// ModifyScalingGroupCommonWithContext is the same as ModifyScalingGroupCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyScalingGroupCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) ModifyScalingGroupCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyScalingGroupCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyScalingGroup = "ModifyScalingGroup"

// ModifyScalingGroupRequest generates a "volcstack/request.Request" representing the
// client's request for the ModifyScalingGroup operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ModifyScalingGroup for more information on using the ModifyScalingGroup
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the ModifyScalingGroupRequest method.
//    req, resp := client.ModifyScalingGroupRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) ModifyScalingGroupRequest(input *ModifyScalingGroupInput) (req *request.Request, output *ModifyScalingGroupOutput) {
	op := &request.Operation{
		Name:       opModifyScalingGroup,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyScalingGroupInput{}
	}

	output = &ModifyScalingGroupOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyScalingGroup API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation ModifyScalingGroup for usage and error information.
func (c *AUTOSCALING) ModifyScalingGroup(input *ModifyScalingGroupInput) (*ModifyScalingGroupOutput, error) {
	req, out := c.ModifyScalingGroupRequest(input)
	return out, req.Send()
}

// ModifyScalingGroupWithContext is the same as ModifyScalingGroup with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyScalingGroup for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) ModifyScalingGroupWithContext(ctx volcstack.Context, input *ModifyScalingGroupInput, opts ...request.Option) (*ModifyScalingGroupOutput, error) {
	req, out := c.ModifyScalingGroupRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyScalingPolicyCommon = "ModifyScalingPolicy"

// ModifyScalingPolicyCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the ModifyScalingPolicyCommon operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ModifyScalingPolicyCommon for more information on using the ModifyScalingPolicyCommon
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the ModifyScalingPolicyCommonRequest method.
//    req, resp := client.ModifyScalingPolicyCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) ModifyScalingPolicyCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyScalingPolicyCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyScalingPolicyCommon API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation ModifyScalingPolicyCommon for usage and error information.
func (c *AUTOSCALING) ModifyScalingPolicyCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyScalingPolicyCommonRequest(input)
	return out, req.Send()
}

// ModifyScalingPolicyCommonWithContext is the same as ModifyScalingPolicyCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyScalingPolicyCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) ModifyScalingPolicyCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyScalingPolicyCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyScalingPolicy = "ModifyScalingPolicy"

// ModifyScalingPolicyRequest generates a "volcstack/request.Request" representing the
// client's request for the ModifyScalingPolicy operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ModifyScalingPolicy for more information on using the ModifyScalingPolicy
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the ModifyScalingPolicyRequest method.
//    req, resp := client.ModifyScalingPolicyRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) ModifyScalingPolicyRequest(input *ModifyScalingPolicyInput) (req *request.Request, output *ModifyScalingPolicyOutput) {
	op := &request.Operation{
		Name:       opModifyScalingPolicy,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyScalingPolicyInput{}
	}

	output = &ModifyScalingPolicyOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyScalingPolicy API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation ModifyScalingPolicy for usage and error information.
func (c *AUTOSCALING) ModifyScalingPolicy(input *ModifyScalingPolicyInput) (*ModifyScalingPolicyOutput, error) {
	req, out := c.ModifyScalingPolicyRequest(input)
	return out, req.Send()
}

// ModifyScalingPolicyWithContext is the same as ModifyScalingPolicy with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyScalingPolicy for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) ModifyScalingPolicyWithContext(ctx volcstack.Context, input *ModifyScalingPolicyInput, opts ...request.Option) (*ModifyScalingPolicyOutput, error) {
	req, out := c.ModifyScalingPolicyRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opRemoveInstancesCommon = "RemoveInstances"

// RemoveInstancesCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the RemoveInstancesCommon operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See RemoveInstancesCommon for more information on using the RemoveInstancesCommon
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the RemoveInstancesCommonRequest method.
//    req, resp := client.RemoveInstancesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) RemoveInstancesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opRemoveInstancesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// RemoveInstancesCommon API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation RemoveInstancesCommon for usage and error information.
func (c *AUTOSCALING) RemoveInstancesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.RemoveInstancesCommonRequest(input)
	return out, req.Send()
}

// RemoveInstancesCommonWithContext is the same as RemoveInstancesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See RemoveInstancesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) RemoveInstancesCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.RemoveInstancesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opRemoveInstances = "RemoveInstances"

// RemoveInstancesRequest generates a "volcstack/request.Request" representing the
// client's request for the RemoveInstances operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See RemoveInstances for more information on using the RemoveInstances
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the RemoveInstancesRequest method.
//    req, resp := client.RemoveInstancesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) RemoveInstancesRequest(input *RemoveInstancesInput) (req *request.Request, output *RemoveInstancesOutput) {
	op := &request.Operation{
		Name:       opRemoveInstances,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &RemoveInstancesInput{}
	}

	output = &RemoveInstancesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// RemoveInstances API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation RemoveInstances for usage and error information.
func (c *AUTOSCALING) RemoveInstances(input *RemoveInstancesInput) (*RemoveInstancesOutput, error) {
	req, out := c.RemoveInstancesRequest(input)
	return out, req.Send()
}

// RemoveInstancesWithContext is the same as RemoveInstances with the addition of
// the ability to pass a context and additional request options.
//
// See RemoveInstances for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) RemoveInstancesWithContext(ctx volcstack.Context, input *RemoveInstancesInput, opts ...request.Option) (*RemoveInstancesOutput, error) {
	req, out := c.RemoveInstancesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opStartScalingPolicyCommon = "StartScalingPolicy"

// StartScalingPolicyCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the StartScalingPolicyCommon operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See StartScalingPolicyCommon for more information on using the StartScalingPolicyCommon
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the StartScalingPolicyCommonRequest method.
//    req, resp := client.StartScalingPolicyCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) StartScalingPolicyCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opStartScalingPolicyCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// StartScalingPolicyCommon API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation StartScalingPolicyCommon for usage and error information.
func (c *AUTOSCALING) StartScalingPolicyCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.StartScalingPolicyCommonRequest(input)
	return out, req.Send()
}

// StartScalingPolicyCommonWithContext is the same as StartScalingPolicyCommon with the addition of
// the ability to pass a context and additional request options.
//
// See StartScalingPolicyCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) StartScalingPolicyCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.StartScalingPolicyCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opStartScalingPolicy = "StartScalingPolicy"

// StartScalingPolicyRequest generates a "volcstack/request.Request" representing the
// client's request for the StartScalingPolicy operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See StartScalingPolicy for more information on using the StartScalingPolicy
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the StartScalingPolicyRequest method.
//    req, resp := client.StartScalingPolicyRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) StartScalingPolicyRequest(input *StartScalingPolicyInput) (req *request.Request, output *StartScalingPolicyOutput) {
	op := &request.Operation{
		Name:       opStartScalingPolicy,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &StartScalingPolicyInput{}
	}

	output = &StartScalingPolicyOutput{}
	req = c.newRequest(op, input, output)

	return
}

// StartScalingPolicy API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation StartScalingPolicy for usage and error information.
func (c *AUTOSCALING) StartScalingPolicy(input *StartScalingPolicyInput) (*StartScalingPolicyOutput, error) {
	req, out := c.StartScalingPolicyRequest(input)
	return out, req.Send()
}

// StartScalingPolicyWithContext is the same as StartScalingPolicy with the addition of
// the ability to pass a context and additional request options.
//
// See StartScalingPolicy for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) StartScalingPolicyWithContext(ctx volcstack.Context, input *StartScalingPolicyInput, opts ...request.Option) (*StartScalingPolicyOutput, error) {
	req, out := c.StartScalingPolicyRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opStopScalingPolicyCommon = "StopScalingPolicy"

// StopScalingPolicyCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the StopScalingPolicyCommon operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See StopScalingPolicyCommon for more information on using the StopScalingPolicyCommon
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the StopScalingPolicyCommonRequest method.
//    req, resp := client.StopScalingPolicyCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) StopScalingPolicyCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opStopScalingPolicyCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// StopScalingPolicyCommon API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation StopScalingPolicyCommon for usage and error information.
func (c *AUTOSCALING) StopScalingPolicyCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.StopScalingPolicyCommonRequest(input)
	return out, req.Send()
}

// StopScalingPolicyCommonWithContext is the same as StopScalingPolicyCommon with the addition of
// the ability to pass a context and additional request options.
//
// See StopScalingPolicyCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) StopScalingPolicyCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.StopScalingPolicyCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opStopScalingPolicy = "StopScalingPolicy"

// StopScalingPolicyRequest generates a "volcstack/request.Request" representing the
// client's request for the StopScalingPolicy operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See StopScalingPolicy for more information on using the StopScalingPolicy
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the StopScalingPolicyRequest method.
//    req, resp := client.StopScalingPolicyRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AUTOSCALING) StopScalingPolicyRequest(input *StopScalingPolicyInput) (req *request.Request, output *StopScalingPolicyOutput) {
	op := &request.Operation{
		Name:       opStopScalingPolicy,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &StopScalingPolicyInput{}
	}

	output = &StopScalingPolicyOutput{}
	req = c.newRequest(op, input, output)

	return
}

// StopScalingPolicy API operation for AUTO_SCALING.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for AUTO_SCALING's
// API operation StopScalingPolicy for usage and error information.
func (c *AUTOSCALING) StopScalingPolicy(input *StopScalingPolicyInput) (*StopScalingPolicyOutput, error) {
	req, out := c.StopScalingPolicyRequest(input)
	return out, req.Send()
}

// StopScalingPolicyWithContext is the same as StopScalingPolicy with the addition of
// the ability to pass a context and additional request options.
//
// See StopScalingPolicy for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AUTOSCALING) StopScalingPolicyWithContext(ctx volcstack.Context, input *StopScalingPolicyInput, opts ...request.Option) (*StopScalingPolicyOutput, error) {
	req, out := c.StopScalingPolicyRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AttachInstancesInput struct {
	_ struct{} `type:"structure"`

	Entrusted *bool `type:"boolean"`

	InstanceIds []*string `type:"list"`

	ScalingGroupId *string `type:"string"`
}

// String returns the string representation
func (s AttachInstancesInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s AttachInstancesInput) GoString() string {
	return s.String()
}

// SetEntrusted sets the Entrusted field's value.
func (s *AttachInstancesInput) SetEntrusted(v bool) *AttachInstancesInput {
	s.Entrusted = &v
	return s
}

// SetInstanceIds sets the InstanceIds field's value.
func (s *AttachInstancesInput) SetInstanceIds(v []*string) *AttachInstancesInput {
	s.InstanceIds = v
	return s
}

// SetScalingGroupId sets the ScalingGroupId field's value.
func (s *AttachInstancesInput) SetScalingGroupId(v string) *AttachInstancesInput {
	s.ScalingGroupId = &v
	return s
}

type AttachInstancesOutput struct {
	_ struct{} `type:"structure"`

	ScalingActivityId *string `type:"string"`
}

// String returns the string representation
func (s AttachInstancesOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s AttachInstancesOutput) GoString() string {
	return s.String()
}

// SetScalingActivityId sets the ScalingActivityId field's value.
func (s *AttachInstancesOutput) SetScalingActivityId(v string) *AttachInstancesOutput {
	s.ScalingActivityId = &v
	return s
}

type AttachLoadBalancersInput struct {
	_ struct{} `type:"structure"`

	LoadBalancerGroups []*LoadBalancerGroupForAttachLoadBalancersInput `type:"list"`

	ScalingGroupId *string `type:"string"`
}

// String returns the string representation
func (s AttachLoadBalancersInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s AttachLoadBalancersInput) GoString() string {
	return s.String()
}

// SetLoadBalancerGroups sets the LoadBalancerGroups field's value.
func (s *AttachLoadBalancersInput) SetLoadBalancerGroups(v []*LoadBalancerGroupForAttachLoadBalancersInput) *AttachLoadBalancersInput {
	s.LoadBalancerGroups = v
	return s
}

// SetScalingGroupId sets the ScalingGroupId field's value.
func (s *AttachLoadBalancersInput) SetScalingGroupId(v string) *AttachLoadBalancersInput {
	s.ScalingGroupId = &v
	return s
}

type AttachLoadBalancersOutput struct {
	_ struct{} `type:"structure"`

	ScalingGroupId *string `type:"string"`
}

// String returns the string representation
func (s AttachLoadBalancersOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s AttachLoadBalancersOutput) GoString() string {
	return s.String()
}

// SetScalingGroupId sets the ScalingGroupId field's value.
func (s *AttachLoadBalancersOutput) SetScalingGroupId(v string) *AttachLoadBalancersOutput {
	s.ScalingGroupId = &v
	return s
}

type CreateScalingConfigurationInput struct {
	_ struct{} `type:"structure"`

	Eip *EipForCreateScalingConfigurationInput `type:"structure"`

	HostName *string `type:"string"`

	ImageId *string `type:"string"`

	InstanceDescription *string `type:"string"`

	InstanceName *string `type:"string"`

	InstanceTypes []*string `type:"list"`

	KeyPairId *string `type:"string"`

	KeyPairName *string `type:"string"`

	Password *string `type:"string"`

	ProjectName *string `type:"string"`

	ScalingConfigurationName *string `type:"string"`

	ScalingGroupId *string `type:"string"`

	SecurityEnhancementStrategy *string `type:"string"`

	SecurityGroupIds []*string `type:"list"`

	UserData *string `type:"string"`

	Volumes []*VolumeForCreateScalingConfigurationInput `type:"list"`

	ZoneId *string `type:"string"`
}

// String returns the string representation
func (s CreateScalingConfigurationInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateScalingConfigurationInput) GoString() string {
	return s.String()
}

// SetEip sets the Eip field's value.
func (s *CreateScalingConfigurationInput) SetEip(v *EipForCreateScalingConfigurationInput) *CreateScalingConfigurationInput {
	s.Eip = v
	return s
}

// SetHostName sets the HostName field's value.
func (s *CreateScalingConfigurationInput) SetHostName(v string) *CreateScalingConfigurationInput {
	s.HostName = &v
	return s
}

// SetImageId sets the ImageId field's value.
func (s *CreateScalingConfigurationInput) SetImageId(v string) *CreateScalingConfigurationInput {
	s.ImageId = &v
	return s
}

// SetInstanceDescription sets the InstanceDescription field's value.
func (s *CreateScalingConfigurationInput) SetInstanceDescription(v string) *CreateScalingConfigurationInput {
	s.InstanceDescription = &v
	return s
}

// SetInstanceName sets the InstanceName field's value.
func (s *CreateScalingConfigurationInput) SetInstanceName(v string) *CreateScalingConfigurationInput {
	s.InstanceName = &v
	return s
}

// SetInstanceTypes sets the InstanceTypes field's value.
func (s *CreateScalingConfigurationInput) SetInstanceTypes(v []*string) *CreateScalingConfigurationInput {
	s.InstanceTypes = v
	return s
}

// SetKeyPairId sets the KeyPairId field's value.
func (s *CreateScalingConfigurationInput) SetKeyPairId(v string) *CreateScalingConfigurationInput {
	s.KeyPairId = &v
	return s
}

// SetKeyPairName sets the KeyPairName field's value.
func (s *CreateScalingConfigurationInput) SetKeyPairName(v string) *CreateScalingConfigurationInput {
	s.KeyPairName = &v
	return s
}

// SetPassword sets the Password field's value.
func (s *CreateScalingConfigurationInput) SetPassword(v string) *CreateScalingConfigurationInput {
	s.Password = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *CreateScalingConfigurationInput) SetProjectName(v string) *CreateScalingConfigurationInput {
	s.ProjectName = &v
	return s
}

// SetScalingConfigurationName sets the ScalingConfigurationName field's value.
func (s *CreateScalingConfigurationInput) SetScalingConfigurationName(v string) *CreateScalingConfigurationInput {
	s.ScalingConfigurationName = &v
	return s
}

// SetScalingGroupId sets the ScalingGroupId field's value.
func (s *CreateScalingConfigurationInput) SetScalingGroupId(v string) *CreateScalingConfigurationInput {
	s.ScalingGroupId = &v
	return s
}

// SetSecurityEnhancementStrategy sets the SecurityEnhancementStrategy field's value.
func (s *CreateScalingConfigurationInput) SetSecurityEnhancementStrategy(v string) *CreateScalingConfigurationInput {
	s.SecurityEnhancementStrategy = &v
	return s
}

// SetSecurityGroupIds sets the SecurityGroupIds field's value.
func (s *CreateScalingConfigurationInput) SetSecurityGroupIds(v []*string) *CreateScalingConfigurationInput {
	s.SecurityGroupIds = v
	return s
}

// SetUserData sets the UserData field's value.
func (s *CreateScalingConfigurationInput) SetUserData(v string) *CreateScalingConfigurationInput {
	s.UserData = &v
	return s
}

// SetVolumes sets the Volumes field's value.
func (s *CreateScalingConfigurationInput) SetVolumes(v []*VolumeForCreateScalingConfigurationInput) *CreateScalingConfigurationInput {
	s.Volumes = v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *CreateScalingConfigurationInput) SetZoneId(v string) *CreateScalingConfigurationInput {
	s.ZoneId = &v
	return s
}

type CreateScalingConfigurationOutput struct {
	_ struct{} `type:"structure"`

	ScalingConfigurationId *string `type:"string"`
}

// String returns the string representation
func (s CreateScalingConfigurationOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateScalingConfigurationOutput) GoString() string {
	return s.String()
}

// SetScalingConfigurationId sets the ScalingConfigurationId field's value.
func (s *CreateScalingConfigurationOutput) SetScalingConfigurationId(v string) *CreateScalingConfigurationOutput {
	s.ScalingConfigurationId = &v
	return s
}

type CreateScalingGroupInput struct {
	_ struct{} `type:"structure"`

	DefaultCooldown *int32 `type:"int32"`

	DesireInstanceNumber *int32 `type:"int32"`

	HealthCheckType *string `type:"string"`

	InstanceTerminatePolicy *string `type:"string"`

	LaunchTemplateId *string `type:"string"`

	LoadBalancerGroups []*LoadBalancerGroupForCreateScalingGroupInput `type:"list"`

	MaxInstanceNumber *int32 `type:"int32"`

	MinInstanceNumber *int32 `type:"int32"`

	NetworkInterfaces []*NetworkInterfaceForCreateScalingGroupInput `type:"list"`

	ScalingGroupName *string `type:"string"`

	VpcId *string `type:"string"`

	ZoneId *string `type:"string"`
}

// String returns the string representation
func (s CreateScalingGroupInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateScalingGroupInput) GoString() string {
	return s.String()
}

// SetDefaultCooldown sets the DefaultCooldown field's value.
func (s *CreateScalingGroupInput) SetDefaultCooldown(v int32) *CreateScalingGroupInput {
	s.DefaultCooldown = &v
	return s
}

// SetDesireInstanceNumber sets the DesireInstanceNumber field's value.
func (s *CreateScalingGroupInput) SetDesireInstanceNumber(v int32) *CreateScalingGroupInput {
	s.DesireInstanceNumber = &v
	return s
}

// SetHealthCheckType sets the HealthCheckType field's value.
func (s *CreateScalingGroupInput) SetHealthCheckType(v string) *CreateScalingGroupInput {
	s.HealthCheckType = &v
	return s
}

// SetInstanceTerminatePolicy sets the InstanceTerminatePolicy field's value.
func (s *CreateScalingGroupInput) SetInstanceTerminatePolicy(v string) *CreateScalingGroupInput {
	s.InstanceTerminatePolicy = &v
	return s
}

// SetLaunchTemplateId sets the LaunchTemplateId field's value.
func (s *CreateScalingGroupInput) SetLaunchTemplateId(v string) *CreateScalingGroupInput {
	s.LaunchTemplateId = &v
	return s
}

// SetLoadBalancerGroups sets the LoadBalancerGroups field's value.
func (s *CreateScalingGroupInput) SetLoadBalancerGroups(v []*LoadBalancerGroupForCreateScalingGroupInput) *CreateScalingGroupInput {
	s.LoadBalancerGroups = v
	return s
}

// SetMaxInstanceNumber sets the MaxInstanceNumber field's value.
func (s *CreateScalingGroupInput) SetMaxInstanceNumber(v int32) *CreateScalingGroupInput {
	s.MaxInstanceNumber = &v
	return s
}

// SetMinInstanceNumber sets the MinInstanceNumber field's value.
func (s *CreateScalingGroupInput) SetMinInstanceNumber(v int32) *CreateScalingGroupInput {
	s.MinInstanceNumber = &v
	return s
}

// SetNetworkInterfaces sets the NetworkInterfaces field's value.
func (s *CreateScalingGroupInput) SetNetworkInterfaces(v []*NetworkInterfaceForCreateScalingGroupInput) *CreateScalingGroupInput {
	s.NetworkInterfaces = v
	return s
}

// SetScalingGroupName sets the ScalingGroupName field's value.
func (s *CreateScalingGroupInput) SetScalingGroupName(v string) *CreateScalingGroupInput {
	s.ScalingGroupName = &v
	return s
}

// SetVpcId sets the VpcId field's value.
func (s *CreateScalingGroupInput) SetVpcId(v string) *CreateScalingGroupInput {
	s.VpcId = &v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *CreateScalingGroupInput) SetZoneId(v string) *CreateScalingGroupInput {
	s.ZoneId = &v
	return s
}

type CreateScalingGroupOutput struct {
	_ struct{} `type:"structure"`

	ScalingGroupId *string `type:"string"`
}

// String returns the string representation
func (s CreateScalingGroupOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateScalingGroupOutput) GoString() string {
	return s.String()
}

// SetScalingGroupId sets the ScalingGroupId field's value.
func (s *CreateScalingGroupOutput) SetScalingGroupId(v string) *CreateScalingGroupOutput {
	s.ScalingGroupId = &v
	return s
}

type CreateScalingPolicyInput struct {
	_ struct{} `type:"structure"`

	AdjustmentType *string `type:"string"`

	AdjustmentValue *int32 `type:"int32"`

	AlarmId *string `type:"string"`

	Cooldown *int32 `type:"int32"`

	ScalingGroupId *string `type:"string"`

	ScalingPolicyName *string `type:"string"`

	ScalingPolicyType *string `type:"string"`

	ScheduledPolicy *ScheduledPolicyForCreateScalingPolicyInput `type:"structure"`
}

// String returns the string representation
func (s CreateScalingPolicyInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateScalingPolicyInput) GoString() string {
	return s.String()
}

// SetAdjustmentType sets the AdjustmentType field's value.
func (s *CreateScalingPolicyInput) SetAdjustmentType(v string) *CreateScalingPolicyInput {
	s.AdjustmentType = &v
	return s
}

// SetAdjustmentValue sets the AdjustmentValue field's value.
func (s *CreateScalingPolicyInput) SetAdjustmentValue(v int32) *CreateScalingPolicyInput {
	s.AdjustmentValue = &v
	return s
}

// SetAlarmId sets the AlarmId field's value.
func (s *CreateScalingPolicyInput) SetAlarmId(v string) *CreateScalingPolicyInput {
	s.AlarmId = &v
	return s
}

// SetCooldown sets the Cooldown field's value.
func (s *CreateScalingPolicyInput) SetCooldown(v int32) *CreateScalingPolicyInput {
	s.Cooldown = &v
	return s
}

// SetScalingGroupId sets the ScalingGroupId field's value.
func (s *CreateScalingPolicyInput) SetScalingGroupId(v string) *CreateScalingPolicyInput {
	s.ScalingGroupId = &v
	return s
}

// SetScalingPolicyName sets the ScalingPolicyName field's value.
func (s *CreateScalingPolicyInput) SetScalingPolicyName(v string) *CreateScalingPolicyInput {
	s.ScalingPolicyName = &v
	return s
}

// SetScalingPolicyType sets the ScalingPolicyType field's value.
func (s *CreateScalingPolicyInput) SetScalingPolicyType(v string) *CreateScalingPolicyInput {
	s.ScalingPolicyType = &v
	return s
}

// SetScheduledPolicy sets the ScheduledPolicy field's value.
func (s *CreateScalingPolicyInput) SetScheduledPolicy(v *ScheduledPolicyForCreateScalingPolicyInput) *CreateScalingPolicyInput {
	s.ScheduledPolicy = v
	return s
}

type CreateScalingPolicyOutput struct {
	_ struct{} `type:"structure"`

	ScalingPolicyId *string `type:"string"`
}

// String returns the string representation
func (s CreateScalingPolicyOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateScalingPolicyOutput) GoString() string {
	return s.String()
}

// SetScalingPolicyId sets the ScalingPolicyId field's value.
func (s *CreateScalingPolicyOutput) SetScalingPolicyId(v string) *CreateScalingPolicyOutput {
	s.ScalingPolicyId = &v
	return s
}

type DeleteScalingConfigurationInput struct {
	_ struct{} `type:"structure"`

	ScalingConfigurationId *string `type:"string"`
}

// String returns the string representation
func (s DeleteScalingConfigurationInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteScalingConfigurationInput) GoString() string {
	return s.String()
}

// SetScalingConfigurationId sets the ScalingConfigurationId field's value.
func (s *DeleteScalingConfigurationInput) SetScalingConfigurationId(v string) *DeleteScalingConfigurationInput {
	s.ScalingConfigurationId = &v
	return s
}

type DeleteScalingConfigurationOutput struct {
	_ struct{} `type:"structure"`

	ScalingConfigurationId *string `type:"string"`
}

// String returns the string representation
func (s DeleteScalingConfigurationOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteScalingConfigurationOutput) GoString() string {
	return s.String()
}

// SetScalingConfigurationId sets the ScalingConfigurationId field's value.
func (s *DeleteScalingConfigurationOutput) SetScalingConfigurationId(v string) *DeleteScalingConfigurationOutput {
	s.ScalingConfigurationId = &v
	return s
}

type DeleteScalingGroupInput struct {
	_ struct{} `type:"structure"`

	ForceDelete *string `type:"string"`

	ScalingGroupId *string `type:"string"`
}

// String returns the string representation
func (s DeleteScalingGroupInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteScalingGroupInput) GoString() string {
	return s.String()
}

// SetForceDelete sets the ForceDelete field's value.
func (s *DeleteScalingGroupInput) SetForceDelete(v string) *DeleteScalingGroupInput {
	s.ForceDelete = &v
	return s
}

// SetScalingGroupId sets the ScalingGroupId field's value.
func (s *DeleteScalingGroupInput) SetScalingGroupId(v string) *DeleteScalingGroupInput {
	s.ScalingGroupId = &v
	return s
}

type DeleteScalingGroupOutput struct {
	_ struct{} `type:"structure"`

	ScalingGroupId *string `type:"string"`
}

// String returns the string representation
func (s DeleteScalingGroupOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteScalingGroupOutput) GoString() string {
	return s.String()
}

// SetScalingGroupId sets the ScalingGroupId field's value.
func (s *DeleteScalingGroupOutput) SetScalingGroupId(v string) *DeleteScalingGroupOutput {
	s.ScalingGroupId = &v
	return s
}

type DeleteScalingPolicyInput struct {
	_ struct{} `type:"structure"`

	ScalingPolicyId *string `type:"string"`
}

// String returns the string representation
func (s DeleteScalingPolicyInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteScalingPolicyInput) GoString() string {
	return s.String()
}

// SetScalingPolicyId sets the ScalingPolicyId field's value.
func (s *DeleteScalingPolicyInput) SetScalingPolicyId(v string) *DeleteScalingPolicyInput {
	s.ScalingPolicyId = &v
	return s
}

type DeleteScalingPolicyOutput struct {
	_ struct{} `type:"structure"`

	ScalingPolicyId *string `type:"string"`
}

// String returns the string representation
func (s DeleteScalingPolicyOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteScalingPolicyOutput) GoString() string {
	return s.String()
}

// SetScalingPolicyId sets the ScalingPolicyId field's value.
func (s *DeleteScalingPolicyOutput) SetScalingPolicyId(v string) *DeleteScalingPolicyOutput {
	s.ScalingPolicyId = &v
	return s
}

type DescribeScalingActivitiesInput struct {
	_ struct{} `type:"structure"`

	EndTime *string `type:"string"`

	PageNumber *int32 `type:"int32"`

	PageSize *int32 `type:"int32"`

	ScalingActivityId *string `type:"string"`

	ScalingGroupId *string `type:"string"`

	StartTime *string `type:"string"`

	Status *string `type:"string"`
}

// String returns the string representation
func (s DescribeScalingActivitiesInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeScalingActivitiesInput) GoString() string {
	return s.String()
}

// SetEndTime sets the EndTime field's value.
func (s *DescribeScalingActivitiesInput) SetEndTime(v string) *DescribeScalingActivitiesInput {
	s.EndTime = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeScalingActivitiesInput) SetPageNumber(v int32) *DescribeScalingActivitiesInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeScalingActivitiesInput) SetPageSize(v int32) *DescribeScalingActivitiesInput {
	s.PageSize = &v
	return s
}

// SetScalingActivityId sets the ScalingActivityId field's value.
func (s *DescribeScalingActivitiesInput) SetScalingActivityId(v string) *DescribeScalingActivitiesInput {
	s.ScalingActivityId = &v
	return s
}

// SetScalingGroupId sets the ScalingGroupId field's value.
func (s *DescribeScalingActivitiesInput) SetScalingGroupId(v string) *DescribeScalingActivitiesInput {
	s.ScalingGroupId = &v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *DescribeScalingActivitiesInput) SetStartTime(v string) *DescribeScalingActivitiesInput {
	s.StartTime = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *DescribeScalingActivitiesInput) SetStatus(v string) *DescribeScalingActivitiesInput {
	s.Status = &v
	return s
}

type DescribeScalingActivitiesOutput struct {
	_ struct{} `type:"structure"`

	PageNumber *int32 `type:"int32"`

	PageSize *int32 `type:"int32"`

	ScalingActivities []*ScalingActivityForDescribeScalingActivitiesOutput `type:"list"`

	TotalCount *int32 `type:"int32"`
}

// String returns the string representation
func (s DescribeScalingActivitiesOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeScalingActivitiesOutput) GoString() string {
	return s.String()
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeScalingActivitiesOutput) SetPageNumber(v int32) *DescribeScalingActivitiesOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeScalingActivitiesOutput) SetPageSize(v int32) *DescribeScalingActivitiesOutput {
	s.PageSize = &v
	return s
}

// SetScalingActivities sets the ScalingActivities field's value.
func (s *DescribeScalingActivitiesOutput) SetScalingActivities(v []*ScalingActivityForDescribeScalingActivitiesOutput) *DescribeScalingActivitiesOutput {
	s.ScalingActivities = v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *DescribeScalingActivitiesOutput) SetTotalCount(v int32) *DescribeScalingActivitiesOutput {
	s.TotalCount = &v
	return s
}

type DescribeScalingConfigurationsInput struct {
	_ struct{} `type:"structure"`

	PageNumber *int32 `type:"int32"`

	PageSize *int32 `type:"int32"`

	ScalingConfigurationIds []*string `type:"list"`

	ScalingConfigurationNames []*string `type:"list"`

	ScalingGroupId *string `type:"string"`

	ZoneId *string `type:"string"`
}

// String returns the string representation
func (s DescribeScalingConfigurationsInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeScalingConfigurationsInput) GoString() string {
	return s.String()
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeScalingConfigurationsInput) SetPageNumber(v int32) *DescribeScalingConfigurationsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeScalingConfigurationsInput) SetPageSize(v int32) *DescribeScalingConfigurationsInput {
	s.PageSize = &v
	return s
}

// SetScalingConfigurationIds sets the ScalingConfigurationIds field's value.
func (s *DescribeScalingConfigurationsInput) SetScalingConfigurationIds(v []*string) *DescribeScalingConfigurationsInput {
	s.ScalingConfigurationIds = v
	return s
}

// SetScalingConfigurationNames sets the ScalingConfigurationNames field's value.
func (s *DescribeScalingConfigurationsInput) SetScalingConfigurationNames(v []*string) *DescribeScalingConfigurationsInput {
	s.ScalingConfigurationNames = v
	return s
}

// SetScalingGroupId sets the ScalingGroupId field's value.
func (s *DescribeScalingConfigurationsInput) SetScalingGroupId(v string) *DescribeScalingConfigurationsInput {
	s.ScalingGroupId = &v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *DescribeScalingConfigurationsInput) SetZoneId(v string) *DescribeScalingConfigurationsInput {
	s.ZoneId = &v
	return s
}

type DescribeScalingConfigurationsOutput struct {
	_ struct{} `type:"structure"`

	PageNumber *int32 `type:"int32"`

	PageSize *int32 `type:"int32"`

	ScalingConfigurations []*ScalingConfigurationForDescribeScalingConfigurationsOutput `type:"list"`

	TotalCount *int32 `type:"int32"`
}

// String returns the string representation
func (s DescribeScalingConfigurationsOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeScalingConfigurationsOutput) GoString() string {
	return s.String()
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeScalingConfigurationsOutput) SetPageNumber(v int32) *DescribeScalingConfigurationsOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeScalingConfigurationsOutput) SetPageSize(v int32) *DescribeScalingConfigurationsOutput {
	s.PageSize = &v
	return s
}

// SetScalingConfigurations sets the ScalingConfigurations field's value.
func (s *DescribeScalingConfigurationsOutput) SetScalingConfigurations(v []*ScalingConfigurationForDescribeScalingConfigurationsOutput) *DescribeScalingConfigurationsOutput {
	s.ScalingConfigurations = v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *DescribeScalingConfigurationsOutput) SetTotalCount(v int32) *DescribeScalingConfigurationsOutput {
	s.TotalCount = &v
	return s
}

type DescribeScalingGroupsInput struct {
	_ struct{} `type:"structure"`

	PageNumber *int32 `type:"int32"`

	PageSize *int32 `type:"int32"`

	ScalingGroupIds []*string `type:"list"`

	ScalingGroupNames []*string `type:"list"`

	ZoneId *string `type:"string"`
}

// String returns the string representation
func (s DescribeScalingGroupsInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeScalingGroupsInput) GoString() string {
	return s.String()
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeScalingGroupsInput) SetPageNumber(v int32) *DescribeScalingGroupsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeScalingGroupsInput) SetPageSize(v int32) *DescribeScalingGroupsInput {
	s.PageSize = &v
	return s
}

// SetScalingGroupIds sets the ScalingGroupIds field's value.
func (s *DescribeScalingGroupsInput) SetScalingGroupIds(v []*string) *DescribeScalingGroupsInput {
	s.ScalingGroupIds = v
	return s
}

// SetScalingGroupNames sets the ScalingGroupNames field's value.
func (s *DescribeScalingGroupsInput) SetScalingGroupNames(v []*string) *DescribeScalingGroupsInput {
	s.ScalingGroupNames = v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *DescribeScalingGroupsInput) SetZoneId(v string) *DescribeScalingGroupsInput {
	s.ZoneId = &v
	return s
}

type DescribeScalingGroupsOutput struct {
	_ struct{} `type:"structure"`

	PageNumber *int32 `type:"int32"`

	PageSize *int32 `type:"int32"`

	ScalingGroups []*ScalingGroupForDescribeScalingGroupsOutput `type:"list"`

	TotalCount *int32 `type:"int32"`
}

// String returns the string representation
func (s DescribeScalingGroupsOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeScalingGroupsOutput) GoString() string {
	return s.String()
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeScalingGroupsOutput) SetPageNumber(v int32) *DescribeScalingGroupsOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeScalingGroupsOutput) SetPageSize(v int32) *DescribeScalingGroupsOutput {
	s.PageSize = &v
	return s
}

// SetScalingGroups sets the ScalingGroups field's value.
func (s *DescribeScalingGroupsOutput) SetScalingGroups(v []*ScalingGroupForDescribeScalingGroupsOutput) *DescribeScalingGroupsOutput {
	s.ScalingGroups = v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *DescribeScalingGroupsOutput) SetTotalCount(v int32) *DescribeScalingGroupsOutput {
	s.TotalCount = &v
	return s
}

type DescribeScalingInstancesInput struct {
	_ struct{} `type:"structure"`

	InstanceId *string `type:"string"`

	InstanceName *string `type:"string"`

	PageNumber *int32 `type:"int32"`

	PageSize *int32 `type:"int32"`

	ScalingGroupId *string `type:"string"`
}

// String returns the string representation
func (s DescribeScalingInstancesInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeScalingInstancesInput) GoString() string {
	return s.String()
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeScalingInstancesInput) SetInstanceId(v string) *DescribeScalingInstancesInput {
	s.InstanceId = &v
	return s
}

// SetInstanceName sets the InstanceName field's value.
func (s *DescribeScalingInstancesInput) SetInstanceName(v string) *DescribeScalingInstancesInput {
	s.InstanceName = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeScalingInstancesInput) SetPageNumber(v int32) *DescribeScalingInstancesInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeScalingInstancesInput) SetPageSize(v int32) *DescribeScalingInstancesInput {
	s.PageSize = &v
	return s
}

// SetScalingGroupId sets the ScalingGroupId field's value.
func (s *DescribeScalingInstancesInput) SetScalingGroupId(v string) *DescribeScalingInstancesInput {
	s.ScalingGroupId = &v
	return s
}

type DescribeScalingInstancesOutput struct {
	_ struct{} `type:"structure"`

	PageNumber *int32 `type:"int32"`

	PageSize *int32 `type:"int32"`

	ScalingInstances []*ScalingInstanceForDescribeScalingInstancesOutput `type:"list"`

	TotalCount *int32 `type:"int32"`
}

// String returns the string representation
func (s DescribeScalingInstancesOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeScalingInstancesOutput) GoString() string {
	return s.String()
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeScalingInstancesOutput) SetPageNumber(v int32) *DescribeScalingInstancesOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeScalingInstancesOutput) SetPageSize(v int32) *DescribeScalingInstancesOutput {
	s.PageSize = &v
	return s
}

// SetScalingInstances sets the ScalingInstances field's value.
func (s *DescribeScalingInstancesOutput) SetScalingInstances(v []*ScalingInstanceForDescribeScalingInstancesOutput) *DescribeScalingInstancesOutput {
	s.ScalingInstances = v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *DescribeScalingInstancesOutput) SetTotalCount(v int32) *DescribeScalingInstancesOutput {
	s.TotalCount = &v
	return s
}

type DescribeScalingPoliciesInput struct {
	_ struct{} `type:"structure"`

	PageNumber *int32 `type:"int32"`

	PageSize *int32 `type:"int32"`

	ScalingGroupId *string `type:"string"`

	ScalingPolicyIds []*string `type:"list"`

	ScalingPolicyNames []*string `type:"list"`

	ScalingPolicyType *string `type:"string"`
}

// String returns the string representation
func (s DescribeScalingPoliciesInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeScalingPoliciesInput) GoString() string {
	return s.String()
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeScalingPoliciesInput) SetPageNumber(v int32) *DescribeScalingPoliciesInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeScalingPoliciesInput) SetPageSize(v int32) *DescribeScalingPoliciesInput {
	s.PageSize = &v
	return s
}

// SetScalingGroupId sets the ScalingGroupId field's value.
func (s *DescribeScalingPoliciesInput) SetScalingGroupId(v string) *DescribeScalingPoliciesInput {
	s.ScalingGroupId = &v
	return s
}

// SetScalingPolicyIds sets the ScalingPolicyIds field's value.
func (s *DescribeScalingPoliciesInput) SetScalingPolicyIds(v []*string) *DescribeScalingPoliciesInput {
	s.ScalingPolicyIds = v
	return s
}

// SetScalingPolicyNames sets the ScalingPolicyNames field's value.
func (s *DescribeScalingPoliciesInput) SetScalingPolicyNames(v []*string) *DescribeScalingPoliciesInput {
	s.ScalingPolicyNames = v
	return s
}

// SetScalingPolicyType sets the ScalingPolicyType field's value.
func (s *DescribeScalingPoliciesInput) SetScalingPolicyType(v string) *DescribeScalingPoliciesInput {
	s.ScalingPolicyType = &v
	return s
}

type DescribeScalingPoliciesOutput struct {
	_ struct{} `type:"structure"`

	PageNumber *int32 `type:"int32"`

	PageSize *int32 `type:"int32"`

	ScalingPolicies []*ScalingPolicyForDescribeScalingPoliciesOutput `type:"list"`

	TotalCount *int32 `type:"int32"`
}

// String returns the string representation
func (s DescribeScalingPoliciesOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeScalingPoliciesOutput) GoString() string {
	return s.String()
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeScalingPoliciesOutput) SetPageNumber(v int32) *DescribeScalingPoliciesOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeScalingPoliciesOutput) SetPageSize(v int32) *DescribeScalingPoliciesOutput {
	s.PageSize = &v
	return s
}

// SetScalingPolicies sets the ScalingPolicies field's value.
func (s *DescribeScalingPoliciesOutput) SetScalingPolicies(v []*ScalingPolicyForDescribeScalingPoliciesOutput) *DescribeScalingPoliciesOutput {
	s.ScalingPolicies = v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *DescribeScalingPoliciesOutput) SetTotalCount(v int32) *DescribeScalingPoliciesOutput {
	s.TotalCount = &v
	return s
}

type DetachInstancesInput struct {
	_ struct{} `type:"structure"`

	DecreaseDesiredCapacity *bool `type:"boolean"`

	DetachOption *string `type:"string"`

	InstanceIds []*string `type:"list"`

	ScalingGroupId *string `type:"string"`
}

// String returns the string representation
func (s DetachInstancesInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s DetachInstancesInput) GoString() string {
	return s.String()
}

// SetDecreaseDesiredCapacity sets the DecreaseDesiredCapacity field's value.
func (s *DetachInstancesInput) SetDecreaseDesiredCapacity(v bool) *DetachInstancesInput {
	s.DecreaseDesiredCapacity = &v
	return s
}

// SetDetachOption sets the DetachOption field's value.
func (s *DetachInstancesInput) SetDetachOption(v string) *DetachInstancesInput {
	s.DetachOption = &v
	return s
}

// SetInstanceIds sets the InstanceIds field's value.
func (s *DetachInstancesInput) SetInstanceIds(v []*string) *DetachInstancesInput {
	s.InstanceIds = v
	return s
}

// SetScalingGroupId sets the ScalingGroupId field's value.
func (s *DetachInstancesInput) SetScalingGroupId(v string) *DetachInstancesInput {
	s.ScalingGroupId = &v
	return s
}

type DetachInstancesOutput struct {
	_ struct{} `type:"structure"`

	ScalingActivityId *string `type:"string"`
}

// String returns the string representation
func (s DetachInstancesOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s DetachInstancesOutput) GoString() string {
	return s.String()
}

// SetScalingActivityId sets the ScalingActivityId field's value.
func (s *DetachInstancesOutput) SetScalingActivityId(v string) *DetachInstancesOutput {
	s.ScalingActivityId = &v
	return s
}

type DetachLoadBalancersInput struct {
	_ struct{} `type:"structure"`

	LoadBalancerGroups []*LoadBalancerGroupForDetachLoadBalancersInput `type:"list"`

	ScalingGroupId *string `type:"string"`
}

// String returns the string representation
func (s DetachLoadBalancersInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s DetachLoadBalancersInput) GoString() string {
	return s.String()
}

// SetLoadBalancerGroups sets the LoadBalancerGroups field's value.
func (s *DetachLoadBalancersInput) SetLoadBalancerGroups(v []*LoadBalancerGroupForDetachLoadBalancersInput) *DetachLoadBalancersInput {
	s.LoadBalancerGroups = v
	return s
}

// SetScalingGroupId sets the ScalingGroupId field's value.
func (s *DetachLoadBalancersInput) SetScalingGroupId(v string) *DetachLoadBalancersInput {
	s.ScalingGroupId = &v
	return s
}

type DetachLoadBalancersOutput struct {
	_ struct{} `type:"structure"`

	ScalingGroupId *string `type:"string"`
}

// String returns the string representation
func (s DetachLoadBalancersOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s DetachLoadBalancersOutput) GoString() string {
	return s.String()
}

// SetScalingGroupId sets the ScalingGroupId field's value.
func (s *DetachLoadBalancersOutput) SetScalingGroupId(v string) *DetachLoadBalancersOutput {
	s.ScalingGroupId = &v
	return s
}

type DisableScalingGroupInput struct {
	_ struct{} `type:"structure"`

	ScalingGroupId *string `type:"string"`
}

// String returns the string representation
func (s DisableScalingGroupInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s DisableScalingGroupInput) GoString() string {
	return s.String()
}

// SetScalingGroupId sets the ScalingGroupId field's value.
func (s *DisableScalingGroupInput) SetScalingGroupId(v string) *DisableScalingGroupInput {
	s.ScalingGroupId = &v
	return s
}

type DisableScalingGroupOutput struct {
	_ struct{} `type:"structure"`

	ScalingGroupId *string `type:"string"`
}

// String returns the string representation
func (s DisableScalingGroupOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s DisableScalingGroupOutput) GoString() string {
	return s.String()
}

// SetScalingGroupId sets the ScalingGroupId field's value.
func (s *DisableScalingGroupOutput) SetScalingGroupId(v string) *DisableScalingGroupOutput {
	s.ScalingGroupId = &v
	return s
}

type EipForCreateScalingConfigurationInput struct {
	_ struct{} `type:"structure"`

	Bandwidth *int64 `type:"int64"`

	BillingType *int32 `type:"int32"`

	ISP *string `type:"string"`
}

// String returns the string representation
func (s EipForCreateScalingConfigurationInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s EipForCreateScalingConfigurationInput) GoString() string {
	return s.String()
}

// SetBandwidth sets the Bandwidth field's value.
func (s *EipForCreateScalingConfigurationInput) SetBandwidth(v int64) *EipForCreateScalingConfigurationInput {
	s.Bandwidth = &v
	return s
}

// SetBillingType sets the BillingType field's value.
func (s *EipForCreateScalingConfigurationInput) SetBillingType(v int32) *EipForCreateScalingConfigurationInput {
	s.BillingType = &v
	return s
}

// SetISP sets the ISP field's value.
func (s *EipForCreateScalingConfigurationInput) SetISP(v string) *EipForCreateScalingConfigurationInput {
	s.ISP = &v
	return s
}

type EipForModifyScalingConfigurationInput struct {
	_ struct{} `type:"structure"`

	Bandwidth *int64 `type:"int64"`

	BillingType *int32 `type:"int32"`

	ISP *string `type:"string"`
}

// String returns the string representation
func (s EipForModifyScalingConfigurationInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s EipForModifyScalingConfigurationInput) GoString() string {
	return s.String()
}

// SetBandwidth sets the Bandwidth field's value.
func (s *EipForModifyScalingConfigurationInput) SetBandwidth(v int64) *EipForModifyScalingConfigurationInput {
	s.Bandwidth = &v
	return s
}

// SetBillingType sets the BillingType field's value.
func (s *EipForModifyScalingConfigurationInput) SetBillingType(v int32) *EipForModifyScalingConfigurationInput {
	s.BillingType = &v
	return s
}

// SetISP sets the ISP field's value.
func (s *EipForModifyScalingConfigurationInput) SetISP(v string) *EipForModifyScalingConfigurationInput {
	s.ISP = &v
	return s
}

type EnableScalingConfigurationInput struct {
	_ struct{} `type:"structure"`

	ScalingConfigurationId *string `type:"string"`

	ScalingGroupId *string `type:"string"`
}

// String returns the string representation
func (s EnableScalingConfigurationInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s EnableScalingConfigurationInput) GoString() string {
	return s.String()
}

// SetScalingConfigurationId sets the ScalingConfigurationId field's value.
func (s *EnableScalingConfigurationInput) SetScalingConfigurationId(v string) *EnableScalingConfigurationInput {
	s.ScalingConfigurationId = &v
	return s
}

// SetScalingGroupId sets the ScalingGroupId field's value.
func (s *EnableScalingConfigurationInput) SetScalingGroupId(v string) *EnableScalingConfigurationInput {
	s.ScalingGroupId = &v
	return s
}

type EnableScalingConfigurationOutput struct {
	_ struct{} `type:"structure"`

	ScalingConfigurationId *string `type:"string"`
}

// String returns the string representation
func (s EnableScalingConfigurationOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s EnableScalingConfigurationOutput) GoString() string {
	return s.String()
}

// SetScalingConfigurationId sets the ScalingConfigurationId field's value.
func (s *EnableScalingConfigurationOutput) SetScalingConfigurationId(v string) *EnableScalingConfigurationOutput {
	s.ScalingConfigurationId = &v
	return s
}

type EnableScalingGroupInput struct {
	_ struct{} `type:"structure"`

	ScalingGroupId *string `type:"string"`
}

// String returns the string representation
func (s EnableScalingGroupInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s EnableScalingGroupInput) GoString() string {
	return s.String()
}

// SetScalingGroupId sets the ScalingGroupId field's value.
func (s *EnableScalingGroupInput) SetScalingGroupId(v string) *EnableScalingGroupInput {
	s.ScalingGroupId = &v
	return s
}

type EnableScalingGroupOutput struct {
	_ struct{} `type:"structure"`

	ScalingGroupId *string `type:"string"`
}

// String returns the string representation
func (s EnableScalingGroupOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s EnableScalingGroupOutput) GoString() string {
	return s.String()
}

// SetScalingGroupId sets the ScalingGroupId field's value.
func (s *EnableScalingGroupOutput) SetScalingGroupId(v string) *EnableScalingGroupOutput {
	s.ScalingGroupId = &v
	return s
}

type LoadBalancerGroupForAttachLoadBalancersInput struct {
	_ struct{} `type:"structure"`

	LoadBalancerId *string `type:"string"`

	ServerGroupAttributes *int32 `type:"int32"`
}

// String returns the string representation
func (s LoadBalancerGroupForAttachLoadBalancersInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s LoadBalancerGroupForAttachLoadBalancersInput) GoString() string {
	return s.String()
}

// SetLoadBalancerId sets the LoadBalancerId field's value.
func (s *LoadBalancerGroupForAttachLoadBalancersInput) SetLoadBalancerId(v string) *LoadBalancerGroupForAttachLoadBalancersInput {
	s.LoadBalancerId = &v
	return s
}

// SetServerGroupAttributes sets the ServerGroupAttributes field's value.
func (s *LoadBalancerGroupForAttachLoadBalancersInput) SetServerGroupAttributes(v int32) *LoadBalancerGroupForAttachLoadBalancersInput {
	s.ServerGroupAttributes = &v
	return s
}

type LoadBalancerGroupForCreateScalingGroupInput struct {
	_ struct{} `type:"structure"`

	LoadBalancerId *string `type:"string"`

	ServerGroupAttributes *int32 `type:"int32"`
}

// String returns the string representation
func (s LoadBalancerGroupForCreateScalingGroupInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s LoadBalancerGroupForCreateScalingGroupInput) GoString() string {
	return s.String()
}

// SetLoadBalancerId sets the LoadBalancerId field's value.
func (s *LoadBalancerGroupForCreateScalingGroupInput) SetLoadBalancerId(v string) *LoadBalancerGroupForCreateScalingGroupInput {
	s.LoadBalancerId = &v
	return s
}

// SetServerGroupAttributes sets the ServerGroupAttributes field's value.
func (s *LoadBalancerGroupForCreateScalingGroupInput) SetServerGroupAttributes(v int32) *LoadBalancerGroupForCreateScalingGroupInput {
	s.ServerGroupAttributes = &v
	return s
}

type LoadBalancerGroupForDetachLoadBalancersInput struct {
	_ struct{} `type:"structure"`

	LoadBalancerId *string `type:"string"`

	ServerGroupIds *string `type:"string"`
}

// String returns the string representation
func (s LoadBalancerGroupForDetachLoadBalancersInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s LoadBalancerGroupForDetachLoadBalancersInput) GoString() string {
	return s.String()
}

// SetLoadBalancerId sets the LoadBalancerId field's value.
func (s *LoadBalancerGroupForDetachLoadBalancersInput) SetLoadBalancerId(v string) *LoadBalancerGroupForDetachLoadBalancersInput {
	s.LoadBalancerId = &v
	return s
}

// SetServerGroupIds sets the ServerGroupIds field's value.
func (s *LoadBalancerGroupForDetachLoadBalancersInput) SetServerGroupIds(v string) *LoadBalancerGroupForDetachLoadBalancersInput {
	s.ServerGroupIds = &v
	return s
}

type ModifyInstanceProtectionResultForModifyInstancesProtectionOutput struct {
	_ struct{} `type:"structure"`

	Error *ModifyInstanceProtectionResultsErrorForModifyInstancesProtectionOutput `type:"structure"`

	InstanceId *string `type:"string"`
}

// String returns the string representation
func (s ModifyInstanceProtectionResultForModifyInstancesProtectionOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyInstanceProtectionResultForModifyInstancesProtectionOutput) GoString() string {
	return s.String()
}

// SetError sets the Error field's value.
func (s *ModifyInstanceProtectionResultForModifyInstancesProtectionOutput) SetError(v *ModifyInstanceProtectionResultsErrorForModifyInstancesProtectionOutput) *ModifyInstanceProtectionResultForModifyInstancesProtectionOutput {
	s.Error = v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *ModifyInstanceProtectionResultForModifyInstancesProtectionOutput) SetInstanceId(v string) *ModifyInstanceProtectionResultForModifyInstancesProtectionOutput {
	s.InstanceId = &v
	return s
}

type ModifyInstanceProtectionResultsErrorForModifyInstancesProtectionOutput struct {
	_ struct{} `type:"structure"`

	Code *string `type:"string"`

	Message *string `type:"string"`
}

// String returns the string representation
func (s ModifyInstanceProtectionResultsErrorForModifyInstancesProtectionOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyInstanceProtectionResultsErrorForModifyInstancesProtectionOutput) GoString() string {
	return s.String()
}

// SetCode sets the Code field's value.
func (s *ModifyInstanceProtectionResultsErrorForModifyInstancesProtectionOutput) SetCode(v string) *ModifyInstanceProtectionResultsErrorForModifyInstancesProtectionOutput {
	s.Code = &v
	return s
}

// SetMessage sets the Message field's value.
func (s *ModifyInstanceProtectionResultsErrorForModifyInstancesProtectionOutput) SetMessage(v string) *ModifyInstanceProtectionResultsErrorForModifyInstancesProtectionOutput {
	s.Message = &v
	return s
}

type ModifyInstancesProtectionInput struct {
	_ struct{} `type:"structure"`

	InstanceIds []*string `type:"list"`

	ProtectedFromScaleIn *bool `type:"boolean"`

	ScalingGroupId *string `type:"string"`
}

// String returns the string representation
func (s ModifyInstancesProtectionInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyInstancesProtectionInput) GoString() string {
	return s.String()
}

// SetInstanceIds sets the InstanceIds field's value.
func (s *ModifyInstancesProtectionInput) SetInstanceIds(v []*string) *ModifyInstancesProtectionInput {
	s.InstanceIds = v
	return s
}

// SetProtectedFromScaleIn sets the ProtectedFromScaleIn field's value.
func (s *ModifyInstancesProtectionInput) SetProtectedFromScaleIn(v bool) *ModifyInstancesProtectionInput {
	s.ProtectedFromScaleIn = &v
	return s
}

// SetScalingGroupId sets the ScalingGroupId field's value.
func (s *ModifyInstancesProtectionInput) SetScalingGroupId(v string) *ModifyInstancesProtectionInput {
	s.ScalingGroupId = &v
	return s
}

type ModifyInstancesProtectionOutput struct {
	_ struct{} `type:"structure"`

	ModifyInstanceProtectionResults []*ModifyInstanceProtectionResultForModifyInstancesProtectionOutput `type:"list"`
}

// String returns the string representation
func (s ModifyInstancesProtectionOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyInstancesProtectionOutput) GoString() string {
	return s.String()
}

// SetModifyInstanceProtectionResults sets the ModifyInstanceProtectionResults field's value.
func (s *ModifyInstancesProtectionOutput) SetModifyInstanceProtectionResults(v []*ModifyInstanceProtectionResultForModifyInstancesProtectionOutput) *ModifyInstancesProtectionOutput {
	s.ModifyInstanceProtectionResults = v
	return s
}

type ModifyScalingConfigurationInput struct {
	_ struct{} `type:"structure"`

	Eip *EipForModifyScalingConfigurationInput `type:"structure"`

	HostName *string `type:"string"`

	ImageId *string `type:"string"`

	InstanceDescription *string `type:"string"`

	InstanceName *string `type:"string"`

	InstanceTypes []*string `type:"list"`

	KeyPairId *string `type:"string"`

	KeyPairName *string `type:"string"`

	Password *string `type:"string"`

	ScalingConfigurationId *string `type:"string"`

	ScalingConfigurationName *string `type:"string"`

	SecurityEnhancementStrategy *string `type:"string"`

	SecurityGroupIds []*string `type:"list"`

	UserData *string `type:"string"`

	Volumes []*VolumeForModifyScalingConfigurationInput `type:"list"`

	ZoneId *string `type:"string"`
}

// String returns the string representation
func (s ModifyScalingConfigurationInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyScalingConfigurationInput) GoString() string {
	return s.String()
}

// SetEip sets the Eip field's value.
func (s *ModifyScalingConfigurationInput) SetEip(v *EipForModifyScalingConfigurationInput) *ModifyScalingConfigurationInput {
	s.Eip = v
	return s
}

// SetHostName sets the HostName field's value.
func (s *ModifyScalingConfigurationInput) SetHostName(v string) *ModifyScalingConfigurationInput {
	s.HostName = &v
	return s
}

// SetImageId sets the ImageId field's value.
func (s *ModifyScalingConfigurationInput) SetImageId(v string) *ModifyScalingConfigurationInput {
	s.ImageId = &v
	return s
}

// SetInstanceDescription sets the InstanceDescription field's value.
func (s *ModifyScalingConfigurationInput) SetInstanceDescription(v string) *ModifyScalingConfigurationInput {
	s.InstanceDescription = &v
	return s
}

// SetInstanceName sets the InstanceName field's value.
func (s *ModifyScalingConfigurationInput) SetInstanceName(v string) *ModifyScalingConfigurationInput {
	s.InstanceName = &v
	return s
}

// SetInstanceTypes sets the InstanceTypes field's value.
func (s *ModifyScalingConfigurationInput) SetInstanceTypes(v []*string) *ModifyScalingConfigurationInput {
	s.InstanceTypes = v
	return s
}

// SetKeyPairId sets the KeyPairId field's value.
func (s *ModifyScalingConfigurationInput) SetKeyPairId(v string) *ModifyScalingConfigurationInput {
	s.KeyPairId = &v
	return s
}

// SetKeyPairName sets the KeyPairName field's value.
func (s *ModifyScalingConfigurationInput) SetKeyPairName(v string) *ModifyScalingConfigurationInput {
	s.KeyPairName = &v
	return s
}

// SetPassword sets the Password field's value.
func (s *ModifyScalingConfigurationInput) SetPassword(v string) *ModifyScalingConfigurationInput {
	s.Password = &v
	return s
}

// SetScalingConfigurationId sets the ScalingConfigurationId field's value.
func (s *ModifyScalingConfigurationInput) SetScalingConfigurationId(v string) *ModifyScalingConfigurationInput {
	s.ScalingConfigurationId = &v
	return s
}

// SetScalingConfigurationName sets the ScalingConfigurationName field's value.
func (s *ModifyScalingConfigurationInput) SetScalingConfigurationName(v string) *ModifyScalingConfigurationInput {
	s.ScalingConfigurationName = &v
	return s
}

// SetSecurityEnhancementStrategy sets the SecurityEnhancementStrategy field's value.
func (s *ModifyScalingConfigurationInput) SetSecurityEnhancementStrategy(v string) *ModifyScalingConfigurationInput {
	s.SecurityEnhancementStrategy = &v
	return s
}

// SetSecurityGroupIds sets the SecurityGroupIds field's value.
func (s *ModifyScalingConfigurationInput) SetSecurityGroupIds(v []*string) *ModifyScalingConfigurationInput {
	s.SecurityGroupIds = v
	return s
}

// SetUserData sets the UserData field's value.
func (s *ModifyScalingConfigurationInput) SetUserData(v string) *ModifyScalingConfigurationInput {
	s.UserData = &v
	return s
}

// SetVolumes sets the Volumes field's value.
func (s *ModifyScalingConfigurationInput) SetVolumes(v []*VolumeForModifyScalingConfigurationInput) *ModifyScalingConfigurationInput {
	s.Volumes = v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *ModifyScalingConfigurationInput) SetZoneId(v string) *ModifyScalingConfigurationInput {
	s.ZoneId = &v
	return s
}

type ModifyScalingConfigurationOutput struct {
	_ struct{} `type:"structure"`

	ScalingConfigurationId *string `type:"string"`
}

// String returns the string representation
func (s ModifyScalingConfigurationOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyScalingConfigurationOutput) GoString() string {
	return s.String()
}

// SetScalingConfigurationId sets the ScalingConfigurationId field's value.
func (s *ModifyScalingConfigurationOutput) SetScalingConfigurationId(v string) *ModifyScalingConfigurationOutput {
	s.ScalingConfigurationId = &v
	return s
}

type ModifyScalingGroupInput struct {
	_ struct{} `type:"structure"`

	ActiveScalingConfigurationId *string `type:"string"`

	DefaultCooldown *int32 `type:"int32"`

	DesireInstanceNumber *int32 `type:"int32"`

	HealthCheckType *string `type:"string"`

	InstanceTerminatePolicy *string `type:"string"`

	LaunchTemplateId *string `type:"string"`

	MaxInstanceNumber *int32 `type:"int32"`

	MinInstanceNumber *int32 `type:"int32"`

	NetworkInterfaces []*NetworkInterfaceForModifyScalingGroupInput `type:"list"`

	ScalingGroupId *string `type:"string"`

	ScalingGroupName *string `type:"string"`
}

// String returns the string representation
func (s ModifyScalingGroupInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyScalingGroupInput) GoString() string {
	return s.String()
}

// SetActiveScalingConfigurationId sets the ActiveScalingConfigurationId field's value.
func (s *ModifyScalingGroupInput) SetActiveScalingConfigurationId(v string) *ModifyScalingGroupInput {
	s.ActiveScalingConfigurationId = &v
	return s
}

// SetDefaultCooldown sets the DefaultCooldown field's value.
func (s *ModifyScalingGroupInput) SetDefaultCooldown(v int32) *ModifyScalingGroupInput {
	s.DefaultCooldown = &v
	return s
}

// SetDesireInstanceNumber sets the DesireInstanceNumber field's value.
func (s *ModifyScalingGroupInput) SetDesireInstanceNumber(v int32) *ModifyScalingGroupInput {
	s.DesireInstanceNumber = &v
	return s
}

// SetHealthCheckType sets the HealthCheckType field's value.
func (s *ModifyScalingGroupInput) SetHealthCheckType(v string) *ModifyScalingGroupInput {
	s.HealthCheckType = &v
	return s
}

// SetInstanceTerminatePolicy sets the InstanceTerminatePolicy field's value.
func (s *ModifyScalingGroupInput) SetInstanceTerminatePolicy(v string) *ModifyScalingGroupInput {
	s.InstanceTerminatePolicy = &v
	return s
}

// SetLaunchTemplateId sets the LaunchTemplateId field's value.
func (s *ModifyScalingGroupInput) SetLaunchTemplateId(v string) *ModifyScalingGroupInput {
	s.LaunchTemplateId = &v
	return s
}

// SetMaxInstanceNumber sets the MaxInstanceNumber field's value.
func (s *ModifyScalingGroupInput) SetMaxInstanceNumber(v int32) *ModifyScalingGroupInput {
	s.MaxInstanceNumber = &v
	return s
}

// SetMinInstanceNumber sets the MinInstanceNumber field's value.
func (s *ModifyScalingGroupInput) SetMinInstanceNumber(v int32) *ModifyScalingGroupInput {
	s.MinInstanceNumber = &v
	return s
}

// SetNetworkInterfaces sets the NetworkInterfaces field's value.
func (s *ModifyScalingGroupInput) SetNetworkInterfaces(v []*NetworkInterfaceForModifyScalingGroupInput) *ModifyScalingGroupInput {
	s.NetworkInterfaces = v
	return s
}

// SetScalingGroupId sets the ScalingGroupId field's value.
func (s *ModifyScalingGroupInput) SetScalingGroupId(v string) *ModifyScalingGroupInput {
	s.ScalingGroupId = &v
	return s
}

// SetScalingGroupName sets the ScalingGroupName field's value.
func (s *ModifyScalingGroupInput) SetScalingGroupName(v string) *ModifyScalingGroupInput {
	s.ScalingGroupName = &v
	return s
}

type ModifyScalingGroupOutput struct {
	_ struct{} `type:"structure"`

	ScalingGroupId *string `type:"string"`
}

// String returns the string representation
func (s ModifyScalingGroupOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyScalingGroupOutput) GoString() string {
	return s.String()
}

// SetScalingGroupId sets the ScalingGroupId field's value.
func (s *ModifyScalingGroupOutput) SetScalingGroupId(v string) *ModifyScalingGroupOutput {
	s.ScalingGroupId = &v
	return s
}

type ModifyScalingPolicyInput struct {
	_ struct{} `type:"structure"`

	AdjustmentType *string `type:"string"`

	AdjustmentValue *int32 `type:"int32"`

	AlarmId *string `type:"string"`

	Cooldown *int32 `type:"int32"`

	ScalingPolicyId *string `type:"string"`

	ScalingPolicyName *string `type:"string"`

	ScalingPolicyType *string `type:"string"`

	ScheduledPolicy *ScheduledPolicyForModifyScalingPolicyInput `type:"structure"`
}

// String returns the string representation
func (s ModifyScalingPolicyInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyScalingPolicyInput) GoString() string {
	return s.String()
}

// SetAdjustmentType sets the AdjustmentType field's value.
func (s *ModifyScalingPolicyInput) SetAdjustmentType(v string) *ModifyScalingPolicyInput {
	s.AdjustmentType = &v
	return s
}

// SetAdjustmentValue sets the AdjustmentValue field's value.
func (s *ModifyScalingPolicyInput) SetAdjustmentValue(v int32) *ModifyScalingPolicyInput {
	s.AdjustmentValue = &v
	return s
}

// SetAlarmId sets the AlarmId field's value.
func (s *ModifyScalingPolicyInput) SetAlarmId(v string) *ModifyScalingPolicyInput {
	s.AlarmId = &v
	return s
}

// SetCooldown sets the Cooldown field's value.
func (s *ModifyScalingPolicyInput) SetCooldown(v int32) *ModifyScalingPolicyInput {
	s.Cooldown = &v
	return s
}

// SetScalingPolicyId sets the ScalingPolicyId field's value.
func (s *ModifyScalingPolicyInput) SetScalingPolicyId(v string) *ModifyScalingPolicyInput {
	s.ScalingPolicyId = &v
	return s
}

// SetScalingPolicyName sets the ScalingPolicyName field's value.
func (s *ModifyScalingPolicyInput) SetScalingPolicyName(v string) *ModifyScalingPolicyInput {
	s.ScalingPolicyName = &v
	return s
}

// SetScalingPolicyType sets the ScalingPolicyType field's value.
func (s *ModifyScalingPolicyInput) SetScalingPolicyType(v string) *ModifyScalingPolicyInput {
	s.ScalingPolicyType = &v
	return s
}

// SetScheduledPolicy sets the ScheduledPolicy field's value.
func (s *ModifyScalingPolicyInput) SetScheduledPolicy(v *ScheduledPolicyForModifyScalingPolicyInput) *ModifyScalingPolicyInput {
	s.ScheduledPolicy = v
	return s
}

type ModifyScalingPolicyOutput struct {
	_ struct{} `type:"structure"`

	ScalingPolicyId *string `type:"string"`
}

// String returns the string representation
func (s ModifyScalingPolicyOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyScalingPolicyOutput) GoString() string {
	return s.String()
}

// SetScalingPolicyId sets the ScalingPolicyId field's value.
func (s *ModifyScalingPolicyOutput) SetScalingPolicyId(v string) *ModifyScalingPolicyOutput {
	s.ScalingPolicyId = &v
	return s
}

type NetworkInterfaceForCreateScalingGroupInput struct {
	_ struct{} `type:"structure"`

	SubnetId *string `type:"string"`
}

// String returns the string representation
func (s NetworkInterfaceForCreateScalingGroupInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s NetworkInterfaceForCreateScalingGroupInput) GoString() string {
	return s.String()
}

// SetSubnetId sets the SubnetId field's value.
func (s *NetworkInterfaceForCreateScalingGroupInput) SetSubnetId(v string) *NetworkInterfaceForCreateScalingGroupInput {
	s.SubnetId = &v
	return s
}

type NetworkInterfaceForModifyScalingGroupInput struct {
	_ struct{} `type:"structure"`

	SubnetId *string `type:"string"`
}

// String returns the string representation
func (s NetworkInterfaceForModifyScalingGroupInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s NetworkInterfaceForModifyScalingGroupInput) GoString() string {
	return s.String()
}

// SetSubnetId sets the SubnetId field's value.
func (s *NetworkInterfaceForModifyScalingGroupInput) SetSubnetId(v string) *NetworkInterfaceForModifyScalingGroupInput {
	s.SubnetId = &v
	return s
}

type RemoveInstancesInput struct {
	_ struct{} `type:"structure"`

	DecreaseDesiredCapacity *bool `type:"boolean"`

	InstanceIds []*string `type:"list"`

	ScalingGroupId *string `type:"string"`
}

// String returns the string representation
func (s RemoveInstancesInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s RemoveInstancesInput) GoString() string {
	return s.String()
}

// SetDecreaseDesiredCapacity sets the DecreaseDesiredCapacity field's value.
func (s *RemoveInstancesInput) SetDecreaseDesiredCapacity(v bool) *RemoveInstancesInput {
	s.DecreaseDesiredCapacity = &v
	return s
}

// SetInstanceIds sets the InstanceIds field's value.
func (s *RemoveInstancesInput) SetInstanceIds(v []*string) *RemoveInstancesInput {
	s.InstanceIds = v
	return s
}

// SetScalingGroupId sets the ScalingGroupId field's value.
func (s *RemoveInstancesInput) SetScalingGroupId(v string) *RemoveInstancesInput {
	s.ScalingGroupId = &v
	return s
}

type RemoveInstancesOutput struct {
	_ struct{} `type:"structure"`

	ScalingActivityId *string `type:"string"`
}

// String returns the string representation
func (s RemoveInstancesOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s RemoveInstancesOutput) GoString() string {
	return s.String()
}

// SetScalingActivityId sets the ScalingActivityId field's value.
func (s *RemoveInstancesOutput) SetScalingActivityId(v string) *RemoveInstancesOutput {
	s.ScalingActivityId = &v
	return s
}

type ScalingActivityForDescribeScalingActivitiesOutput struct {
	_ struct{} `type:"structure"`

	ActualAdjustInstanceNumber *int32 `type:"int32"`

	Cooldown *int32 `type:"int32"`

	CreatedAt *string `type:"string"`

	CurrentInstanceNumber *int32 `type:"int32"`

	ErrorInstanceIds []*string `type:"list"`

	ExceptedAdjustmentType *string `type:"string"`

	ExceptedAdjustmentValue *int32 `type:"int32"`

	ExpectedRunTime *string `type:"string"`

	MaxInstanceNumber *int32 `type:"int32"`

	MinInstanceNumber *int32 `type:"int32"`

	RelatedInstanceIds []*string `type:"list"`

	ResultMsg *string `type:"string"`

	ScalingActivityId *string `type:"string"`

	ScalingGroupId *string `type:"string"`

	ScalingPolicyId *string `type:"string"`

	Status *string `type:"string"`

	StoppedAt *string `type:"string"`

	SuccessInstanceIds []*string `type:"list"`

	TaskCategory *string `type:"string"`
}

// String returns the string representation
func (s ScalingActivityForDescribeScalingActivitiesOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s ScalingActivityForDescribeScalingActivitiesOutput) GoString() string {
	return s.String()
}

// SetActualAdjustInstanceNumber sets the ActualAdjustInstanceNumber field's value.
func (s *ScalingActivityForDescribeScalingActivitiesOutput) SetActualAdjustInstanceNumber(v int32) *ScalingActivityForDescribeScalingActivitiesOutput {
	s.ActualAdjustInstanceNumber = &v
	return s
}

// SetCooldown sets the Cooldown field's value.
func (s *ScalingActivityForDescribeScalingActivitiesOutput) SetCooldown(v int32) *ScalingActivityForDescribeScalingActivitiesOutput {
	s.Cooldown = &v
	return s
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *ScalingActivityForDescribeScalingActivitiesOutput) SetCreatedAt(v string) *ScalingActivityForDescribeScalingActivitiesOutput {
	s.CreatedAt = &v
	return s
}

// SetCurrentInstanceNumber sets the CurrentInstanceNumber field's value.
func (s *ScalingActivityForDescribeScalingActivitiesOutput) SetCurrentInstanceNumber(v int32) *ScalingActivityForDescribeScalingActivitiesOutput {
	s.CurrentInstanceNumber = &v
	return s
}

// SetErrorInstanceIds sets the ErrorInstanceIds field's value.
func (s *ScalingActivityForDescribeScalingActivitiesOutput) SetErrorInstanceIds(v []*string) *ScalingActivityForDescribeScalingActivitiesOutput {
	s.ErrorInstanceIds = v
	return s
}

// SetExceptedAdjustmentType sets the ExceptedAdjustmentType field's value.
func (s *ScalingActivityForDescribeScalingActivitiesOutput) SetExceptedAdjustmentType(v string) *ScalingActivityForDescribeScalingActivitiesOutput {
	s.ExceptedAdjustmentType = &v
	return s
}

// SetExceptedAdjustmentValue sets the ExceptedAdjustmentValue field's value.
func (s *ScalingActivityForDescribeScalingActivitiesOutput) SetExceptedAdjustmentValue(v int32) *ScalingActivityForDescribeScalingActivitiesOutput {
	s.ExceptedAdjustmentValue = &v
	return s
}

// SetExpectedRunTime sets the ExpectedRunTime field's value.
func (s *ScalingActivityForDescribeScalingActivitiesOutput) SetExpectedRunTime(v string) *ScalingActivityForDescribeScalingActivitiesOutput {
	s.ExpectedRunTime = &v
	return s
}

// SetMaxInstanceNumber sets the MaxInstanceNumber field's value.
func (s *ScalingActivityForDescribeScalingActivitiesOutput) SetMaxInstanceNumber(v int32) *ScalingActivityForDescribeScalingActivitiesOutput {
	s.MaxInstanceNumber = &v
	return s
}

// SetMinInstanceNumber sets the MinInstanceNumber field's value.
func (s *ScalingActivityForDescribeScalingActivitiesOutput) SetMinInstanceNumber(v int32) *ScalingActivityForDescribeScalingActivitiesOutput {
	s.MinInstanceNumber = &v
	return s
}

// SetRelatedInstanceIds sets the RelatedInstanceIds field's value.
func (s *ScalingActivityForDescribeScalingActivitiesOutput) SetRelatedInstanceIds(v []*string) *ScalingActivityForDescribeScalingActivitiesOutput {
	s.RelatedInstanceIds = v
	return s
}

// SetResultMsg sets the ResultMsg field's value.
func (s *ScalingActivityForDescribeScalingActivitiesOutput) SetResultMsg(v string) *ScalingActivityForDescribeScalingActivitiesOutput {
	s.ResultMsg = &v
	return s
}

// SetScalingActivityId sets the ScalingActivityId field's value.
func (s *ScalingActivityForDescribeScalingActivitiesOutput) SetScalingActivityId(v string) *ScalingActivityForDescribeScalingActivitiesOutput {
	s.ScalingActivityId = &v
	return s
}

// SetScalingGroupId sets the ScalingGroupId field's value.
func (s *ScalingActivityForDescribeScalingActivitiesOutput) SetScalingGroupId(v string) *ScalingActivityForDescribeScalingActivitiesOutput {
	s.ScalingGroupId = &v
	return s
}

// SetScalingPolicyId sets the ScalingPolicyId field's value.
func (s *ScalingActivityForDescribeScalingActivitiesOutput) SetScalingPolicyId(v string) *ScalingActivityForDescribeScalingActivitiesOutput {
	s.ScalingPolicyId = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *ScalingActivityForDescribeScalingActivitiesOutput) SetStatus(v string) *ScalingActivityForDescribeScalingActivitiesOutput {
	s.Status = &v
	return s
}

// SetStoppedAt sets the StoppedAt field's value.
func (s *ScalingActivityForDescribeScalingActivitiesOutput) SetStoppedAt(v string) *ScalingActivityForDescribeScalingActivitiesOutput {
	s.StoppedAt = &v
	return s
}

// SetSuccessInstanceIds sets the SuccessInstanceIds field's value.
func (s *ScalingActivityForDescribeScalingActivitiesOutput) SetSuccessInstanceIds(v []*string) *ScalingActivityForDescribeScalingActivitiesOutput {
	s.SuccessInstanceIds = v
	return s
}

// SetTaskCategory sets the TaskCategory field's value.
func (s *ScalingActivityForDescribeScalingActivitiesOutput) SetTaskCategory(v string) *ScalingActivityForDescribeScalingActivitiesOutput {
	s.TaskCategory = &v
	return s
}

type ScalingConfigurationForDescribeScalingConfigurationsOutput struct {
	_ struct{} `type:"structure"`

	CreatedAt *string `type:"string"`

	Eip *ScalingConfigurationsEipForDescribeScalingConfigurationsOutput `type:"structure"`

	HostName *string `type:"string"`

	ImageId *string `type:"string"`

	InstanceChargeType *string `type:"string"`

	InstanceDescription *string `type:"string"`

	InstanceName *string `type:"string"`

	InstanceTypes []*string `type:"list"`

	KeyPairId *string `type:"string"`

	KeyPairName *string `type:"string"`

	LifecycleState *string `type:"string"`

	ScalingConfigurationId *string `type:"string"`

	ScalingConfigurationName *string `type:"string"`

	ScalingGroupId *string `type:"string"`

	SecurityEnhancementStrategy *string `type:"string"`

	SecurityGroupIds []*string `type:"list"`

	UpdatedAt *string `type:"string"`

	UserData *string `type:"string"`

	Volumes []*ScalingConfigurationsVolumeForDescribeScalingConfigurationsOutput `type:"list"`

	ZoneId *string `type:"string"`
}

// String returns the string representation
func (s ScalingConfigurationForDescribeScalingConfigurationsOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s ScalingConfigurationForDescribeScalingConfigurationsOutput) GoString() string {
	return s.String()
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *ScalingConfigurationForDescribeScalingConfigurationsOutput) SetCreatedAt(v string) *ScalingConfigurationForDescribeScalingConfigurationsOutput {
	s.CreatedAt = &v
	return s
}

// SetEip sets the Eip field's value.
func (s *ScalingConfigurationForDescribeScalingConfigurationsOutput) SetEip(v *ScalingConfigurationsEipForDescribeScalingConfigurationsOutput) *ScalingConfigurationForDescribeScalingConfigurationsOutput {
	s.Eip = v
	return s
}

// SetHostName sets the HostName field's value.
func (s *ScalingConfigurationForDescribeScalingConfigurationsOutput) SetHostName(v string) *ScalingConfigurationForDescribeScalingConfigurationsOutput {
	s.HostName = &v
	return s
}

// SetImageId sets the ImageId field's value.
func (s *ScalingConfigurationForDescribeScalingConfigurationsOutput) SetImageId(v string) *ScalingConfigurationForDescribeScalingConfigurationsOutput {
	s.ImageId = &v
	return s
}

// SetInstanceChargeType sets the InstanceChargeType field's value.
func (s *ScalingConfigurationForDescribeScalingConfigurationsOutput) SetInstanceChargeType(v string) *ScalingConfigurationForDescribeScalingConfigurationsOutput {
	s.InstanceChargeType = &v
	return s
}

// SetInstanceDescription sets the InstanceDescription field's value.
func (s *ScalingConfigurationForDescribeScalingConfigurationsOutput) SetInstanceDescription(v string) *ScalingConfigurationForDescribeScalingConfigurationsOutput {
	s.InstanceDescription = &v
	return s
}

// SetInstanceName sets the InstanceName field's value.
func (s *ScalingConfigurationForDescribeScalingConfigurationsOutput) SetInstanceName(v string) *ScalingConfigurationForDescribeScalingConfigurationsOutput {
	s.InstanceName = &v
	return s
}

// SetInstanceTypes sets the InstanceTypes field's value.
func (s *ScalingConfigurationForDescribeScalingConfigurationsOutput) SetInstanceTypes(v []*string) *ScalingConfigurationForDescribeScalingConfigurationsOutput {
	s.InstanceTypes = v
	return s
}

// SetKeyPairId sets the KeyPairId field's value.
func (s *ScalingConfigurationForDescribeScalingConfigurationsOutput) SetKeyPairId(v string) *ScalingConfigurationForDescribeScalingConfigurationsOutput {
	s.KeyPairId = &v
	return s
}

// SetKeyPairName sets the KeyPairName field's value.
func (s *ScalingConfigurationForDescribeScalingConfigurationsOutput) SetKeyPairName(v string) *ScalingConfigurationForDescribeScalingConfigurationsOutput {
	s.KeyPairName = &v
	return s
}

// SetLifecycleState sets the LifecycleState field's value.
func (s *ScalingConfigurationForDescribeScalingConfigurationsOutput) SetLifecycleState(v string) *ScalingConfigurationForDescribeScalingConfigurationsOutput {
	s.LifecycleState = &v
	return s
}

// SetScalingConfigurationId sets the ScalingConfigurationId field's value.
func (s *ScalingConfigurationForDescribeScalingConfigurationsOutput) SetScalingConfigurationId(v string) *ScalingConfigurationForDescribeScalingConfigurationsOutput {
	s.ScalingConfigurationId = &v
	return s
}

// SetScalingConfigurationName sets the ScalingConfigurationName field's value.
func (s *ScalingConfigurationForDescribeScalingConfigurationsOutput) SetScalingConfigurationName(v string) *ScalingConfigurationForDescribeScalingConfigurationsOutput {
	s.ScalingConfigurationName = &v
	return s
}

// SetScalingGroupId sets the ScalingGroupId field's value.
func (s *ScalingConfigurationForDescribeScalingConfigurationsOutput) SetScalingGroupId(v string) *ScalingConfigurationForDescribeScalingConfigurationsOutput {
	s.ScalingGroupId = &v
	return s
}

// SetSecurityEnhancementStrategy sets the SecurityEnhancementStrategy field's value.
func (s *ScalingConfigurationForDescribeScalingConfigurationsOutput) SetSecurityEnhancementStrategy(v string) *ScalingConfigurationForDescribeScalingConfigurationsOutput {
	s.SecurityEnhancementStrategy = &v
	return s
}

// SetSecurityGroupIds sets the SecurityGroupIds field's value.
func (s *ScalingConfigurationForDescribeScalingConfigurationsOutput) SetSecurityGroupIds(v []*string) *ScalingConfigurationForDescribeScalingConfigurationsOutput {
	s.SecurityGroupIds = v
	return s
}

// SetUpdatedAt sets the UpdatedAt field's value.
func (s *ScalingConfigurationForDescribeScalingConfigurationsOutput) SetUpdatedAt(v string) *ScalingConfigurationForDescribeScalingConfigurationsOutput {
	s.UpdatedAt = &v
	return s
}

// SetUserData sets the UserData field's value.
func (s *ScalingConfigurationForDescribeScalingConfigurationsOutput) SetUserData(v string) *ScalingConfigurationForDescribeScalingConfigurationsOutput {
	s.UserData = &v
	return s
}

// SetVolumes sets the Volumes field's value.
func (s *ScalingConfigurationForDescribeScalingConfigurationsOutput) SetVolumes(v []*ScalingConfigurationsVolumeForDescribeScalingConfigurationsOutput) *ScalingConfigurationForDescribeScalingConfigurationsOutput {
	s.Volumes = v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *ScalingConfigurationForDescribeScalingConfigurationsOutput) SetZoneId(v string) *ScalingConfigurationForDescribeScalingConfigurationsOutput {
	s.ZoneId = &v
	return s
}

type ScalingConfigurationsEipForDescribeScalingConfigurationsOutput struct {
	_ struct{} `type:"structure"`

	Bandwidth *int64 `type:"int64"`

	BillingType *int32 `type:"int32"`

	ISP *string `type:"string"`
}

// String returns the string representation
func (s ScalingConfigurationsEipForDescribeScalingConfigurationsOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s ScalingConfigurationsEipForDescribeScalingConfigurationsOutput) GoString() string {
	return s.String()
}

// SetBandwidth sets the Bandwidth field's value.
func (s *ScalingConfigurationsEipForDescribeScalingConfigurationsOutput) SetBandwidth(v int64) *ScalingConfigurationsEipForDescribeScalingConfigurationsOutput {
	s.Bandwidth = &v
	return s
}

// SetBillingType sets the BillingType field's value.
func (s *ScalingConfigurationsEipForDescribeScalingConfigurationsOutput) SetBillingType(v int32) *ScalingConfigurationsEipForDescribeScalingConfigurationsOutput {
	s.BillingType = &v
	return s
}

// SetISP sets the ISP field's value.
func (s *ScalingConfigurationsEipForDescribeScalingConfigurationsOutput) SetISP(v string) *ScalingConfigurationsEipForDescribeScalingConfigurationsOutput {
	s.ISP = &v
	return s
}

type ScalingConfigurationsVolumeForDescribeScalingConfigurationsOutput struct {
	_ struct{} `type:"structure"`

	DeleteWithInstance *bool `type:"boolean"`

	Size *int32 `type:"int32"`

	VolumeType *string `type:"string"`
}

// String returns the string representation
func (s ScalingConfigurationsVolumeForDescribeScalingConfigurationsOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s ScalingConfigurationsVolumeForDescribeScalingConfigurationsOutput) GoString() string {
	return s.String()
}

// SetDeleteWithInstance sets the DeleteWithInstance field's value.
func (s *ScalingConfigurationsVolumeForDescribeScalingConfigurationsOutput) SetDeleteWithInstance(v bool) *ScalingConfigurationsVolumeForDescribeScalingConfigurationsOutput {
	s.DeleteWithInstance = &v
	return s
}

// SetSize sets the Size field's value.
func (s *ScalingConfigurationsVolumeForDescribeScalingConfigurationsOutput) SetSize(v int32) *ScalingConfigurationsVolumeForDescribeScalingConfigurationsOutput {
	s.Size = &v
	return s
}

// SetVolumeType sets the VolumeType field's value.
func (s *ScalingConfigurationsVolumeForDescribeScalingConfigurationsOutput) SetVolumeType(v string) *ScalingConfigurationsVolumeForDescribeScalingConfigurationsOutput {
	s.VolumeType = &v
	return s
}

type ScalingGroupForDescribeScalingGroupsOutput struct {
	_ struct{} `type:"structure"`

	ActiveScalingConfigurationId *string `type:"string"`

	CreatedAt *string `type:"string"`

	DefaultCooldown *int32 `type:"int32"`

	DesireInstanceNumber *int32 `type:"int32"`

	HealthCheckType *string `type:"string"`

	InstanceTerminatePolicy *string `type:"string"`

	LaunchTemplateId *string `type:"string"`

	LifeCycleState *string `type:"string"`

	LoadBalancerGroups []*ScalingGroupsLoadBalancerGroupForDescribeScalingGroupsOutput `type:"list"`

	MaxInstanceNumber *int32 `type:"int32"`

	MinInstanceNumber *int32 `type:"int32"`

	NetworkInterfaces []*ScalingGroupsNetworkInterfaceForDescribeScalingGroupsOutput `type:"list"`

	ScalingGroupId *string `type:"string"`

	ScalingGroupName *string `type:"string"`

	TotalInstanceCount *int32 `type:"int32"`

	UpdatedAt *string `type:"string"`

	VpcId *string `type:"string"`

	ZoneId *string `type:"string"`
}

// String returns the string representation
func (s ScalingGroupForDescribeScalingGroupsOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s ScalingGroupForDescribeScalingGroupsOutput) GoString() string {
	return s.String()
}

// SetActiveScalingConfigurationId sets the ActiveScalingConfigurationId field's value.
func (s *ScalingGroupForDescribeScalingGroupsOutput) SetActiveScalingConfigurationId(v string) *ScalingGroupForDescribeScalingGroupsOutput {
	s.ActiveScalingConfigurationId = &v
	return s
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *ScalingGroupForDescribeScalingGroupsOutput) SetCreatedAt(v string) *ScalingGroupForDescribeScalingGroupsOutput {
	s.CreatedAt = &v
	return s
}

// SetDefaultCooldown sets the DefaultCooldown field's value.
func (s *ScalingGroupForDescribeScalingGroupsOutput) SetDefaultCooldown(v int32) *ScalingGroupForDescribeScalingGroupsOutput {
	s.DefaultCooldown = &v
	return s
}

// SetDesireInstanceNumber sets the DesireInstanceNumber field's value.
func (s *ScalingGroupForDescribeScalingGroupsOutput) SetDesireInstanceNumber(v int32) *ScalingGroupForDescribeScalingGroupsOutput {
	s.DesireInstanceNumber = &v
	return s
}

// SetHealthCheckType sets the HealthCheckType field's value.
func (s *ScalingGroupForDescribeScalingGroupsOutput) SetHealthCheckType(v string) *ScalingGroupForDescribeScalingGroupsOutput {
	s.HealthCheckType = &v
	return s
}

// SetInstanceTerminatePolicy sets the InstanceTerminatePolicy field's value.
func (s *ScalingGroupForDescribeScalingGroupsOutput) SetInstanceTerminatePolicy(v string) *ScalingGroupForDescribeScalingGroupsOutput {
	s.InstanceTerminatePolicy = &v
	return s
}

// SetLaunchTemplateId sets the LaunchTemplateId field's value.
func (s *ScalingGroupForDescribeScalingGroupsOutput) SetLaunchTemplateId(v string) *ScalingGroupForDescribeScalingGroupsOutput {
	s.LaunchTemplateId = &v
	return s
}

// SetLifeCycleState sets the LifeCycleState field's value.
func (s *ScalingGroupForDescribeScalingGroupsOutput) SetLifeCycleState(v string) *ScalingGroupForDescribeScalingGroupsOutput {
	s.LifeCycleState = &v
	return s
}

// SetLoadBalancerGroups sets the LoadBalancerGroups field's value.
func (s *ScalingGroupForDescribeScalingGroupsOutput) SetLoadBalancerGroups(v []*ScalingGroupsLoadBalancerGroupForDescribeScalingGroupsOutput) *ScalingGroupForDescribeScalingGroupsOutput {
	s.LoadBalancerGroups = v
	return s
}

// SetMaxInstanceNumber sets the MaxInstanceNumber field's value.
func (s *ScalingGroupForDescribeScalingGroupsOutput) SetMaxInstanceNumber(v int32) *ScalingGroupForDescribeScalingGroupsOutput {
	s.MaxInstanceNumber = &v
	return s
}

// SetMinInstanceNumber sets the MinInstanceNumber field's value.
func (s *ScalingGroupForDescribeScalingGroupsOutput) SetMinInstanceNumber(v int32) *ScalingGroupForDescribeScalingGroupsOutput {
	s.MinInstanceNumber = &v
	return s
}

// SetNetworkInterfaces sets the NetworkInterfaces field's value.
func (s *ScalingGroupForDescribeScalingGroupsOutput) SetNetworkInterfaces(v []*ScalingGroupsNetworkInterfaceForDescribeScalingGroupsOutput) *ScalingGroupForDescribeScalingGroupsOutput {
	s.NetworkInterfaces = v
	return s
}

// SetScalingGroupId sets the ScalingGroupId field's value.
func (s *ScalingGroupForDescribeScalingGroupsOutput) SetScalingGroupId(v string) *ScalingGroupForDescribeScalingGroupsOutput {
	s.ScalingGroupId = &v
	return s
}

// SetScalingGroupName sets the ScalingGroupName field's value.
func (s *ScalingGroupForDescribeScalingGroupsOutput) SetScalingGroupName(v string) *ScalingGroupForDescribeScalingGroupsOutput {
	s.ScalingGroupName = &v
	return s
}

// SetTotalInstanceCount sets the TotalInstanceCount field's value.
func (s *ScalingGroupForDescribeScalingGroupsOutput) SetTotalInstanceCount(v int32) *ScalingGroupForDescribeScalingGroupsOutput {
	s.TotalInstanceCount = &v
	return s
}

// SetUpdatedAt sets the UpdatedAt field's value.
func (s *ScalingGroupForDescribeScalingGroupsOutput) SetUpdatedAt(v string) *ScalingGroupForDescribeScalingGroupsOutput {
	s.UpdatedAt = &v
	return s
}

// SetVpcId sets the VpcId field's value.
func (s *ScalingGroupForDescribeScalingGroupsOutput) SetVpcId(v string) *ScalingGroupForDescribeScalingGroupsOutput {
	s.VpcId = &v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *ScalingGroupForDescribeScalingGroupsOutput) SetZoneId(v string) *ScalingGroupForDescribeScalingGroupsOutput {
	s.ZoneId = &v
	return s
}

type ScalingGroupsLoadBalancerGroupForDescribeScalingGroupsOutput struct {
	_ struct{} `type:"structure"`

	LoadBalancerId *string `type:"string"`

	ServerGroupAttributes []*ScalingGroupsLoadBalancerGroupsServerGroupAttributeForDescribeScalingGroupsOutput `type:"list"`
}

// String returns the string representation
func (s ScalingGroupsLoadBalancerGroupForDescribeScalingGroupsOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s ScalingGroupsLoadBalancerGroupForDescribeScalingGroupsOutput) GoString() string {
	return s.String()
}

// SetLoadBalancerId sets the LoadBalancerId field's value.
func (s *ScalingGroupsLoadBalancerGroupForDescribeScalingGroupsOutput) SetLoadBalancerId(v string) *ScalingGroupsLoadBalancerGroupForDescribeScalingGroupsOutput {
	s.LoadBalancerId = &v
	return s
}

// SetServerGroupAttributes sets the ServerGroupAttributes field's value.
func (s *ScalingGroupsLoadBalancerGroupForDescribeScalingGroupsOutput) SetServerGroupAttributes(v []*ScalingGroupsLoadBalancerGroupsServerGroupAttributeForDescribeScalingGroupsOutput) *ScalingGroupsLoadBalancerGroupForDescribeScalingGroupsOutput {
	s.ServerGroupAttributes = v
	return s
}

type ScalingGroupsLoadBalancerGroupsServerGroupAttributeForDescribeScalingGroupsOutput struct {
	_ struct{} `type:"structure"`

	Port *int32 `type:"int32"`

	ServerGroupId *string `type:"string"`

	Weight *int32 `type:"int32"`
}

// String returns the string representation
func (s ScalingGroupsLoadBalancerGroupsServerGroupAttributeForDescribeScalingGroupsOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s ScalingGroupsLoadBalancerGroupsServerGroupAttributeForDescribeScalingGroupsOutput) GoString() string {
	return s.String()
}

// SetPort sets the Port field's value.
func (s *ScalingGroupsLoadBalancerGroupsServerGroupAttributeForDescribeScalingGroupsOutput) SetPort(v int32) *ScalingGroupsLoadBalancerGroupsServerGroupAttributeForDescribeScalingGroupsOutput {
	s.Port = &v
	return s
}

// SetServerGroupId sets the ServerGroupId field's value.
func (s *ScalingGroupsLoadBalancerGroupsServerGroupAttributeForDescribeScalingGroupsOutput) SetServerGroupId(v string) *ScalingGroupsLoadBalancerGroupsServerGroupAttributeForDescribeScalingGroupsOutput {
	s.ServerGroupId = &v
	return s
}

// SetWeight sets the Weight field's value.
func (s *ScalingGroupsLoadBalancerGroupsServerGroupAttributeForDescribeScalingGroupsOutput) SetWeight(v int32) *ScalingGroupsLoadBalancerGroupsServerGroupAttributeForDescribeScalingGroupsOutput {
	s.Weight = &v
	return s
}

type ScalingGroupsNetworkInterfaceForDescribeScalingGroupsOutput struct {
	_ struct{} `type:"structure"`

	SubnetId *string `type:"string"`
}

// String returns the string representation
func (s ScalingGroupsNetworkInterfaceForDescribeScalingGroupsOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s ScalingGroupsNetworkInterfaceForDescribeScalingGroupsOutput) GoString() string {
	return s.String()
}

// SetSubnetId sets the SubnetId field's value.
func (s *ScalingGroupsNetworkInterfaceForDescribeScalingGroupsOutput) SetSubnetId(v string) *ScalingGroupsNetworkInterfaceForDescribeScalingGroupsOutput {
	s.SubnetId = &v
	return s
}

type ScalingInstanceForDescribeScalingInstancesOutput struct {
	_ struct{} `type:"structure"`

	InstanceId *string `type:"string"`

	ScalingConfigurationId *string `type:"string"`

	ScalingGroupId *string `type:"string"`

	ScalingPolicyId *string `type:"string"`

	Status *string `type:"string"`
}

// String returns the string representation
func (s ScalingInstanceForDescribeScalingInstancesOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s ScalingInstanceForDescribeScalingInstancesOutput) GoString() string {
	return s.String()
}

// SetInstanceId sets the InstanceId field's value.
func (s *ScalingInstanceForDescribeScalingInstancesOutput) SetInstanceId(v string) *ScalingInstanceForDescribeScalingInstancesOutput {
	s.InstanceId = &v
	return s
}

// SetScalingConfigurationId sets the ScalingConfigurationId field's value.
func (s *ScalingInstanceForDescribeScalingInstancesOutput) SetScalingConfigurationId(v string) *ScalingInstanceForDescribeScalingInstancesOutput {
	s.ScalingConfigurationId = &v
	return s
}

// SetScalingGroupId sets the ScalingGroupId field's value.
func (s *ScalingInstanceForDescribeScalingInstancesOutput) SetScalingGroupId(v string) *ScalingInstanceForDescribeScalingInstancesOutput {
	s.ScalingGroupId = &v
	return s
}

// SetScalingPolicyId sets the ScalingPolicyId field's value.
func (s *ScalingInstanceForDescribeScalingInstancesOutput) SetScalingPolicyId(v string) *ScalingInstanceForDescribeScalingInstancesOutput {
	s.ScalingPolicyId = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *ScalingInstanceForDescribeScalingInstancesOutput) SetStatus(v string) *ScalingInstanceForDescribeScalingInstancesOutput {
	s.Status = &v
	return s
}

type ScalingPoliciesScheduledPolicyForDescribeScalingPoliciesOutput struct {
	_ struct{} `type:"structure"`

	LaunchTime *string `type:"string"`

	RecurrenceEndTime *string `type:"string"`

	RecurrenceStartTime *string `type:"string"`

	RecurrenceType *string `type:"string"`

	RecurrenceValue *string `type:"string"`
}

// String returns the string representation
func (s ScalingPoliciesScheduledPolicyForDescribeScalingPoliciesOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s ScalingPoliciesScheduledPolicyForDescribeScalingPoliciesOutput) GoString() string {
	return s.String()
}

// SetLaunchTime sets the LaunchTime field's value.
func (s *ScalingPoliciesScheduledPolicyForDescribeScalingPoliciesOutput) SetLaunchTime(v string) *ScalingPoliciesScheduledPolicyForDescribeScalingPoliciesOutput {
	s.LaunchTime = &v
	return s
}

// SetRecurrenceEndTime sets the RecurrenceEndTime field's value.
func (s *ScalingPoliciesScheduledPolicyForDescribeScalingPoliciesOutput) SetRecurrenceEndTime(v string) *ScalingPoliciesScheduledPolicyForDescribeScalingPoliciesOutput {
	s.RecurrenceEndTime = &v
	return s
}

// SetRecurrenceStartTime sets the RecurrenceStartTime field's value.
func (s *ScalingPoliciesScheduledPolicyForDescribeScalingPoliciesOutput) SetRecurrenceStartTime(v string) *ScalingPoliciesScheduledPolicyForDescribeScalingPoliciesOutput {
	s.RecurrenceStartTime = &v
	return s
}

// SetRecurrenceType sets the RecurrenceType field's value.
func (s *ScalingPoliciesScheduledPolicyForDescribeScalingPoliciesOutput) SetRecurrenceType(v string) *ScalingPoliciesScheduledPolicyForDescribeScalingPoliciesOutput {
	s.RecurrenceType = &v
	return s
}

// SetRecurrenceValue sets the RecurrenceValue field's value.
func (s *ScalingPoliciesScheduledPolicyForDescribeScalingPoliciesOutput) SetRecurrenceValue(v string) *ScalingPoliciesScheduledPolicyForDescribeScalingPoliciesOutput {
	s.RecurrenceValue = &v
	return s
}

type ScalingPolicyForDescribeScalingPoliciesOutput struct {
	_ struct{} `type:"structure"`

	AdjustmentType *string `type:"string"`

	AdjustmentValue *int32 `type:"int32"`

	AlarmId *string `type:"string"`

	Cooldown *int32 `type:"int32"`

	ScalingGroupId *string `type:"string"`

	ScalingPolicyId *string `type:"string"`

	ScalingPolicyName *string `type:"string"`

	ScalingPolicyType *string `type:"string"`

	ScheduledPolicy *ScalingPoliciesScheduledPolicyForDescribeScalingPoliciesOutput `type:"structure"`

	Status *string `type:"string"`
}

// String returns the string representation
func (s ScalingPolicyForDescribeScalingPoliciesOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s ScalingPolicyForDescribeScalingPoliciesOutput) GoString() string {
	return s.String()
}

// SetAdjustmentType sets the AdjustmentType field's value.
func (s *ScalingPolicyForDescribeScalingPoliciesOutput) SetAdjustmentType(v string) *ScalingPolicyForDescribeScalingPoliciesOutput {
	s.AdjustmentType = &v
	return s
}

// SetAdjustmentValue sets the AdjustmentValue field's value.
func (s *ScalingPolicyForDescribeScalingPoliciesOutput) SetAdjustmentValue(v int32) *ScalingPolicyForDescribeScalingPoliciesOutput {
	s.AdjustmentValue = &v
	return s
}

// SetAlarmId sets the AlarmId field's value.
func (s *ScalingPolicyForDescribeScalingPoliciesOutput) SetAlarmId(v string) *ScalingPolicyForDescribeScalingPoliciesOutput {
	s.AlarmId = &v
	return s
}

// SetCooldown sets the Cooldown field's value.
func (s *ScalingPolicyForDescribeScalingPoliciesOutput) SetCooldown(v int32) *ScalingPolicyForDescribeScalingPoliciesOutput {
	s.Cooldown = &v
	return s
}

// SetScalingGroupId sets the ScalingGroupId field's value.
func (s *ScalingPolicyForDescribeScalingPoliciesOutput) SetScalingGroupId(v string) *ScalingPolicyForDescribeScalingPoliciesOutput {
	s.ScalingGroupId = &v
	return s
}

// SetScalingPolicyId sets the ScalingPolicyId field's value.
func (s *ScalingPolicyForDescribeScalingPoliciesOutput) SetScalingPolicyId(v string) *ScalingPolicyForDescribeScalingPoliciesOutput {
	s.ScalingPolicyId = &v
	return s
}

// SetScalingPolicyName sets the ScalingPolicyName field's value.
func (s *ScalingPolicyForDescribeScalingPoliciesOutput) SetScalingPolicyName(v string) *ScalingPolicyForDescribeScalingPoliciesOutput {
	s.ScalingPolicyName = &v
	return s
}

// SetScalingPolicyType sets the ScalingPolicyType field's value.
func (s *ScalingPolicyForDescribeScalingPoliciesOutput) SetScalingPolicyType(v string) *ScalingPolicyForDescribeScalingPoliciesOutput {
	s.ScalingPolicyType = &v
	return s
}

// SetScheduledPolicy sets the ScheduledPolicy field's value.
func (s *ScalingPolicyForDescribeScalingPoliciesOutput) SetScheduledPolicy(v *ScalingPoliciesScheduledPolicyForDescribeScalingPoliciesOutput) *ScalingPolicyForDescribeScalingPoliciesOutput {
	s.ScheduledPolicy = v
	return s
}

// SetStatus sets the Status field's value.
func (s *ScalingPolicyForDescribeScalingPoliciesOutput) SetStatus(v string) *ScalingPolicyForDescribeScalingPoliciesOutput {
	s.Status = &v
	return s
}

type ScheduledPolicyForCreateScalingPolicyInput struct {
	_ struct{} `type:"structure"`

	LaunchTime *string `type:"string"`

	RecurrenceEndTime *string `type:"string"`

	RecurrenceStartTime *string `type:"string"`

	RecurrenceType *string `type:"string"`

	RecurrenceValue *string `type:"string"`
}

// String returns the string representation
func (s ScheduledPolicyForCreateScalingPolicyInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s ScheduledPolicyForCreateScalingPolicyInput) GoString() string {
	return s.String()
}

// SetLaunchTime sets the LaunchTime field's value.
func (s *ScheduledPolicyForCreateScalingPolicyInput) SetLaunchTime(v string) *ScheduledPolicyForCreateScalingPolicyInput {
	s.LaunchTime = &v
	return s
}

// SetRecurrenceEndTime sets the RecurrenceEndTime field's value.
func (s *ScheduledPolicyForCreateScalingPolicyInput) SetRecurrenceEndTime(v string) *ScheduledPolicyForCreateScalingPolicyInput {
	s.RecurrenceEndTime = &v
	return s
}

// SetRecurrenceStartTime sets the RecurrenceStartTime field's value.
func (s *ScheduledPolicyForCreateScalingPolicyInput) SetRecurrenceStartTime(v string) *ScheduledPolicyForCreateScalingPolicyInput {
	s.RecurrenceStartTime = &v
	return s
}

// SetRecurrenceType sets the RecurrenceType field's value.
func (s *ScheduledPolicyForCreateScalingPolicyInput) SetRecurrenceType(v string) *ScheduledPolicyForCreateScalingPolicyInput {
	s.RecurrenceType = &v
	return s
}

// SetRecurrenceValue sets the RecurrenceValue field's value.
func (s *ScheduledPolicyForCreateScalingPolicyInput) SetRecurrenceValue(v string) *ScheduledPolicyForCreateScalingPolicyInput {
	s.RecurrenceValue = &v
	return s
}

type ScheduledPolicyForModifyScalingPolicyInput struct {
	_ struct{} `type:"structure"`

	LaunchTime *string `type:"string"`

	RecurrenceEndTime *string `type:"string"`

	RecurrenceStartTime *string `type:"string"`

	RecurrenceType *string `type:"string"`

	RecurrenceValue *string `type:"string"`
}

// String returns the string representation
func (s ScheduledPolicyForModifyScalingPolicyInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s ScheduledPolicyForModifyScalingPolicyInput) GoString() string {
	return s.String()
}

// SetLaunchTime sets the LaunchTime field's value.
func (s *ScheduledPolicyForModifyScalingPolicyInput) SetLaunchTime(v string) *ScheduledPolicyForModifyScalingPolicyInput {
	s.LaunchTime = &v
	return s
}

// SetRecurrenceEndTime sets the RecurrenceEndTime field's value.
func (s *ScheduledPolicyForModifyScalingPolicyInput) SetRecurrenceEndTime(v string) *ScheduledPolicyForModifyScalingPolicyInput {
	s.RecurrenceEndTime = &v
	return s
}

// SetRecurrenceStartTime sets the RecurrenceStartTime field's value.
func (s *ScheduledPolicyForModifyScalingPolicyInput) SetRecurrenceStartTime(v string) *ScheduledPolicyForModifyScalingPolicyInput {
	s.RecurrenceStartTime = &v
	return s
}

// SetRecurrenceType sets the RecurrenceType field's value.
func (s *ScheduledPolicyForModifyScalingPolicyInput) SetRecurrenceType(v string) *ScheduledPolicyForModifyScalingPolicyInput {
	s.RecurrenceType = &v
	return s
}

// SetRecurrenceValue sets the RecurrenceValue field's value.
func (s *ScheduledPolicyForModifyScalingPolicyInput) SetRecurrenceValue(v string) *ScheduledPolicyForModifyScalingPolicyInput {
	s.RecurrenceValue = &v
	return s
}

type StartScalingPolicyInput struct {
	_ struct{} `type:"structure"`

	ScalingPolicyId *string `type:"string"`
}

// String returns the string representation
func (s StartScalingPolicyInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s StartScalingPolicyInput) GoString() string {
	return s.String()
}

// SetScalingPolicyId sets the ScalingPolicyId field's value.
func (s *StartScalingPolicyInput) SetScalingPolicyId(v string) *StartScalingPolicyInput {
	s.ScalingPolicyId = &v
	return s
}

type StartScalingPolicyOutput struct {
	_ struct{} `type:"structure"`

	ScalingPolicyId *string `type:"string"`
}

// String returns the string representation
func (s StartScalingPolicyOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s StartScalingPolicyOutput) GoString() string {
	return s.String()
}

// SetScalingPolicyId sets the ScalingPolicyId field's value.
func (s *StartScalingPolicyOutput) SetScalingPolicyId(v string) *StartScalingPolicyOutput {
	s.ScalingPolicyId = &v
	return s
}

type StopScalingPolicyInput struct {
	_ struct{} `type:"structure"`

	ScalingPolicyId *string `type:"string"`
}

// String returns the string representation
func (s StopScalingPolicyInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s StopScalingPolicyInput) GoString() string {
	return s.String()
}

// SetScalingPolicyId sets the ScalingPolicyId field's value.
func (s *StopScalingPolicyInput) SetScalingPolicyId(v string) *StopScalingPolicyInput {
	s.ScalingPolicyId = &v
	return s
}

type StopScalingPolicyOutput struct {
	_ struct{} `type:"structure"`

	ScalingPolicyId *string `type:"string"`
}

// String returns the string representation
func (s StopScalingPolicyOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s StopScalingPolicyOutput) GoString() string {
	return s.String()
}

// SetScalingPolicyId sets the ScalingPolicyId field's value.
func (s *StopScalingPolicyOutput) SetScalingPolicyId(v string) *StopScalingPolicyOutput {
	s.ScalingPolicyId = &v
	return s
}

type VolumeForCreateScalingConfigurationInput struct {
	_ struct{} `type:"structure"`

	DeleteWithInstance *bool `type:"boolean"`

	Size *int32 `type:"int32"`

	VolumeType *string `type:"string"`
}

// String returns the string representation
func (s VolumeForCreateScalingConfigurationInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s VolumeForCreateScalingConfigurationInput) GoString() string {
	return s.String()
}

// SetDeleteWithInstance sets the DeleteWithInstance field's value.
func (s *VolumeForCreateScalingConfigurationInput) SetDeleteWithInstance(v bool) *VolumeForCreateScalingConfigurationInput {
	s.DeleteWithInstance = &v
	return s
}

// SetSize sets the Size field's value.
func (s *VolumeForCreateScalingConfigurationInput) SetSize(v int32) *VolumeForCreateScalingConfigurationInput {
	s.Size = &v
	return s
}

// SetVolumeType sets the VolumeType field's value.
func (s *VolumeForCreateScalingConfigurationInput) SetVolumeType(v string) *VolumeForCreateScalingConfigurationInput {
	s.VolumeType = &v
	return s
}

type VolumeForModifyScalingConfigurationInput struct {
	_ struct{} `type:"structure"`

	DeleteWithInstance *bool `type:"boolean"`

	Size *int32 `type:"int32"`

	VolumeType *string `type:"string"`
}

// String returns the string representation
func (s VolumeForModifyScalingConfigurationInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s VolumeForModifyScalingConfigurationInput) GoString() string {
	return s.String()
}

// SetDeleteWithInstance sets the DeleteWithInstance field's value.
func (s *VolumeForModifyScalingConfigurationInput) SetDeleteWithInstance(v bool) *VolumeForModifyScalingConfigurationInput {
	s.DeleteWithInstance = &v
	return s
}

// SetSize sets the Size field's value.
func (s *VolumeForModifyScalingConfigurationInput) SetSize(v int32) *VolumeForModifyScalingConfigurationInput {
	s.Size = &v
	return s
}

// SetVolumeType sets the VolumeType field's value.
func (s *VolumeForModifyScalingConfigurationInput) SetVolumeType(v string) *VolumeForModifyScalingConfigurationInput {
	s.VolumeType = &v
	return s
}
