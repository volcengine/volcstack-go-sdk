// Code generated by volcstack with private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package ebsiface provides an interface to enable mocking the EBS service client
// for testing your code.
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters.
package ebs

import (
	"code.byted.org/iaasng/volcstack-go-sdk/volcstack"
	"code.byted.org/iaasng/volcstack-go-sdk/volcstack/request"
)

// EBSAPI provides an interface to enable mocking the
// ebs.EBS service client's API operation,
// paginators, and waiters. This make unit testing your code that calls out
// to the SDK's service client's calls easier.
//
// The best way to use this interface is so the SDK's service client's calls
// can be stubbed out for unit testing your code with the SDK without needing
// to inject custom request handlers into the SDK's request pipeline.
//
//    // myFunc uses an SDK service client to make a request to
//    // EBS.
//    func myFunc(svc EBSAPI) bool {
//        // Make svc.AttachVolume request
//    }
//
//    func main() {
//        sess := session.New()
//        svc := ebs.New(sess)
//
//        myFunc(svc)
//    }
//
// In your _test.go file:
//
//    // Define a mock struct to be used in your unit tests of myFunc.
//    type mockEBSClient struct {
//        EBSAPI
//    }
//    func (m *mockEBSClient) AttachVolume(input *AttachVolumeInput) (*AttachVolumeOutput, error) {
//        // mock response/functionality
//    }
//
//    func TestMyFunc(t *testing.T) {
//        // Setup Test
//        mockSvc := &mockEBSClient{}
//
//        myfunc(mockSvc)
//
//        // Verify myFunc's functionality
//    }
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters. Its suggested to use the pattern above for testing, or using
// tooling to generate mocks to satisfy the interfaces.
type EBSAPI interface {
	AttachVolumeCommon(*map[string]interface{}) (*map[string]interface{}, error)
	AttachVolumeCommonWithContext(volcstack.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	AttachVolumeCommonRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	AttachVolume(*AttachVolumeInput) (*AttachVolumeOutput, error)
	AttachVolumeWithContext(volcstack.Context, *AttachVolumeInput, ...request.Option) (*AttachVolumeOutput, error)
	AttachVolumeRequest(*AttachVolumeInput) (*request.Request, *AttachVolumeOutput)

	CreateVolumeCommon(*map[string]interface{}) (*map[string]interface{}, error)
	CreateVolumeCommonWithContext(volcstack.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	CreateVolumeCommonRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	CreateVolume(*CreateVolumeInput) (*CreateVolumeOutput, error)
	CreateVolumeWithContext(volcstack.Context, *CreateVolumeInput, ...request.Option) (*CreateVolumeOutput, error)
	CreateVolumeRequest(*CreateVolumeInput) (*request.Request, *CreateVolumeOutput)

	DeleteVolumeCommon(*map[string]interface{}) (*map[string]interface{}, error)
	DeleteVolumeCommonWithContext(volcstack.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	DeleteVolumeCommonRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	DeleteVolume(*DeleteVolumeInput) (*DeleteVolumeOutput, error)
	DeleteVolumeWithContext(volcstack.Context, *DeleteVolumeInput, ...request.Option) (*DeleteVolumeOutput, error)
	DeleteVolumeRequest(*DeleteVolumeInput) (*request.Request, *DeleteVolumeOutput)

	DescribeVolumesCommon(*map[string]interface{}) (*map[string]interface{}, error)
	DescribeVolumesCommonWithContext(volcstack.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	DescribeVolumesCommonRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	DescribeVolumes(*DescribeVolumesInput) (*DescribeVolumesOutput, error)
	DescribeVolumesWithContext(volcstack.Context, *DescribeVolumesInput, ...request.Option) (*DescribeVolumesOutput, error)
	DescribeVolumesRequest(*DescribeVolumesInput) (*request.Request, *DescribeVolumesOutput)

	DetachVolumeCommon(*map[string]interface{}) (*map[string]interface{}, error)
	DetachVolumeCommonWithContext(volcstack.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	DetachVolumeCommonRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	DetachVolume(*DetachVolumeInput) (*DetachVolumeOutput, error)
	DetachVolumeWithContext(volcstack.Context, *DetachVolumeInput, ...request.Option) (*DetachVolumeOutput, error)
	DetachVolumeRequest(*DetachVolumeInput) (*request.Request, *DetachVolumeOutput)

	ExtendVolumeCommon(*map[string]interface{}) (*map[string]interface{}, error)
	ExtendVolumeCommonWithContext(volcstack.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	ExtendVolumeCommonRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	ExtendVolume(*ExtendVolumeInput) (*ExtendVolumeOutput, error)
	ExtendVolumeWithContext(volcstack.Context, *ExtendVolumeInput, ...request.Option) (*ExtendVolumeOutput, error)
	ExtendVolumeRequest(*ExtendVolumeInput) (*request.Request, *ExtendVolumeOutput)

	ModifyVolumeAttributeCommon(*map[string]interface{}) (*map[string]interface{}, error)
	ModifyVolumeAttributeCommonWithContext(volcstack.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	ModifyVolumeAttributeCommonRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	ModifyVolumeAttribute(*ModifyVolumeAttributeInput) (*ModifyVolumeAttributeOutput, error)
	ModifyVolumeAttributeWithContext(volcstack.Context, *ModifyVolumeAttributeInput, ...request.Option) (*ModifyVolumeAttributeOutput, error)
	ModifyVolumeAttributeRequest(*ModifyVolumeAttributeInput) (*request.Request, *ModifyVolumeAttributeOutput)
}

var _ EBSAPI = (*EBS)(nil)
