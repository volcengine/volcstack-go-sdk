// Code generated by volcstack with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cen

import (
	"github.com/volcengine/volcstack-go-sdk/volcstack"
	"github.com/volcengine/volcstack-go-sdk/volcstack/request"
	"github.com/volcengine/volcstack-go-sdk/volcstack/response"
	"github.com/volcengine/volcstack-go-sdk/volcstack/volcstackutil"
)

const opDescribeCenSupportedRegionsCommon = "DescribeCenSupportedRegions"

// DescribeCenSupportedRegionsCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the DescribeCenSupportedRegionsCommon operation. The "output" return
// value will be populated with the DescribeCenSupportedRegionsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeCenSupportedRegionsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeCenSupportedRegionsCommon Send returns without error.
//
// See DescribeCenSupportedRegionsCommon for more information on using the DescribeCenSupportedRegionsCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeCenSupportedRegionsCommonRequest method.
//    req, resp := client.DescribeCenSupportedRegionsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CEN) DescribeCenSupportedRegionsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeCenSupportedRegionsCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeCenSupportedRegionsCommon API operation for CEN.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for CEN's
// API operation DescribeCenSupportedRegionsCommon for usage and error information.
func (c *CEN) DescribeCenSupportedRegionsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeCenSupportedRegionsCommonRequest(input)
	return out, req.Send()
}

// DescribeCenSupportedRegionsCommonWithContext is the same as DescribeCenSupportedRegionsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeCenSupportedRegionsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CEN) DescribeCenSupportedRegionsCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeCenSupportedRegionsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeCenSupportedRegions = "DescribeCenSupportedRegions"

// DescribeCenSupportedRegionsRequest generates a "volcstack/request.Request" representing the
// client's request for the DescribeCenSupportedRegions operation. The "output" return
// value will be populated with the DescribeCenSupportedRegionsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeCenSupportedRegionsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeCenSupportedRegionsCommon Send returns without error.
//
// See DescribeCenSupportedRegions for more information on using the DescribeCenSupportedRegions
// API call, and error handling.
//
//    // Example sending a request using the DescribeCenSupportedRegionsRequest method.
//    req, resp := client.DescribeCenSupportedRegionsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CEN) DescribeCenSupportedRegionsRequest(input *DescribeCenSupportedRegionsInput) (req *request.Request, output *DescribeCenSupportedRegionsOutput) {
	op := &request.Operation{
		Name:       opDescribeCenSupportedRegions,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeCenSupportedRegionsInput{}
	}

	output = &DescribeCenSupportedRegionsOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeCenSupportedRegions API operation for CEN.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for CEN's
// API operation DescribeCenSupportedRegions for usage and error information.
func (c *CEN) DescribeCenSupportedRegions(input *DescribeCenSupportedRegionsInput) (*DescribeCenSupportedRegionsOutput, error) {
	req, out := c.DescribeCenSupportedRegionsRequest(input)
	return out, req.Send()
}

// DescribeCenSupportedRegionsWithContext is the same as DescribeCenSupportedRegions with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeCenSupportedRegions for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CEN) DescribeCenSupportedRegionsWithContext(ctx volcstack.Context, input *DescribeCenSupportedRegionsInput, opts ...request.Option) (*DescribeCenSupportedRegionsOutput, error) {
	req, out := c.DescribeCenSupportedRegionsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CenSupportedRegionForDescribeCenSupportedRegionsOutput struct {
	_ struct{} `type:"structure"`

	RegionId *string `type:"string"`
}

// String returns the string representation
func (s CenSupportedRegionForDescribeCenSupportedRegionsOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s CenSupportedRegionForDescribeCenSupportedRegionsOutput) GoString() string {
	return s.String()
}

// SetRegionId sets the RegionId field's value.
func (s *CenSupportedRegionForDescribeCenSupportedRegionsOutput) SetRegionId(v string) *CenSupportedRegionForDescribeCenSupportedRegionsOutput {
	s.RegionId = &v
	return s
}

type DescribeCenSupportedRegionsInput struct {
	_ struct{} `type:"structure"`

	PageNumber *int64 `type:"integer"`

	PageSize *int64 `type:"integer"`

	RegionId *string `type:"string"`
}

// String returns the string representation
func (s DescribeCenSupportedRegionsInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeCenSupportedRegionsInput) GoString() string {
	return s.String()
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeCenSupportedRegionsInput) SetPageNumber(v int64) *DescribeCenSupportedRegionsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeCenSupportedRegionsInput) SetPageSize(v int64) *DescribeCenSupportedRegionsInput {
	s.PageSize = &v
	return s
}

// SetRegionId sets the RegionId field's value.
func (s *DescribeCenSupportedRegionsInput) SetRegionId(v string) *DescribeCenSupportedRegionsInput {
	s.RegionId = &v
	return s
}

type DescribeCenSupportedRegionsOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	CenSupportedRegions []*CenSupportedRegionForDescribeCenSupportedRegionsOutput `type:"list"`

	PageNumber *int64 `type:"integer"`

	PageSize *int64 `type:"integer"`

	TotalCount *int64 `type:"integer"`
}

// String returns the string representation
func (s DescribeCenSupportedRegionsOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeCenSupportedRegionsOutput) GoString() string {
	return s.String()
}

// SetCenSupportedRegions sets the CenSupportedRegions field's value.
func (s *DescribeCenSupportedRegionsOutput) SetCenSupportedRegions(v []*CenSupportedRegionForDescribeCenSupportedRegionsOutput) *DescribeCenSupportedRegionsOutput {
	s.CenSupportedRegions = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeCenSupportedRegionsOutput) SetPageNumber(v int64) *DescribeCenSupportedRegionsOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeCenSupportedRegionsOutput) SetPageSize(v int64) *DescribeCenSupportedRegionsOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *DescribeCenSupportedRegionsOutput) SetTotalCount(v int64) *DescribeCenSupportedRegionsOutput {
	s.TotalCount = &v
	return s
}
