// Code generated by volcstack with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vpn

import (
	"github.com/volcengine/volcstack-go-sdk/volcstack"
	"github.com/volcengine/volcstack-go-sdk/volcstack/request"
	"github.com/volcengine/volcstack-go-sdk/volcstack/response"
	"github.com/volcengine/volcstack-go-sdk/volcstack/volcstackutil"
)

const opDescribeVpnConnectionAttributesCommon = "DescribeVpnConnectionAttributes"

// DescribeVpnConnectionAttributesCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the DescribeVpnConnectionAttributesCommon operation. The "output" return
// value will be populated with the DescribeVpnConnectionAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeVpnConnectionAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeVpnConnectionAttributesCommon Send returns without error.
//
// See DescribeVpnConnectionAttributesCommon for more information on using the DescribeVpnConnectionAttributesCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeVpnConnectionAttributesCommonRequest method.
//    req, resp := client.DescribeVpnConnectionAttributesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPN) DescribeVpnConnectionAttributesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeVpnConnectionAttributesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeVpnConnectionAttributesCommon API operation for VPN.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for VPN's
// API operation DescribeVpnConnectionAttributesCommon for usage and error information.
func (c *VPN) DescribeVpnConnectionAttributesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeVpnConnectionAttributesCommonRequest(input)
	return out, req.Send()
}

// DescribeVpnConnectionAttributesCommonWithContext is the same as DescribeVpnConnectionAttributesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeVpnConnectionAttributesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPN) DescribeVpnConnectionAttributesCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeVpnConnectionAttributesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeVpnConnectionAttributes = "DescribeVpnConnectionAttributes"

// DescribeVpnConnectionAttributesRequest generates a "volcstack/request.Request" representing the
// client's request for the DescribeVpnConnectionAttributes operation. The "output" return
// value will be populated with the DescribeVpnConnectionAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeVpnConnectionAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeVpnConnectionAttributesCommon Send returns without error.
//
// See DescribeVpnConnectionAttributes for more information on using the DescribeVpnConnectionAttributes
// API call, and error handling.
//
//    // Example sending a request using the DescribeVpnConnectionAttributesRequest method.
//    req, resp := client.DescribeVpnConnectionAttributesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPN) DescribeVpnConnectionAttributesRequest(input *DescribeVpnConnectionAttributesInput) (req *request.Request, output *DescribeVpnConnectionAttributesOutput) {
	op := &request.Operation{
		Name:       opDescribeVpnConnectionAttributes,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeVpnConnectionAttributesInput{}
	}

	output = &DescribeVpnConnectionAttributesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeVpnConnectionAttributes API operation for VPN.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for VPN's
// API operation DescribeVpnConnectionAttributes for usage and error information.
func (c *VPN) DescribeVpnConnectionAttributes(input *DescribeVpnConnectionAttributesInput) (*DescribeVpnConnectionAttributesOutput, error) {
	req, out := c.DescribeVpnConnectionAttributesRequest(input)
	return out, req.Send()
}

// DescribeVpnConnectionAttributesWithContext is the same as DescribeVpnConnectionAttributes with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeVpnConnectionAttributes for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPN) DescribeVpnConnectionAttributesWithContext(ctx volcstack.Context, input *DescribeVpnConnectionAttributesInput, opts ...request.Option) (*DescribeVpnConnectionAttributesOutput, error) {
	req, out := c.DescribeVpnConnectionAttributesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeVpnConnectionAttributesInput struct {
	_ struct{} `type:"structure"`

	// VpnConnectionId is a required field
	VpnConnectionId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DescribeVpnConnectionAttributesInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeVpnConnectionAttributesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeVpnConnectionAttributesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeVpnConnectionAttributesInput"}
	if s.VpnConnectionId == nil {
		invalidParams.Add(request.NewErrParamRequired("VpnConnectionId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetVpnConnectionId sets the VpnConnectionId field's value.
func (s *DescribeVpnConnectionAttributesInput) SetVpnConnectionId(v string) *DescribeVpnConnectionAttributesInput {
	s.VpnConnectionId = &v
	return s
}

type DescribeVpnConnectionAttributesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	AccountId *string `type:"string"`

	CreationTime *string `type:"string"`

	CustomerGatewayId *string `type:"string"`

	Description *string `type:"string"`

	IkeConfig *IkeConfigForDescribeVpnConnectionAttributesOutput `type:"structure"`

	IpsecConfig *IpsecConfigForDescribeVpnConnectionAttributesOutput `type:"structure"`

	LocalSubnet []*string `type:"list"`

	NatTraversal *bool `type:"boolean"`

	RemoteSubnet []*string `type:"list"`

	RequestId *string `type:"string"`

	Status *string `type:"string"`

	UpdateTime *string `type:"string"`

	VpnConnectionId *string `type:"string"`

	VpnConnectionName *string `type:"string"`

	VpnGatewayId *string `type:"string"`
}

// String returns the string representation
func (s DescribeVpnConnectionAttributesOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeVpnConnectionAttributesOutput) GoString() string {
	return s.String()
}

// SetAccountId sets the AccountId field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetAccountId(v string) *DescribeVpnConnectionAttributesOutput {
	s.AccountId = &v
	return s
}

// SetCreationTime sets the CreationTime field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetCreationTime(v string) *DescribeVpnConnectionAttributesOutput {
	s.CreationTime = &v
	return s
}

// SetCustomerGatewayId sets the CustomerGatewayId field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetCustomerGatewayId(v string) *DescribeVpnConnectionAttributesOutput {
	s.CustomerGatewayId = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetDescription(v string) *DescribeVpnConnectionAttributesOutput {
	s.Description = &v
	return s
}

// SetIkeConfig sets the IkeConfig field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetIkeConfig(v *IkeConfigForDescribeVpnConnectionAttributesOutput) *DescribeVpnConnectionAttributesOutput {
	s.IkeConfig = v
	return s
}

// SetIpsecConfig sets the IpsecConfig field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetIpsecConfig(v *IpsecConfigForDescribeVpnConnectionAttributesOutput) *DescribeVpnConnectionAttributesOutput {
	s.IpsecConfig = v
	return s
}

// SetLocalSubnet sets the LocalSubnet field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetLocalSubnet(v []*string) *DescribeVpnConnectionAttributesOutput {
	s.LocalSubnet = v
	return s
}

// SetNatTraversal sets the NatTraversal field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetNatTraversal(v bool) *DescribeVpnConnectionAttributesOutput {
	s.NatTraversal = &v
	return s
}

// SetRemoteSubnet sets the RemoteSubnet field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetRemoteSubnet(v []*string) *DescribeVpnConnectionAttributesOutput {
	s.RemoteSubnet = v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetRequestId(v string) *DescribeVpnConnectionAttributesOutput {
	s.RequestId = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetStatus(v string) *DescribeVpnConnectionAttributesOutput {
	s.Status = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetUpdateTime(v string) *DescribeVpnConnectionAttributesOutput {
	s.UpdateTime = &v
	return s
}

// SetVpnConnectionId sets the VpnConnectionId field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetVpnConnectionId(v string) *DescribeVpnConnectionAttributesOutput {
	s.VpnConnectionId = &v
	return s
}

// SetVpnConnectionName sets the VpnConnectionName field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetVpnConnectionName(v string) *DescribeVpnConnectionAttributesOutput {
	s.VpnConnectionName = &v
	return s
}

// SetVpnGatewayId sets the VpnGatewayId field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetVpnGatewayId(v string) *DescribeVpnConnectionAttributesOutput {
	s.VpnGatewayId = &v
	return s
}

type IkeConfigForDescribeVpnConnectionAttributesOutput struct {
	_ struct{} `type:"structure"`

	AuthAlg *string `type:"string"`

	DhGroup *string `type:"string"`

	EncAlg *string `type:"string"`

	Lifetime *int64 `type:"integer"`

	LocalId *string `type:"string"`

	Mode *string `type:"string"`

	Psk *string `type:"string"`

	RemoteId *string `type:"string"`

	Version *string `type:"string"`
}

// String returns the string representation
func (s IkeConfigForDescribeVpnConnectionAttributesOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s IkeConfigForDescribeVpnConnectionAttributesOutput) GoString() string {
	return s.String()
}

// SetAuthAlg sets the AuthAlg field's value.
func (s *IkeConfigForDescribeVpnConnectionAttributesOutput) SetAuthAlg(v string) *IkeConfigForDescribeVpnConnectionAttributesOutput {
	s.AuthAlg = &v
	return s
}

// SetDhGroup sets the DhGroup field's value.
func (s *IkeConfigForDescribeVpnConnectionAttributesOutput) SetDhGroup(v string) *IkeConfigForDescribeVpnConnectionAttributesOutput {
	s.DhGroup = &v
	return s
}

// SetEncAlg sets the EncAlg field's value.
func (s *IkeConfigForDescribeVpnConnectionAttributesOutput) SetEncAlg(v string) *IkeConfigForDescribeVpnConnectionAttributesOutput {
	s.EncAlg = &v
	return s
}

// SetLifetime sets the Lifetime field's value.
func (s *IkeConfigForDescribeVpnConnectionAttributesOutput) SetLifetime(v int64) *IkeConfigForDescribeVpnConnectionAttributesOutput {
	s.Lifetime = &v
	return s
}

// SetLocalId sets the LocalId field's value.
func (s *IkeConfigForDescribeVpnConnectionAttributesOutput) SetLocalId(v string) *IkeConfigForDescribeVpnConnectionAttributesOutput {
	s.LocalId = &v
	return s
}

// SetMode sets the Mode field's value.
func (s *IkeConfigForDescribeVpnConnectionAttributesOutput) SetMode(v string) *IkeConfigForDescribeVpnConnectionAttributesOutput {
	s.Mode = &v
	return s
}

// SetPsk sets the Psk field's value.
func (s *IkeConfigForDescribeVpnConnectionAttributesOutput) SetPsk(v string) *IkeConfigForDescribeVpnConnectionAttributesOutput {
	s.Psk = &v
	return s
}

// SetRemoteId sets the RemoteId field's value.
func (s *IkeConfigForDescribeVpnConnectionAttributesOutput) SetRemoteId(v string) *IkeConfigForDescribeVpnConnectionAttributesOutput {
	s.RemoteId = &v
	return s
}

// SetVersion sets the Version field's value.
func (s *IkeConfigForDescribeVpnConnectionAttributesOutput) SetVersion(v string) *IkeConfigForDescribeVpnConnectionAttributesOutput {
	s.Version = &v
	return s
}

type IpsecConfigForDescribeVpnConnectionAttributesOutput struct {
	_ struct{} `type:"structure"`

	AuthAlg *string `type:"string"`

	DhGroup *string `type:"string"`

	EncAlg *string `type:"string"`

	Lifetime *int64 `type:"integer"`
}

// String returns the string representation
func (s IpsecConfigForDescribeVpnConnectionAttributesOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s IpsecConfigForDescribeVpnConnectionAttributesOutput) GoString() string {
	return s.String()
}

// SetAuthAlg sets the AuthAlg field's value.
func (s *IpsecConfigForDescribeVpnConnectionAttributesOutput) SetAuthAlg(v string) *IpsecConfigForDescribeVpnConnectionAttributesOutput {
	s.AuthAlg = &v
	return s
}

// SetDhGroup sets the DhGroup field's value.
func (s *IpsecConfigForDescribeVpnConnectionAttributesOutput) SetDhGroup(v string) *IpsecConfigForDescribeVpnConnectionAttributesOutput {
	s.DhGroup = &v
	return s
}

// SetEncAlg sets the EncAlg field's value.
func (s *IpsecConfigForDescribeVpnConnectionAttributesOutput) SetEncAlg(v string) *IpsecConfigForDescribeVpnConnectionAttributesOutput {
	s.EncAlg = &v
	return s
}

// SetLifetime sets the Lifetime field's value.
func (s *IpsecConfigForDescribeVpnConnectionAttributesOutput) SetLifetime(v int64) *IpsecConfigForDescribeVpnConnectionAttributesOutput {
	s.Lifetime = &v
	return s
}
