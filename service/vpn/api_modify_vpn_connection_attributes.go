// Code generated by volcstack with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vpn

import (
	"github.com/volcengine/volcstack-go-sdk/volcstack"
	"github.com/volcengine/volcstack-go-sdk/volcstack/request"
	"github.com/volcengine/volcstack-go-sdk/volcstack/response"
	"github.com/volcengine/volcstack-go-sdk/volcstack/volcstackutil"
)

const opModifyVpnConnectionAttributesCommon = "ModifyVpnConnectionAttributes"

// ModifyVpnConnectionAttributesCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the ModifyVpnConnectionAttributesCommon operation. The "output" return
// value will be populated with the ModifyVpnConnectionAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyVpnConnectionAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyVpnConnectionAttributesCommon Send returns without error.
//
// See ModifyVpnConnectionAttributesCommon for more information on using the ModifyVpnConnectionAttributesCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyVpnConnectionAttributesCommonRequest method.
//    req, resp := client.ModifyVpnConnectionAttributesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPN) ModifyVpnConnectionAttributesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyVpnConnectionAttributesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyVpnConnectionAttributesCommon API operation for VPN.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for VPN's
// API operation ModifyVpnConnectionAttributesCommon for usage and error information.
func (c *VPN) ModifyVpnConnectionAttributesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyVpnConnectionAttributesCommonRequest(input)
	return out, req.Send()
}

// ModifyVpnConnectionAttributesCommonWithContext is the same as ModifyVpnConnectionAttributesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyVpnConnectionAttributesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPN) ModifyVpnConnectionAttributesCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyVpnConnectionAttributesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyVpnConnectionAttributes = "ModifyVpnConnectionAttributes"

// ModifyVpnConnectionAttributesRequest generates a "volcstack/request.Request" representing the
// client's request for the ModifyVpnConnectionAttributes operation. The "output" return
// value will be populated with the ModifyVpnConnectionAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyVpnConnectionAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyVpnConnectionAttributesCommon Send returns without error.
//
// See ModifyVpnConnectionAttributes for more information on using the ModifyVpnConnectionAttributes
// API call, and error handling.
//
//    // Example sending a request using the ModifyVpnConnectionAttributesRequest method.
//    req, resp := client.ModifyVpnConnectionAttributesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPN) ModifyVpnConnectionAttributesRequest(input *ModifyVpnConnectionAttributesInput) (req *request.Request, output *ModifyVpnConnectionAttributesOutput) {
	op := &request.Operation{
		Name:       opModifyVpnConnectionAttributes,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyVpnConnectionAttributesInput{}
	}

	output = &ModifyVpnConnectionAttributesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyVpnConnectionAttributes API operation for VPN.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for VPN's
// API operation ModifyVpnConnectionAttributes for usage and error information.
func (c *VPN) ModifyVpnConnectionAttributes(input *ModifyVpnConnectionAttributesInput) (*ModifyVpnConnectionAttributesOutput, error) {
	req, out := c.ModifyVpnConnectionAttributesRequest(input)
	return out, req.Send()
}

// ModifyVpnConnectionAttributesWithContext is the same as ModifyVpnConnectionAttributes with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyVpnConnectionAttributes for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPN) ModifyVpnConnectionAttributesWithContext(ctx volcstack.Context, input *ModifyVpnConnectionAttributesInput, opts ...request.Option) (*ModifyVpnConnectionAttributesOutput, error) {
	req, out := c.ModifyVpnConnectionAttributesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type IkeConfigForModifyVpnConnectionAttributesInput struct {
	_ struct{} `type:"structure"`

	AuthAlg *string `type:"string" enum:"IkeConfigAuthAlgForModifyVpnConnectionAttributesInput"`

	DhGroup *string `type:"string" enum:"IkeConfigDhGroupForModifyVpnConnectionAttributesInput"`

	EncAlg *string `type:"string" enum:"IkeConfigEncAlgForModifyVpnConnectionAttributesInput"`

	Lifetime *string `type:"string"`

	LocalId *string `type:"string"`

	Mode *string `type:"string" enum:"IkeConfigModeForModifyVpnConnectionAttributesInput"`

	Psk *string `type:"string"`

	RemoteId *string `type:"string"`

	Version *string `type:"string" enum:"IkeConfigVersionForModifyVpnConnectionAttributesInput"`
}

// String returns the string representation
func (s IkeConfigForModifyVpnConnectionAttributesInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s IkeConfigForModifyVpnConnectionAttributesInput) GoString() string {
	return s.String()
}

// SetAuthAlg sets the AuthAlg field's value.
func (s *IkeConfigForModifyVpnConnectionAttributesInput) SetAuthAlg(v string) *IkeConfigForModifyVpnConnectionAttributesInput {
	s.AuthAlg = &v
	return s
}

// SetDhGroup sets the DhGroup field's value.
func (s *IkeConfigForModifyVpnConnectionAttributesInput) SetDhGroup(v string) *IkeConfigForModifyVpnConnectionAttributesInput {
	s.DhGroup = &v
	return s
}

// SetEncAlg sets the EncAlg field's value.
func (s *IkeConfigForModifyVpnConnectionAttributesInput) SetEncAlg(v string) *IkeConfigForModifyVpnConnectionAttributesInput {
	s.EncAlg = &v
	return s
}

// SetLifetime sets the Lifetime field's value.
func (s *IkeConfigForModifyVpnConnectionAttributesInput) SetLifetime(v string) *IkeConfigForModifyVpnConnectionAttributesInput {
	s.Lifetime = &v
	return s
}

// SetLocalId sets the LocalId field's value.
func (s *IkeConfigForModifyVpnConnectionAttributesInput) SetLocalId(v string) *IkeConfigForModifyVpnConnectionAttributesInput {
	s.LocalId = &v
	return s
}

// SetMode sets the Mode field's value.
func (s *IkeConfigForModifyVpnConnectionAttributesInput) SetMode(v string) *IkeConfigForModifyVpnConnectionAttributesInput {
	s.Mode = &v
	return s
}

// SetPsk sets the Psk field's value.
func (s *IkeConfigForModifyVpnConnectionAttributesInput) SetPsk(v string) *IkeConfigForModifyVpnConnectionAttributesInput {
	s.Psk = &v
	return s
}

// SetRemoteId sets the RemoteId field's value.
func (s *IkeConfigForModifyVpnConnectionAttributesInput) SetRemoteId(v string) *IkeConfigForModifyVpnConnectionAttributesInput {
	s.RemoteId = &v
	return s
}

// SetVersion sets the Version field's value.
func (s *IkeConfigForModifyVpnConnectionAttributesInput) SetVersion(v string) *IkeConfigForModifyVpnConnectionAttributesInput {
	s.Version = &v
	return s
}

type IpsecConfigForModifyVpnConnectionAttributesInput struct {
	_ struct{} `type:"structure"`

	AuthAlg *string `type:"string" enum:"IpsecConfigAuthAlgForModifyVpnConnectionAttributesInput"`

	DhGroup *string `type:"string" enum:"IpsecConfigDhGroupForModifyVpnConnectionAttributesInput"`

	EncAlg *string `type:"string" enum:"IpsecConfigEncAlgForModifyVpnConnectionAttributesInput"`

	Lifetime *string `type:"string"`
}

// String returns the string representation
func (s IpsecConfigForModifyVpnConnectionAttributesInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s IpsecConfigForModifyVpnConnectionAttributesInput) GoString() string {
	return s.String()
}

// SetAuthAlg sets the AuthAlg field's value.
func (s *IpsecConfigForModifyVpnConnectionAttributesInput) SetAuthAlg(v string) *IpsecConfigForModifyVpnConnectionAttributesInput {
	s.AuthAlg = &v
	return s
}

// SetDhGroup sets the DhGroup field's value.
func (s *IpsecConfigForModifyVpnConnectionAttributesInput) SetDhGroup(v string) *IpsecConfigForModifyVpnConnectionAttributesInput {
	s.DhGroup = &v
	return s
}

// SetEncAlg sets the EncAlg field's value.
func (s *IpsecConfigForModifyVpnConnectionAttributesInput) SetEncAlg(v string) *IpsecConfigForModifyVpnConnectionAttributesInput {
	s.EncAlg = &v
	return s
}

// SetLifetime sets the Lifetime field's value.
func (s *IpsecConfigForModifyVpnConnectionAttributesInput) SetLifetime(v string) *IpsecConfigForModifyVpnConnectionAttributesInput {
	s.Lifetime = &v
	return s
}

type ModifyVpnConnectionAttributesInput struct {
	_ struct{} `type:"structure"`

	Description *string `min:"1" max:"255" type:"string"`

	IkeConfig *IkeConfigForModifyVpnConnectionAttributesInput `type:"structure"`

	IpsecConfig *IpsecConfigForModifyVpnConnectionAttributesInput `type:"structure"`

	LocalSubnet *string `type:"string"`

	NatTraversal *bool `type:"boolean"`

	RemoteSubnet *string `type:"string"`

	// VpnConnectionId is a required field
	VpnConnectionId *string `type:"string" required:"true"`

	VpnConnectionName *string `min:"1" max:"128" type:"string"`
}

// String returns the string representation
func (s ModifyVpnConnectionAttributesInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyVpnConnectionAttributesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyVpnConnectionAttributesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyVpnConnectionAttributesInput"}
	if s.Description != nil && len(*s.Description) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("Description", 1))
	}
	if s.Description != nil && len(*s.Description) > 255 {
		invalidParams.Add(request.NewErrParamMaxLen("Description", 255, *s.Description))
	}
	if s.VpnConnectionId == nil {
		invalidParams.Add(request.NewErrParamRequired("VpnConnectionId"))
	}
	if s.VpnConnectionName != nil && len(*s.VpnConnectionName) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("VpnConnectionName", 1))
	}
	if s.VpnConnectionName != nil && len(*s.VpnConnectionName) > 128 {
		invalidParams.Add(request.NewErrParamMaxLen("VpnConnectionName", 128, *s.VpnConnectionName))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDescription sets the Description field's value.
func (s *ModifyVpnConnectionAttributesInput) SetDescription(v string) *ModifyVpnConnectionAttributesInput {
	s.Description = &v
	return s
}

// SetIkeConfig sets the IkeConfig field's value.
func (s *ModifyVpnConnectionAttributesInput) SetIkeConfig(v *IkeConfigForModifyVpnConnectionAttributesInput) *ModifyVpnConnectionAttributesInput {
	s.IkeConfig = v
	return s
}

// SetIpsecConfig sets the IpsecConfig field's value.
func (s *ModifyVpnConnectionAttributesInput) SetIpsecConfig(v *IpsecConfigForModifyVpnConnectionAttributesInput) *ModifyVpnConnectionAttributesInput {
	s.IpsecConfig = v
	return s
}

// SetLocalSubnet sets the LocalSubnet field's value.
func (s *ModifyVpnConnectionAttributesInput) SetLocalSubnet(v string) *ModifyVpnConnectionAttributesInput {
	s.LocalSubnet = &v
	return s
}

// SetNatTraversal sets the NatTraversal field's value.
func (s *ModifyVpnConnectionAttributesInput) SetNatTraversal(v bool) *ModifyVpnConnectionAttributesInput {
	s.NatTraversal = &v
	return s
}

// SetRemoteSubnet sets the RemoteSubnet field's value.
func (s *ModifyVpnConnectionAttributesInput) SetRemoteSubnet(v string) *ModifyVpnConnectionAttributesInput {
	s.RemoteSubnet = &v
	return s
}

// SetVpnConnectionId sets the VpnConnectionId field's value.
func (s *ModifyVpnConnectionAttributesInput) SetVpnConnectionId(v string) *ModifyVpnConnectionAttributesInput {
	s.VpnConnectionId = &v
	return s
}

// SetVpnConnectionName sets the VpnConnectionName field's value.
func (s *ModifyVpnConnectionAttributesInput) SetVpnConnectionName(v string) *ModifyVpnConnectionAttributesInput {
	s.VpnConnectionName = &v
	return s
}

type ModifyVpnConnectionAttributesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	RequestId *string `type:"string"`
}

// String returns the string representation
func (s ModifyVpnConnectionAttributesOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyVpnConnectionAttributesOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *ModifyVpnConnectionAttributesOutput) SetRequestId(v string) *ModifyVpnConnectionAttributesOutput {
	s.RequestId = &v
	return s
}

const (
	// IkeConfigAuthAlgForModifyVpnConnectionAttributesInputSha1 is a IkeConfigAuthAlgForModifyVpnConnectionAttributesInput enum value
	IkeConfigAuthAlgForModifyVpnConnectionAttributesInputSha1 = "sha1"

	// IkeConfigAuthAlgForModifyVpnConnectionAttributesInputMd5 is a IkeConfigAuthAlgForModifyVpnConnectionAttributesInput enum value
	IkeConfigAuthAlgForModifyVpnConnectionAttributesInputMd5 = "md5"

	// IkeConfigAuthAlgForModifyVpnConnectionAttributesInputSha256 is a IkeConfigAuthAlgForModifyVpnConnectionAttributesInput enum value
	IkeConfigAuthAlgForModifyVpnConnectionAttributesInputSha256 = "sha256"

	// IkeConfigAuthAlgForModifyVpnConnectionAttributesInputSha384 is a IkeConfigAuthAlgForModifyVpnConnectionAttributesInput enum value
	IkeConfigAuthAlgForModifyVpnConnectionAttributesInputSha384 = "sha384"

	// IkeConfigAuthAlgForModifyVpnConnectionAttributesInputSha512 is a IkeConfigAuthAlgForModifyVpnConnectionAttributesInput enum value
	IkeConfigAuthAlgForModifyVpnConnectionAttributesInputSha512 = "sha512"
)

const (
	// IkeConfigDhGroupForModifyVpnConnectionAttributesInputGroup1 is a IkeConfigDhGroupForModifyVpnConnectionAttributesInput enum value
	IkeConfigDhGroupForModifyVpnConnectionAttributesInputGroup1 = "group1"

	// IkeConfigDhGroupForModifyVpnConnectionAttributesInputGroup2 is a IkeConfigDhGroupForModifyVpnConnectionAttributesInput enum value
	IkeConfigDhGroupForModifyVpnConnectionAttributesInputGroup2 = "group2"

	// IkeConfigDhGroupForModifyVpnConnectionAttributesInputGroup5 is a IkeConfigDhGroupForModifyVpnConnectionAttributesInput enum value
	IkeConfigDhGroupForModifyVpnConnectionAttributesInputGroup5 = "group5"

	// IkeConfigDhGroupForModifyVpnConnectionAttributesInputGroup14 is a IkeConfigDhGroupForModifyVpnConnectionAttributesInput enum value
	IkeConfigDhGroupForModifyVpnConnectionAttributesInputGroup14 = "group14"
)

const (
	// IkeConfigEncAlgForModifyVpnConnectionAttributesInputAes is a IkeConfigEncAlgForModifyVpnConnectionAttributesInput enum value
	IkeConfigEncAlgForModifyVpnConnectionAttributesInputAes = "aes"

	// IkeConfigEncAlgForModifyVpnConnectionAttributesInputAes192 is a IkeConfigEncAlgForModifyVpnConnectionAttributesInput enum value
	IkeConfigEncAlgForModifyVpnConnectionAttributesInputAes192 = "aes192"

	// IkeConfigEncAlgForModifyVpnConnectionAttributesInputAes256 is a IkeConfigEncAlgForModifyVpnConnectionAttributesInput enum value
	IkeConfigEncAlgForModifyVpnConnectionAttributesInputAes256 = "aes256"

	// IkeConfigEncAlgForModifyVpnConnectionAttributesInputDes is a IkeConfigEncAlgForModifyVpnConnectionAttributesInput enum value
	IkeConfigEncAlgForModifyVpnConnectionAttributesInputDes = "des"

	// IkeConfigEncAlgForModifyVpnConnectionAttributesInput3des is a IkeConfigEncAlgForModifyVpnConnectionAttributesInput enum value
	IkeConfigEncAlgForModifyVpnConnectionAttributesInput3des = "3des"
)

const (
	// IkeConfigModeForModifyVpnConnectionAttributesInputMain is a IkeConfigModeForModifyVpnConnectionAttributesInput enum value
	IkeConfigModeForModifyVpnConnectionAttributesInputMain = "main"

	// IkeConfigModeForModifyVpnConnectionAttributesInputAggressive is a IkeConfigModeForModifyVpnConnectionAttributesInput enum value
	IkeConfigModeForModifyVpnConnectionAttributesInputAggressive = "aggressive"
)

const (
	// IkeConfigVersionForModifyVpnConnectionAttributesInputIkev1 is a IkeConfigVersionForModifyVpnConnectionAttributesInput enum value
	IkeConfigVersionForModifyVpnConnectionAttributesInputIkev1 = "ikev1"

	// IkeConfigVersionForModifyVpnConnectionAttributesInputIkev2 is a IkeConfigVersionForModifyVpnConnectionAttributesInput enum value
	IkeConfigVersionForModifyVpnConnectionAttributesInputIkev2 = "ikev2"
)

const (
	// IpsecConfigAuthAlgForModifyVpnConnectionAttributesInputSha1 is a IpsecConfigAuthAlgForModifyVpnConnectionAttributesInput enum value
	IpsecConfigAuthAlgForModifyVpnConnectionAttributesInputSha1 = "sha1"

	// IpsecConfigAuthAlgForModifyVpnConnectionAttributesInputMd5 is a IpsecConfigAuthAlgForModifyVpnConnectionAttributesInput enum value
	IpsecConfigAuthAlgForModifyVpnConnectionAttributesInputMd5 = "md5"

	// IpsecConfigAuthAlgForModifyVpnConnectionAttributesInputSha256 is a IpsecConfigAuthAlgForModifyVpnConnectionAttributesInput enum value
	IpsecConfigAuthAlgForModifyVpnConnectionAttributesInputSha256 = "sha256"

	// IpsecConfigAuthAlgForModifyVpnConnectionAttributesInputSha384 is a IpsecConfigAuthAlgForModifyVpnConnectionAttributesInput enum value
	IpsecConfigAuthAlgForModifyVpnConnectionAttributesInputSha384 = "sha384"

	// IpsecConfigAuthAlgForModifyVpnConnectionAttributesInputSha512 is a IpsecConfigAuthAlgForModifyVpnConnectionAttributesInput enum value
	IpsecConfigAuthAlgForModifyVpnConnectionAttributesInputSha512 = "sha512"
)

const (
	// IpsecConfigDhGroupForModifyVpnConnectionAttributesInputGroup1 is a IpsecConfigDhGroupForModifyVpnConnectionAttributesInput enum value
	IpsecConfigDhGroupForModifyVpnConnectionAttributesInputGroup1 = "group1"

	// IpsecConfigDhGroupForModifyVpnConnectionAttributesInputGroup2 is a IpsecConfigDhGroupForModifyVpnConnectionAttributesInput enum value
	IpsecConfigDhGroupForModifyVpnConnectionAttributesInputGroup2 = "group2"

	// IpsecConfigDhGroupForModifyVpnConnectionAttributesInputGroup5 is a IpsecConfigDhGroupForModifyVpnConnectionAttributesInput enum value
	IpsecConfigDhGroupForModifyVpnConnectionAttributesInputGroup5 = "group5"

	// IpsecConfigDhGroupForModifyVpnConnectionAttributesInputGroup14 is a IpsecConfigDhGroupForModifyVpnConnectionAttributesInput enum value
	IpsecConfigDhGroupForModifyVpnConnectionAttributesInputGroup14 = "group14"
)

const (
	// IpsecConfigEncAlgForModifyVpnConnectionAttributesInputAes is a IpsecConfigEncAlgForModifyVpnConnectionAttributesInput enum value
	IpsecConfigEncAlgForModifyVpnConnectionAttributesInputAes = "aes"

	// IpsecConfigEncAlgForModifyVpnConnectionAttributesInputAes192 is a IpsecConfigEncAlgForModifyVpnConnectionAttributesInput enum value
	IpsecConfigEncAlgForModifyVpnConnectionAttributesInputAes192 = "aes192"

	// IpsecConfigEncAlgForModifyVpnConnectionAttributesInputAes256 is a IpsecConfigEncAlgForModifyVpnConnectionAttributesInput enum value
	IpsecConfigEncAlgForModifyVpnConnectionAttributesInputAes256 = "aes256"

	// IpsecConfigEncAlgForModifyVpnConnectionAttributesInputDes is a IpsecConfigEncAlgForModifyVpnConnectionAttributesInput enum value
	IpsecConfigEncAlgForModifyVpnConnectionAttributesInputDes = "des"

	// IpsecConfigEncAlgForModifyVpnConnectionAttributesInput3des is a IpsecConfigEncAlgForModifyVpnConnectionAttributesInput enum value
	IpsecConfigEncAlgForModifyVpnConnectionAttributesInput3des = "3des"
)
