// Code generated by volcstack with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vpn

import (
	"github.com/volcengine/volcstack-go-sdk/volcstack"
	"github.com/volcengine/volcstack-go-sdk/volcstack/request"
	"github.com/volcengine/volcstack-go-sdk/volcstack/response"
	"github.com/volcengine/volcstack-go-sdk/volcstack/volcstackutil"
)

const opDescribeVpnConnectionsCommon = "DescribeVpnConnections"

// DescribeVpnConnectionsCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the DescribeVpnConnectionsCommon operation. The "output" return
// value will be populated with the DescribeVpnConnectionsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeVpnConnectionsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeVpnConnectionsCommon Send returns without error.
//
// See DescribeVpnConnectionsCommon for more information on using the DescribeVpnConnectionsCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeVpnConnectionsCommonRequest method.
//    req, resp := client.DescribeVpnConnectionsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPN) DescribeVpnConnectionsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeVpnConnectionsCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeVpnConnectionsCommon API operation for VPN.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for VPN's
// API operation DescribeVpnConnectionsCommon for usage and error information.
func (c *VPN) DescribeVpnConnectionsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeVpnConnectionsCommonRequest(input)
	return out, req.Send()
}

// DescribeVpnConnectionsCommonWithContext is the same as DescribeVpnConnectionsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeVpnConnectionsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPN) DescribeVpnConnectionsCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeVpnConnectionsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeVpnConnections = "DescribeVpnConnections"

// DescribeVpnConnectionsRequest generates a "volcstack/request.Request" representing the
// client's request for the DescribeVpnConnections operation. The "output" return
// value will be populated with the DescribeVpnConnectionsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeVpnConnectionsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeVpnConnectionsCommon Send returns without error.
//
// See DescribeVpnConnections for more information on using the DescribeVpnConnections
// API call, and error handling.
//
//    // Example sending a request using the DescribeVpnConnectionsRequest method.
//    req, resp := client.DescribeVpnConnectionsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPN) DescribeVpnConnectionsRequest(input *DescribeVpnConnectionsInput) (req *request.Request, output *DescribeVpnConnectionsOutput) {
	op := &request.Operation{
		Name:       opDescribeVpnConnections,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeVpnConnectionsInput{}
	}

	output = &DescribeVpnConnectionsOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeVpnConnections API operation for VPN.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for VPN's
// API operation DescribeVpnConnections for usage and error information.
func (c *VPN) DescribeVpnConnections(input *DescribeVpnConnectionsInput) (*DescribeVpnConnectionsOutput, error) {
	req, out := c.DescribeVpnConnectionsRequest(input)
	return out, req.Send()
}

// DescribeVpnConnectionsWithContext is the same as DescribeVpnConnections with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeVpnConnections for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPN) DescribeVpnConnectionsWithContext(ctx volcstack.Context, input *DescribeVpnConnectionsInput, opts ...request.Option) (*DescribeVpnConnectionsOutput, error) {
	req, out := c.DescribeVpnConnectionsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeVpnConnectionsInput struct {
	_ struct{} `type:"structure"`

	CustomerGatewayId *string `type:"string"`

	PageNumber *int64 `type:"integer"`

	PageSize *int64 `type:"integer"`

	Status *string `type:"string"`

	VpnConnectionIds []*string `type:"list"`

	VpnConnectionName *string `type:"string"`

	VpnGatewayId *string `type:"string"`
}

// String returns the string representation
func (s DescribeVpnConnectionsInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeVpnConnectionsInput) GoString() string {
	return s.String()
}

// SetCustomerGatewayId sets the CustomerGatewayId field's value.
func (s *DescribeVpnConnectionsInput) SetCustomerGatewayId(v string) *DescribeVpnConnectionsInput {
	s.CustomerGatewayId = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeVpnConnectionsInput) SetPageNumber(v int64) *DescribeVpnConnectionsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeVpnConnectionsInput) SetPageSize(v int64) *DescribeVpnConnectionsInput {
	s.PageSize = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *DescribeVpnConnectionsInput) SetStatus(v string) *DescribeVpnConnectionsInput {
	s.Status = &v
	return s
}

// SetVpnConnectionIds sets the VpnConnectionIds field's value.
func (s *DescribeVpnConnectionsInput) SetVpnConnectionIds(v []*string) *DescribeVpnConnectionsInput {
	s.VpnConnectionIds = v
	return s
}

// SetVpnConnectionName sets the VpnConnectionName field's value.
func (s *DescribeVpnConnectionsInput) SetVpnConnectionName(v string) *DescribeVpnConnectionsInput {
	s.VpnConnectionName = &v
	return s
}

// SetVpnGatewayId sets the VpnGatewayId field's value.
func (s *DescribeVpnConnectionsInput) SetVpnGatewayId(v string) *DescribeVpnConnectionsInput {
	s.VpnGatewayId = &v
	return s
}

type DescribeVpnConnectionsOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	PageNumber *int64 `type:"integer"`

	PageSize *int64 `type:"integer"`

	RequestId *string `type:"string"`

	TotalCount *int64 `type:"integer"`

	VpnConnections []*VpnConnectionForDescribeVpnConnectionsOutput `type:"list"`
}

// String returns the string representation
func (s DescribeVpnConnectionsOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeVpnConnectionsOutput) GoString() string {
	return s.String()
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeVpnConnectionsOutput) SetPageNumber(v int64) *DescribeVpnConnectionsOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeVpnConnectionsOutput) SetPageSize(v int64) *DescribeVpnConnectionsOutput {
	s.PageSize = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeVpnConnectionsOutput) SetRequestId(v string) *DescribeVpnConnectionsOutput {
	s.RequestId = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *DescribeVpnConnectionsOutput) SetTotalCount(v int64) *DescribeVpnConnectionsOutput {
	s.TotalCount = &v
	return s
}

// SetVpnConnections sets the VpnConnections field's value.
func (s *DescribeVpnConnectionsOutput) SetVpnConnections(v []*VpnConnectionForDescribeVpnConnectionsOutput) *DescribeVpnConnectionsOutput {
	s.VpnConnections = v
	return s
}

type IkeConfigForDescribeVpnConnectionsOutput struct {
	_ struct{} `type:"structure"`

	AuthAlg *string `type:"string"`

	DhGroup *string `type:"string"`

	EncAlg *string `type:"string"`

	Lifetime *int64 `type:"integer"`

	LocalId *string `type:"string"`

	Mode *string `type:"string"`

	Psk *string `type:"string"`

	RemoteId *string `type:"string"`

	Version *string `type:"string"`
}

// String returns the string representation
func (s IkeConfigForDescribeVpnConnectionsOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s IkeConfigForDescribeVpnConnectionsOutput) GoString() string {
	return s.String()
}

// SetAuthAlg sets the AuthAlg field's value.
func (s *IkeConfigForDescribeVpnConnectionsOutput) SetAuthAlg(v string) *IkeConfigForDescribeVpnConnectionsOutput {
	s.AuthAlg = &v
	return s
}

// SetDhGroup sets the DhGroup field's value.
func (s *IkeConfigForDescribeVpnConnectionsOutput) SetDhGroup(v string) *IkeConfigForDescribeVpnConnectionsOutput {
	s.DhGroup = &v
	return s
}

// SetEncAlg sets the EncAlg field's value.
func (s *IkeConfigForDescribeVpnConnectionsOutput) SetEncAlg(v string) *IkeConfigForDescribeVpnConnectionsOutput {
	s.EncAlg = &v
	return s
}

// SetLifetime sets the Lifetime field's value.
func (s *IkeConfigForDescribeVpnConnectionsOutput) SetLifetime(v int64) *IkeConfigForDescribeVpnConnectionsOutput {
	s.Lifetime = &v
	return s
}

// SetLocalId sets the LocalId field's value.
func (s *IkeConfigForDescribeVpnConnectionsOutput) SetLocalId(v string) *IkeConfigForDescribeVpnConnectionsOutput {
	s.LocalId = &v
	return s
}

// SetMode sets the Mode field's value.
func (s *IkeConfigForDescribeVpnConnectionsOutput) SetMode(v string) *IkeConfigForDescribeVpnConnectionsOutput {
	s.Mode = &v
	return s
}

// SetPsk sets the Psk field's value.
func (s *IkeConfigForDescribeVpnConnectionsOutput) SetPsk(v string) *IkeConfigForDescribeVpnConnectionsOutput {
	s.Psk = &v
	return s
}

// SetRemoteId sets the RemoteId field's value.
func (s *IkeConfigForDescribeVpnConnectionsOutput) SetRemoteId(v string) *IkeConfigForDescribeVpnConnectionsOutput {
	s.RemoteId = &v
	return s
}

// SetVersion sets the Version field's value.
func (s *IkeConfigForDescribeVpnConnectionsOutput) SetVersion(v string) *IkeConfigForDescribeVpnConnectionsOutput {
	s.Version = &v
	return s
}

type IpsecConfigForDescribeVpnConnectionsOutput struct {
	_ struct{} `type:"structure"`

	AuthAlg *string `type:"string"`

	DhGroup *string `type:"string"`

	EncAlg *string `type:"string"`

	Lifetime *int64 `type:"integer"`
}

// String returns the string representation
func (s IpsecConfigForDescribeVpnConnectionsOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s IpsecConfigForDescribeVpnConnectionsOutput) GoString() string {
	return s.String()
}

// SetAuthAlg sets the AuthAlg field's value.
func (s *IpsecConfigForDescribeVpnConnectionsOutput) SetAuthAlg(v string) *IpsecConfigForDescribeVpnConnectionsOutput {
	s.AuthAlg = &v
	return s
}

// SetDhGroup sets the DhGroup field's value.
func (s *IpsecConfigForDescribeVpnConnectionsOutput) SetDhGroup(v string) *IpsecConfigForDescribeVpnConnectionsOutput {
	s.DhGroup = &v
	return s
}

// SetEncAlg sets the EncAlg field's value.
func (s *IpsecConfigForDescribeVpnConnectionsOutput) SetEncAlg(v string) *IpsecConfigForDescribeVpnConnectionsOutput {
	s.EncAlg = &v
	return s
}

// SetLifetime sets the Lifetime field's value.
func (s *IpsecConfigForDescribeVpnConnectionsOutput) SetLifetime(v int64) *IpsecConfigForDescribeVpnConnectionsOutput {
	s.Lifetime = &v
	return s
}

type VpnConnectionForDescribeVpnConnectionsOutput struct {
	_ struct{} `type:"structure"`

	AccountId *string `type:"string"`

	CreationTime *string `type:"string"`

	CustomerGatewayId *string `type:"string"`

	Description *string `type:"string"`

	IkeConfig *IkeConfigForDescribeVpnConnectionsOutput `type:"structure"`

	IpsecConfig *IpsecConfigForDescribeVpnConnectionsOutput `type:"structure"`

	LocalSubnet []*string `type:"list"`

	NatTraversal *bool `type:"boolean"`

	RemoteSubnet []*string `type:"list"`

	Status *string `type:"string"`

	UpdateTime *string `type:"string"`

	VpnConnectionId *string `type:"string"`

	VpnConnectionName *string `type:"string"`

	VpnGatewayId *string `type:"string"`
}

// String returns the string representation
func (s VpnConnectionForDescribeVpnConnectionsOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s VpnConnectionForDescribeVpnConnectionsOutput) GoString() string {
	return s.String()
}

// SetAccountId sets the AccountId field's value.
func (s *VpnConnectionForDescribeVpnConnectionsOutput) SetAccountId(v string) *VpnConnectionForDescribeVpnConnectionsOutput {
	s.AccountId = &v
	return s
}

// SetCreationTime sets the CreationTime field's value.
func (s *VpnConnectionForDescribeVpnConnectionsOutput) SetCreationTime(v string) *VpnConnectionForDescribeVpnConnectionsOutput {
	s.CreationTime = &v
	return s
}

// SetCustomerGatewayId sets the CustomerGatewayId field's value.
func (s *VpnConnectionForDescribeVpnConnectionsOutput) SetCustomerGatewayId(v string) *VpnConnectionForDescribeVpnConnectionsOutput {
	s.CustomerGatewayId = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *VpnConnectionForDescribeVpnConnectionsOutput) SetDescription(v string) *VpnConnectionForDescribeVpnConnectionsOutput {
	s.Description = &v
	return s
}

// SetIkeConfig sets the IkeConfig field's value.
func (s *VpnConnectionForDescribeVpnConnectionsOutput) SetIkeConfig(v *IkeConfigForDescribeVpnConnectionsOutput) *VpnConnectionForDescribeVpnConnectionsOutput {
	s.IkeConfig = v
	return s
}

// SetIpsecConfig sets the IpsecConfig field's value.
func (s *VpnConnectionForDescribeVpnConnectionsOutput) SetIpsecConfig(v *IpsecConfigForDescribeVpnConnectionsOutput) *VpnConnectionForDescribeVpnConnectionsOutput {
	s.IpsecConfig = v
	return s
}

// SetLocalSubnet sets the LocalSubnet field's value.
func (s *VpnConnectionForDescribeVpnConnectionsOutput) SetLocalSubnet(v []*string) *VpnConnectionForDescribeVpnConnectionsOutput {
	s.LocalSubnet = v
	return s
}

// SetNatTraversal sets the NatTraversal field's value.
func (s *VpnConnectionForDescribeVpnConnectionsOutput) SetNatTraversal(v bool) *VpnConnectionForDescribeVpnConnectionsOutput {
	s.NatTraversal = &v
	return s
}

// SetRemoteSubnet sets the RemoteSubnet field's value.
func (s *VpnConnectionForDescribeVpnConnectionsOutput) SetRemoteSubnet(v []*string) *VpnConnectionForDescribeVpnConnectionsOutput {
	s.RemoteSubnet = v
	return s
}

// SetStatus sets the Status field's value.
func (s *VpnConnectionForDescribeVpnConnectionsOutput) SetStatus(v string) *VpnConnectionForDescribeVpnConnectionsOutput {
	s.Status = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *VpnConnectionForDescribeVpnConnectionsOutput) SetUpdateTime(v string) *VpnConnectionForDescribeVpnConnectionsOutput {
	s.UpdateTime = &v
	return s
}

// SetVpnConnectionId sets the VpnConnectionId field's value.
func (s *VpnConnectionForDescribeVpnConnectionsOutput) SetVpnConnectionId(v string) *VpnConnectionForDescribeVpnConnectionsOutput {
	s.VpnConnectionId = &v
	return s
}

// SetVpnConnectionName sets the VpnConnectionName field's value.
func (s *VpnConnectionForDescribeVpnConnectionsOutput) SetVpnConnectionName(v string) *VpnConnectionForDescribeVpnConnectionsOutput {
	s.VpnConnectionName = &v
	return s
}

// SetVpnGatewayId sets the VpnGatewayId field's value.
func (s *VpnConnectionForDescribeVpnConnectionsOutput) SetVpnGatewayId(v string) *VpnConnectionForDescribeVpnConnectionsOutput {
	s.VpnGatewayId = &v
	return s
}
