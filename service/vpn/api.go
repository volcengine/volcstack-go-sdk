// Code generated by volcstack with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vpn

import (
	"github.com/volcengine/volcstack-go-sdk/volcstack"
	"github.com/volcengine/volcstack-go-sdk/volcstack/request"
	"github.com/volcengine/volcstack-go-sdk/volcstack/volcstackutil"
)

const opInnerBffGetLimitFromKeysCommon = "InnerBffGetLimitFromKeys"

// InnerBffGetLimitFromKeysCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the InnerBffGetLimitFromKeysCommon operation. The "output" return
// value will be populated with the InnerBffGetLimitFromKeysCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned InnerBffGetLimitFromKeysCommon Request to send the API call to the service.
// the "output" return value is not valid until after InnerBffGetLimitFromKeysCommon Send returns without error.
//
// See InnerBffGetLimitFromKeysCommon for more information on using the InnerBffGetLimitFromKeysCommon
// API call, and error handling.
//
//    // Example sending a request using the InnerBffGetLimitFromKeysCommonRequest method.
//    req, resp := client.InnerBffGetLimitFromKeysCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPN) InnerBffGetLimitFromKeysCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opInnerBffGetLimitFromKeysCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// InnerBffGetLimitFromKeysCommon API operation for VPN.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for VPN's
// API operation InnerBffGetLimitFromKeysCommon for usage and error information.
func (c *VPN) InnerBffGetLimitFromKeysCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.InnerBffGetLimitFromKeysCommonRequest(input)
	return out, req.Send()
}

// InnerBffGetLimitFromKeysCommonWithContext is the same as InnerBffGetLimitFromKeysCommon with the addition of
// the ability to pass a context and additional request options.
//
// See InnerBffGetLimitFromKeysCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPN) InnerBffGetLimitFromKeysCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.InnerBffGetLimitFromKeysCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opInnerBffGetLimitFromKeys = "InnerBffGetLimitFromKeys"

// InnerBffGetLimitFromKeysRequest generates a "volcstack/request.Request" representing the
// client's request for the InnerBffGetLimitFromKeys operation. The "output" return
// value will be populated with the InnerBffGetLimitFromKeysCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned InnerBffGetLimitFromKeysCommon Request to send the API call to the service.
// the "output" return value is not valid until after InnerBffGetLimitFromKeysCommon Send returns without error.
//
// See InnerBffGetLimitFromKeys for more information on using the InnerBffGetLimitFromKeys
// API call, and error handling.
//
//    // Example sending a request using the InnerBffGetLimitFromKeysRequest method.
//    req, resp := client.InnerBffGetLimitFromKeysRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPN) InnerBffGetLimitFromKeysRequest(input *InnerBffGetLimitFromKeysInput) (req *request.Request, output *InnerBffGetLimitFromKeysOutput) {
	op := &request.Operation{
		Name:       opInnerBffGetLimitFromKeys,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &InnerBffGetLimitFromKeysInput{}
	}

	output = &InnerBffGetLimitFromKeysOutput{}
	req = c.newRequest(op, input, output)

	return
}

// InnerBffGetLimitFromKeys API operation for VPN.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for VPN's
// API operation InnerBffGetLimitFromKeys for usage and error information.
func (c *VPN) InnerBffGetLimitFromKeys(input *InnerBffGetLimitFromKeysInput) (*InnerBffGetLimitFromKeysOutput, error) {
	req, out := c.InnerBffGetLimitFromKeysRequest(input)
	return out, req.Send()
}

// InnerBffGetLimitFromKeysWithContext is the same as InnerBffGetLimitFromKeys with the addition of
// the ability to pass a context and additional request options.
//
// See InnerBffGetLimitFromKeys for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPN) InnerBffGetLimitFromKeysWithContext(ctx volcstack.Context, input *InnerBffGetLimitFromKeysInput, opts ...request.Option) (*InnerBffGetLimitFromKeysOutput, error) {
	req, out := c.InnerBffGetLimitFromKeysRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opInnerDescribeWhiteListKeysCommon = "InnerDescribeWhiteListKeys"

// InnerDescribeWhiteListKeysCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the InnerDescribeWhiteListKeysCommon operation. The "output" return
// value will be populated with the InnerDescribeWhiteListKeysCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned InnerDescribeWhiteListKeysCommon Request to send the API call to the service.
// the "output" return value is not valid until after InnerDescribeWhiteListKeysCommon Send returns without error.
//
// See InnerDescribeWhiteListKeysCommon for more information on using the InnerDescribeWhiteListKeysCommon
// API call, and error handling.
//
//    // Example sending a request using the InnerDescribeWhiteListKeysCommonRequest method.
//    req, resp := client.InnerDescribeWhiteListKeysCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPN) InnerDescribeWhiteListKeysCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opInnerDescribeWhiteListKeysCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// InnerDescribeWhiteListKeysCommon API operation for VPN.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for VPN's
// API operation InnerDescribeWhiteListKeysCommon for usage and error information.
func (c *VPN) InnerDescribeWhiteListKeysCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.InnerDescribeWhiteListKeysCommonRequest(input)
	return out, req.Send()
}

// InnerDescribeWhiteListKeysCommonWithContext is the same as InnerDescribeWhiteListKeysCommon with the addition of
// the ability to pass a context and additional request options.
//
// See InnerDescribeWhiteListKeysCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPN) InnerDescribeWhiteListKeysCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.InnerDescribeWhiteListKeysCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opInnerDescribeWhiteListKeys = "InnerDescribeWhiteListKeys"

// InnerDescribeWhiteListKeysRequest generates a "volcstack/request.Request" representing the
// client's request for the InnerDescribeWhiteListKeys operation. The "output" return
// value will be populated with the InnerDescribeWhiteListKeysCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned InnerDescribeWhiteListKeysCommon Request to send the API call to the service.
// the "output" return value is not valid until after InnerDescribeWhiteListKeysCommon Send returns without error.
//
// See InnerDescribeWhiteListKeys for more information on using the InnerDescribeWhiteListKeys
// API call, and error handling.
//
//    // Example sending a request using the InnerDescribeWhiteListKeysRequest method.
//    req, resp := client.InnerDescribeWhiteListKeysRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPN) InnerDescribeWhiteListKeysRequest(input *InnerDescribeWhiteListKeysInput) (req *request.Request, output *InnerDescribeWhiteListKeysOutput) {
	op := &request.Operation{
		Name:       opInnerDescribeWhiteListKeys,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &InnerDescribeWhiteListKeysInput{}
	}

	output = &InnerDescribeWhiteListKeysOutput{}
	req = c.newRequest(op, input, output)

	return
}

// InnerDescribeWhiteListKeys API operation for VPN.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for VPN's
// API operation InnerDescribeWhiteListKeys for usage and error information.
func (c *VPN) InnerDescribeWhiteListKeys(input *InnerDescribeWhiteListKeysInput) (*InnerDescribeWhiteListKeysOutput, error) {
	req, out := c.InnerDescribeWhiteListKeysRequest(input)
	return out, req.Send()
}

// InnerDescribeWhiteListKeysWithContext is the same as InnerDescribeWhiteListKeys with the addition of
// the ability to pass a context and additional request options.
//
// See InnerDescribeWhiteListKeys for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPN) InnerDescribeWhiteListKeysWithContext(ctx volcstack.Context, input *InnerDescribeWhiteListKeysInput, opts ...request.Option) (*InnerDescribeWhiteListKeysOutput, error) {
	req, out := c.InnerDescribeWhiteListKeysRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opInnerGetLimitFromKeysCommon = "InnerGetLimitFromKeys"

// InnerGetLimitFromKeysCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the InnerGetLimitFromKeysCommon operation. The "output" return
// value will be populated with the InnerGetLimitFromKeysCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned InnerGetLimitFromKeysCommon Request to send the API call to the service.
// the "output" return value is not valid until after InnerGetLimitFromKeysCommon Send returns without error.
//
// See InnerGetLimitFromKeysCommon for more information on using the InnerGetLimitFromKeysCommon
// API call, and error handling.
//
//    // Example sending a request using the InnerGetLimitFromKeysCommonRequest method.
//    req, resp := client.InnerGetLimitFromKeysCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPN) InnerGetLimitFromKeysCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opInnerGetLimitFromKeysCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// InnerGetLimitFromKeysCommon API operation for VPN.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for VPN's
// API operation InnerGetLimitFromKeysCommon for usage and error information.
func (c *VPN) InnerGetLimitFromKeysCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.InnerGetLimitFromKeysCommonRequest(input)
	return out, req.Send()
}

// InnerGetLimitFromKeysCommonWithContext is the same as InnerGetLimitFromKeysCommon with the addition of
// the ability to pass a context and additional request options.
//
// See InnerGetLimitFromKeysCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPN) InnerGetLimitFromKeysCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.InnerGetLimitFromKeysCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opInnerGetLimitFromKeys = "InnerGetLimitFromKeys"

// InnerGetLimitFromKeysRequest generates a "volcstack/request.Request" representing the
// client's request for the InnerGetLimitFromKeys operation. The "output" return
// value will be populated with the InnerGetLimitFromKeysCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned InnerGetLimitFromKeysCommon Request to send the API call to the service.
// the "output" return value is not valid until after InnerGetLimitFromKeysCommon Send returns without error.
//
// See InnerGetLimitFromKeys for more information on using the InnerGetLimitFromKeys
// API call, and error handling.
//
//    // Example sending a request using the InnerGetLimitFromKeysRequest method.
//    req, resp := client.InnerGetLimitFromKeysRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPN) InnerGetLimitFromKeysRequest(input *InnerGetLimitFromKeysInput) (req *request.Request, output *InnerGetLimitFromKeysOutput) {
	op := &request.Operation{
		Name:       opInnerGetLimitFromKeys,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &InnerGetLimitFromKeysInput{}
	}

	output = &InnerGetLimitFromKeysOutput{}
	req = c.newRequest(op, input, output)

	return
}

// InnerGetLimitFromKeys API operation for VPN.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for VPN's
// API operation InnerGetLimitFromKeys for usage and error information.
func (c *VPN) InnerGetLimitFromKeys(input *InnerGetLimitFromKeysInput) (*InnerGetLimitFromKeysOutput, error) {
	req, out := c.InnerGetLimitFromKeysRequest(input)
	return out, req.Send()
}

// InnerGetLimitFromKeysWithContext is the same as InnerGetLimitFromKeys with the addition of
// the ability to pass a context and additional request options.
//
// See InnerGetLimitFromKeys for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPN) InnerGetLimitFromKeysWithContext(ctx volcstack.Context, input *InnerGetLimitFromKeysInput, opts ...request.Option) (*InnerGetLimitFromKeysOutput, error) {
	req, out := c.InnerGetLimitFromKeysRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opInnerPostDescribeVpnConnectionsCommon = "InnerPostDescribeVpnConnections"

// InnerPostDescribeVpnConnectionsCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the InnerPostDescribeVpnConnectionsCommon operation. The "output" return
// value will be populated with the InnerPostDescribeVpnConnectionsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned InnerPostDescribeVpnConnectionsCommon Request to send the API call to the service.
// the "output" return value is not valid until after InnerPostDescribeVpnConnectionsCommon Send returns without error.
//
// See InnerPostDescribeVpnConnectionsCommon for more information on using the InnerPostDescribeVpnConnectionsCommon
// API call, and error handling.
//
//    // Example sending a request using the InnerPostDescribeVpnConnectionsCommonRequest method.
//    req, resp := client.InnerPostDescribeVpnConnectionsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPN) InnerPostDescribeVpnConnectionsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opInnerPostDescribeVpnConnectionsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// InnerPostDescribeVpnConnectionsCommon API operation for VPN.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for VPN's
// API operation InnerPostDescribeVpnConnectionsCommon for usage and error information.
func (c *VPN) InnerPostDescribeVpnConnectionsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.InnerPostDescribeVpnConnectionsCommonRequest(input)
	return out, req.Send()
}

// InnerPostDescribeVpnConnectionsCommonWithContext is the same as InnerPostDescribeVpnConnectionsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See InnerPostDescribeVpnConnectionsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPN) InnerPostDescribeVpnConnectionsCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.InnerPostDescribeVpnConnectionsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opInnerPostDescribeVpnConnections = "InnerPostDescribeVpnConnections"

// InnerPostDescribeVpnConnectionsRequest generates a "volcstack/request.Request" representing the
// client's request for the InnerPostDescribeVpnConnections operation. The "output" return
// value will be populated with the InnerPostDescribeVpnConnectionsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned InnerPostDescribeVpnConnectionsCommon Request to send the API call to the service.
// the "output" return value is not valid until after InnerPostDescribeVpnConnectionsCommon Send returns without error.
//
// See InnerPostDescribeVpnConnections for more information on using the InnerPostDescribeVpnConnections
// API call, and error handling.
//
//    // Example sending a request using the InnerPostDescribeVpnConnectionsRequest method.
//    req, resp := client.InnerPostDescribeVpnConnectionsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPN) InnerPostDescribeVpnConnectionsRequest(input *InnerPostDescribeVpnConnectionsInput) (req *request.Request, output *InnerPostDescribeVpnConnectionsOutput) {
	op := &request.Operation{
		Name:       opInnerPostDescribeVpnConnections,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &InnerPostDescribeVpnConnectionsInput{}
	}

	output = &InnerPostDescribeVpnConnectionsOutput{}
	req = c.newRequest(op, input, output)

	return
}

// InnerPostDescribeVpnConnections API operation for VPN.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for VPN's
// API operation InnerPostDescribeVpnConnections for usage and error information.
func (c *VPN) InnerPostDescribeVpnConnections(input *InnerPostDescribeVpnConnectionsInput) (*InnerPostDescribeVpnConnectionsOutput, error) {
	req, out := c.InnerPostDescribeVpnConnectionsRequest(input)
	return out, req.Send()
}

// InnerPostDescribeVpnConnectionsWithContext is the same as InnerPostDescribeVpnConnections with the addition of
// the ability to pass a context and additional request options.
//
// See InnerPostDescribeVpnConnections for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPN) InnerPostDescribeVpnConnectionsWithContext(ctx volcstack.Context, input *InnerPostDescribeVpnConnectionsInput, opts ...request.Option) (*InnerPostDescribeVpnConnectionsOutput, error) {
	req, out := c.InnerPostDescribeVpnConnectionsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opInnerPostDescribeVpnGatewaysCommon = "InnerPostDescribeVpnGateways"

// InnerPostDescribeVpnGatewaysCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the InnerPostDescribeVpnGatewaysCommon operation. The "output" return
// value will be populated with the InnerPostDescribeVpnGatewaysCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned InnerPostDescribeVpnGatewaysCommon Request to send the API call to the service.
// the "output" return value is not valid until after InnerPostDescribeVpnGatewaysCommon Send returns without error.
//
// See InnerPostDescribeVpnGatewaysCommon for more information on using the InnerPostDescribeVpnGatewaysCommon
// API call, and error handling.
//
//    // Example sending a request using the InnerPostDescribeVpnGatewaysCommonRequest method.
//    req, resp := client.InnerPostDescribeVpnGatewaysCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPN) InnerPostDescribeVpnGatewaysCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opInnerPostDescribeVpnGatewaysCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// InnerPostDescribeVpnGatewaysCommon API operation for VPN.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for VPN's
// API operation InnerPostDescribeVpnGatewaysCommon for usage and error information.
func (c *VPN) InnerPostDescribeVpnGatewaysCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.InnerPostDescribeVpnGatewaysCommonRequest(input)
	return out, req.Send()
}

// InnerPostDescribeVpnGatewaysCommonWithContext is the same as InnerPostDescribeVpnGatewaysCommon with the addition of
// the ability to pass a context and additional request options.
//
// See InnerPostDescribeVpnGatewaysCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPN) InnerPostDescribeVpnGatewaysCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.InnerPostDescribeVpnGatewaysCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opInnerPostDescribeVpnGateways = "InnerPostDescribeVpnGateways"

// InnerPostDescribeVpnGatewaysRequest generates a "volcstack/request.Request" representing the
// client's request for the InnerPostDescribeVpnGateways operation. The "output" return
// value will be populated with the InnerPostDescribeVpnGatewaysCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned InnerPostDescribeVpnGatewaysCommon Request to send the API call to the service.
// the "output" return value is not valid until after InnerPostDescribeVpnGatewaysCommon Send returns without error.
//
// See InnerPostDescribeVpnGateways for more information on using the InnerPostDescribeVpnGateways
// API call, and error handling.
//
//    // Example sending a request using the InnerPostDescribeVpnGatewaysRequest method.
//    req, resp := client.InnerPostDescribeVpnGatewaysRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPN) InnerPostDescribeVpnGatewaysRequest(input *InnerPostDescribeVpnGatewaysInput) (req *request.Request, output *InnerPostDescribeVpnGatewaysOutput) {
	op := &request.Operation{
		Name:       opInnerPostDescribeVpnGateways,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &InnerPostDescribeVpnGatewaysInput{}
	}

	output = &InnerPostDescribeVpnGatewaysOutput{}
	req = c.newRequest(op, input, output)

	return
}

// InnerPostDescribeVpnGateways API operation for VPN.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for VPN's
// API operation InnerPostDescribeVpnGateways for usage and error information.
func (c *VPN) InnerPostDescribeVpnGateways(input *InnerPostDescribeVpnGatewaysInput) (*InnerPostDescribeVpnGatewaysOutput, error) {
	req, out := c.InnerPostDescribeVpnGatewaysRequest(input)
	return out, req.Send()
}

// InnerPostDescribeVpnGatewaysWithContext is the same as InnerPostDescribeVpnGateways with the addition of
// the ability to pass a context and additional request options.
//
// See InnerPostDescribeVpnGateways for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPN) InnerPostDescribeVpnGatewaysWithContext(ctx volcstack.Context, input *InnerPostDescribeVpnGatewaysInput, opts ...request.Option) (*InnerPostDescribeVpnGatewaysOutput, error) {
	req, out := c.InnerPostDescribeVpnGatewaysRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type InnerBffGetLimitFromKeysInput struct {
	_ struct{} `type:"structure"`

	Keys []*string `type:"list"`
}

// String returns the string representation
func (s InnerBffGetLimitFromKeysInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s InnerBffGetLimitFromKeysInput) GoString() string {
	return s.String()
}

// SetKeys sets the Keys field's value.
func (s *InnerBffGetLimitFromKeysInput) SetKeys(v []*string) *InnerBffGetLimitFromKeysInput {
	s.Keys = v
	return s
}

type InnerBffGetLimitFromKeysOutput struct {
	_ struct{} `type:"structure"`

	Limits []*LimitForInnerBffGetLimitFromKeysOutput `type:"list"`

	PageNumber *int64 `type:"integer"`

	PageSize *int64 `type:"integer"`

	RequestId *string `type:"string"`

	TotalCount *int64 `type:"integer"`
}

// String returns the string representation
func (s InnerBffGetLimitFromKeysOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s InnerBffGetLimitFromKeysOutput) GoString() string {
	return s.String()
}

// SetLimits sets the Limits field's value.
func (s *InnerBffGetLimitFromKeysOutput) SetLimits(v []*LimitForInnerBffGetLimitFromKeysOutput) *InnerBffGetLimitFromKeysOutput {
	s.Limits = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *InnerBffGetLimitFromKeysOutput) SetPageNumber(v int64) *InnerBffGetLimitFromKeysOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *InnerBffGetLimitFromKeysOutput) SetPageSize(v int64) *InnerBffGetLimitFromKeysOutput {
	s.PageSize = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *InnerBffGetLimitFromKeysOutput) SetRequestId(v string) *InnerBffGetLimitFromKeysOutput {
	s.RequestId = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *InnerBffGetLimitFromKeysOutput) SetTotalCount(v int64) *InnerBffGetLimitFromKeysOutput {
	s.TotalCount = &v
	return s
}

type InnerDescribeWhiteListKeysInput struct {
	_ struct{} `type:"structure"`

	Keys []*string `type:"list"`
}

// String returns the string representation
func (s InnerDescribeWhiteListKeysInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s InnerDescribeWhiteListKeysInput) GoString() string {
	return s.String()
}

// SetKeys sets the Keys field's value.
func (s *InnerDescribeWhiteListKeysInput) SetKeys(v []*string) *InnerDescribeWhiteListKeysInput {
	s.Keys = v
	return s
}

type InnerDescribeWhiteListKeysOutput struct {
	_ struct{} `type:"structure"`

	Keys []*KeyForInnerDescribeWhiteListKeysOutput `type:"list"`

	PageNumber *int64 `type:"integer"`

	PageSize *int64 `type:"integer"`

	RequestId *string `type:"string"`

	TotalCount *int64 `type:"integer"`
}

// String returns the string representation
func (s InnerDescribeWhiteListKeysOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s InnerDescribeWhiteListKeysOutput) GoString() string {
	return s.String()
}

// SetKeys sets the Keys field's value.
func (s *InnerDescribeWhiteListKeysOutput) SetKeys(v []*KeyForInnerDescribeWhiteListKeysOutput) *InnerDescribeWhiteListKeysOutput {
	s.Keys = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *InnerDescribeWhiteListKeysOutput) SetPageNumber(v int64) *InnerDescribeWhiteListKeysOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *InnerDescribeWhiteListKeysOutput) SetPageSize(v int64) *InnerDescribeWhiteListKeysOutput {
	s.PageSize = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *InnerDescribeWhiteListKeysOutput) SetRequestId(v string) *InnerDescribeWhiteListKeysOutput {
	s.RequestId = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *InnerDescribeWhiteListKeysOutput) SetTotalCount(v int64) *InnerDescribeWhiteListKeysOutput {
	s.TotalCount = &v
	return s
}

type InnerGetLimitFromKeysInput struct {
	_ struct{} `type:"structure"`

	Keys []*string `type:"list"`
}

// String returns the string representation
func (s InnerGetLimitFromKeysInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s InnerGetLimitFromKeysInput) GoString() string {
	return s.String()
}

// SetKeys sets the Keys field's value.
func (s *InnerGetLimitFromKeysInput) SetKeys(v []*string) *InnerGetLimitFromKeysInput {
	s.Keys = v
	return s
}

type InnerGetLimitFromKeysOutput struct {
	_ struct{} `type:"structure"`

	Limits []*LimitForInnerGetLimitFromKeysOutput `type:"list"`

	PageNumber *int64 `type:"integer"`

	PageSize *int64 `type:"integer"`

	RequestId *string `type:"string"`

	TotalCount *int64 `type:"integer"`
}

// String returns the string representation
func (s InnerGetLimitFromKeysOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s InnerGetLimitFromKeysOutput) GoString() string {
	return s.String()
}

// SetLimits sets the Limits field's value.
func (s *InnerGetLimitFromKeysOutput) SetLimits(v []*LimitForInnerGetLimitFromKeysOutput) *InnerGetLimitFromKeysOutput {
	s.Limits = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *InnerGetLimitFromKeysOutput) SetPageNumber(v int64) *InnerGetLimitFromKeysOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *InnerGetLimitFromKeysOutput) SetPageSize(v int64) *InnerGetLimitFromKeysOutput {
	s.PageSize = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *InnerGetLimitFromKeysOutput) SetRequestId(v string) *InnerGetLimitFromKeysOutput {
	s.RequestId = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *InnerGetLimitFromKeysOutput) SetTotalCount(v int64) *InnerGetLimitFromKeysOutput {
	s.TotalCount = &v
	return s
}

type InnerPostDescribeVpnConnectionsInput struct {
	_ struct{} `type:"structure"`

	PageNumber *int64 `type:"integer"`

	PageSize *int64 `type:"integer"`

	VpnConnectionIds []*string `type:"list"`

	VpnConnectionName *string `type:"string"`
}

// String returns the string representation
func (s InnerPostDescribeVpnConnectionsInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s InnerPostDescribeVpnConnectionsInput) GoString() string {
	return s.String()
}

// SetPageNumber sets the PageNumber field's value.
func (s *InnerPostDescribeVpnConnectionsInput) SetPageNumber(v int64) *InnerPostDescribeVpnConnectionsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *InnerPostDescribeVpnConnectionsInput) SetPageSize(v int64) *InnerPostDescribeVpnConnectionsInput {
	s.PageSize = &v
	return s
}

// SetVpnConnectionIds sets the VpnConnectionIds field's value.
func (s *InnerPostDescribeVpnConnectionsInput) SetVpnConnectionIds(v []*string) *InnerPostDescribeVpnConnectionsInput {
	s.VpnConnectionIds = v
	return s
}

// SetVpnConnectionName sets the VpnConnectionName field's value.
func (s *InnerPostDescribeVpnConnectionsInput) SetVpnConnectionName(v string) *InnerPostDescribeVpnConnectionsInput {
	s.VpnConnectionName = &v
	return s
}

type InnerPostDescribeVpnConnectionsOutput struct {
	_ struct{} `type:"structure"`

	PageNumber *int64 `type:"integer"`

	PageSize *int64 `type:"integer"`

	RequestId *string `type:"string"`

	TotalCount *int64 `type:"integer"`

	VpnConnections []*VpnConnectionForInnerPostDescribeVpnConnectionsOutput `type:"list"`
}

// String returns the string representation
func (s InnerPostDescribeVpnConnectionsOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s InnerPostDescribeVpnConnectionsOutput) GoString() string {
	return s.String()
}

// SetPageNumber sets the PageNumber field's value.
func (s *InnerPostDescribeVpnConnectionsOutput) SetPageNumber(v int64) *InnerPostDescribeVpnConnectionsOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *InnerPostDescribeVpnConnectionsOutput) SetPageSize(v int64) *InnerPostDescribeVpnConnectionsOutput {
	s.PageSize = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *InnerPostDescribeVpnConnectionsOutput) SetRequestId(v string) *InnerPostDescribeVpnConnectionsOutput {
	s.RequestId = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *InnerPostDescribeVpnConnectionsOutput) SetTotalCount(v int64) *InnerPostDescribeVpnConnectionsOutput {
	s.TotalCount = &v
	return s
}

// SetVpnConnections sets the VpnConnections field's value.
func (s *InnerPostDescribeVpnConnectionsOutput) SetVpnConnections(v []*VpnConnectionForInnerPostDescribeVpnConnectionsOutput) *InnerPostDescribeVpnConnectionsOutput {
	s.VpnConnections = v
	return s
}

type InnerPostDescribeVpnGatewaysInput struct {
	_ struct{} `type:"structure"`

	PageNumber *int64 `type:"integer"`

	PageSize *int64 `type:"integer"`

	VpnGatewayIds []*string `type:"list"`

	VpnGatewayName *string `type:"string"`
}

// String returns the string representation
func (s InnerPostDescribeVpnGatewaysInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s InnerPostDescribeVpnGatewaysInput) GoString() string {
	return s.String()
}

// SetPageNumber sets the PageNumber field's value.
func (s *InnerPostDescribeVpnGatewaysInput) SetPageNumber(v int64) *InnerPostDescribeVpnGatewaysInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *InnerPostDescribeVpnGatewaysInput) SetPageSize(v int64) *InnerPostDescribeVpnGatewaysInput {
	s.PageSize = &v
	return s
}

// SetVpnGatewayIds sets the VpnGatewayIds field's value.
func (s *InnerPostDescribeVpnGatewaysInput) SetVpnGatewayIds(v []*string) *InnerPostDescribeVpnGatewaysInput {
	s.VpnGatewayIds = v
	return s
}

// SetVpnGatewayName sets the VpnGatewayName field's value.
func (s *InnerPostDescribeVpnGatewaysInput) SetVpnGatewayName(v string) *InnerPostDescribeVpnGatewaysInput {
	s.VpnGatewayName = &v
	return s
}

type InnerPostDescribeVpnGatewaysOutput struct {
	_ struct{} `type:"structure"`

	PageNumber *int64 `type:"integer"`

	PageSize *int64 `type:"integer"`

	RequestId *string `type:"string"`

	TotalCount *int64 `type:"integer"`

	VpnGateways []*VpnGatewayForInnerPostDescribeVpnGatewaysOutput `type:"list"`
}

// String returns the string representation
func (s InnerPostDescribeVpnGatewaysOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s InnerPostDescribeVpnGatewaysOutput) GoString() string {
	return s.String()
}

// SetPageNumber sets the PageNumber field's value.
func (s *InnerPostDescribeVpnGatewaysOutput) SetPageNumber(v int64) *InnerPostDescribeVpnGatewaysOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *InnerPostDescribeVpnGatewaysOutput) SetPageSize(v int64) *InnerPostDescribeVpnGatewaysOutput {
	s.PageSize = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *InnerPostDescribeVpnGatewaysOutput) SetRequestId(v string) *InnerPostDescribeVpnGatewaysOutput {
	s.RequestId = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *InnerPostDescribeVpnGatewaysOutput) SetTotalCount(v int64) *InnerPostDescribeVpnGatewaysOutput {
	s.TotalCount = &v
	return s
}

// SetVpnGateways sets the VpnGateways field's value.
func (s *InnerPostDescribeVpnGatewaysOutput) SetVpnGateways(v []*VpnGatewayForInnerPostDescribeVpnGatewaysOutput) *InnerPostDescribeVpnGatewaysOutput {
	s.VpnGateways = v
	return s
}

type KeyForInnerDescribeWhiteListKeysOutput struct {
	_ struct{} `type:"structure"`

	CreationTime *string `type:"string"`

	Creator *string `type:"string"`

	Description *string `type:"string"`

	Elements []*KeysElementForInnerDescribeWhiteListKeysOutput `type:"list"`

	Enable *bool `type:"boolean"`

	Key *string `type:"string"`

	Status *string `type:"string"`

	Type *int64 `type:"integer"`

	UpdateTime *string `type:"string"`
}

// String returns the string representation
func (s KeyForInnerDescribeWhiteListKeysOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s KeyForInnerDescribeWhiteListKeysOutput) GoString() string {
	return s.String()
}

// SetCreationTime sets the CreationTime field's value.
func (s *KeyForInnerDescribeWhiteListKeysOutput) SetCreationTime(v string) *KeyForInnerDescribeWhiteListKeysOutput {
	s.CreationTime = &v
	return s
}

// SetCreator sets the Creator field's value.
func (s *KeyForInnerDescribeWhiteListKeysOutput) SetCreator(v string) *KeyForInnerDescribeWhiteListKeysOutput {
	s.Creator = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *KeyForInnerDescribeWhiteListKeysOutput) SetDescription(v string) *KeyForInnerDescribeWhiteListKeysOutput {
	s.Description = &v
	return s
}

// SetElements sets the Elements field's value.
func (s *KeyForInnerDescribeWhiteListKeysOutput) SetElements(v []*KeysElementForInnerDescribeWhiteListKeysOutput) *KeyForInnerDescribeWhiteListKeysOutput {
	s.Elements = v
	return s
}

// SetEnable sets the Enable field's value.
func (s *KeyForInnerDescribeWhiteListKeysOutput) SetEnable(v bool) *KeyForInnerDescribeWhiteListKeysOutput {
	s.Enable = &v
	return s
}

// SetKey sets the Key field's value.
func (s *KeyForInnerDescribeWhiteListKeysOutput) SetKey(v string) *KeyForInnerDescribeWhiteListKeysOutput {
	s.Key = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *KeyForInnerDescribeWhiteListKeysOutput) SetStatus(v string) *KeyForInnerDescribeWhiteListKeysOutput {
	s.Status = &v
	return s
}

// SetType sets the Type field's value.
func (s *KeyForInnerDescribeWhiteListKeysOutput) SetType(v int64) *KeyForInnerDescribeWhiteListKeysOutput {
	s.Type = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *KeyForInnerDescribeWhiteListKeysOutput) SetUpdateTime(v string) *KeyForInnerDescribeWhiteListKeysOutput {
	s.UpdateTime = &v
	return s
}

type KeysElementForInnerDescribeWhiteListKeysOutput struct {
	_ struct{} `type:"structure"`

	CreationTime *string `type:"string"`

	Description *string `type:"string"`

	Level *int64 `type:"integer"`

	Limit *int64 `type:"integer"`

	Object *string `type:"string"`

	ServiceName *string `type:"string"`

	Status *string `type:"string"`

	UpdateTime *string `type:"string"`
}

// String returns the string representation
func (s KeysElementForInnerDescribeWhiteListKeysOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s KeysElementForInnerDescribeWhiteListKeysOutput) GoString() string {
	return s.String()
}

// SetCreationTime sets the CreationTime field's value.
func (s *KeysElementForInnerDescribeWhiteListKeysOutput) SetCreationTime(v string) *KeysElementForInnerDescribeWhiteListKeysOutput {
	s.CreationTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *KeysElementForInnerDescribeWhiteListKeysOutput) SetDescription(v string) *KeysElementForInnerDescribeWhiteListKeysOutput {
	s.Description = &v
	return s
}

// SetLevel sets the Level field's value.
func (s *KeysElementForInnerDescribeWhiteListKeysOutput) SetLevel(v int64) *KeysElementForInnerDescribeWhiteListKeysOutput {
	s.Level = &v
	return s
}

// SetLimit sets the Limit field's value.
func (s *KeysElementForInnerDescribeWhiteListKeysOutput) SetLimit(v int64) *KeysElementForInnerDescribeWhiteListKeysOutput {
	s.Limit = &v
	return s
}

// SetObject sets the Object field's value.
func (s *KeysElementForInnerDescribeWhiteListKeysOutput) SetObject(v string) *KeysElementForInnerDescribeWhiteListKeysOutput {
	s.Object = &v
	return s
}

// SetServiceName sets the ServiceName field's value.
func (s *KeysElementForInnerDescribeWhiteListKeysOutput) SetServiceName(v string) *KeysElementForInnerDescribeWhiteListKeysOutput {
	s.ServiceName = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *KeysElementForInnerDescribeWhiteListKeysOutput) SetStatus(v string) *KeysElementForInnerDescribeWhiteListKeysOutput {
	s.Status = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *KeysElementForInnerDescribeWhiteListKeysOutput) SetUpdateTime(v string) *KeysElementForInnerDescribeWhiteListKeysOutput {
	s.UpdateTime = &v
	return s
}

type LimitForInnerBffGetLimitFromKeysOutput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Limit *int64 `type:"integer"`

	Type *int64 `type:"integer"`
}

// String returns the string representation
func (s LimitForInnerBffGetLimitFromKeysOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s LimitForInnerBffGetLimitFromKeysOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *LimitForInnerBffGetLimitFromKeysOutput) SetKey(v string) *LimitForInnerBffGetLimitFromKeysOutput {
	s.Key = &v
	return s
}

// SetLimit sets the Limit field's value.
func (s *LimitForInnerBffGetLimitFromKeysOutput) SetLimit(v int64) *LimitForInnerBffGetLimitFromKeysOutput {
	s.Limit = &v
	return s
}

// SetType sets the Type field's value.
func (s *LimitForInnerBffGetLimitFromKeysOutput) SetType(v int64) *LimitForInnerBffGetLimitFromKeysOutput {
	s.Type = &v
	return s
}

type LimitForInnerGetLimitFromKeysOutput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Limit *int64 `type:"integer"`

	Type *int64 `type:"integer"`
}

// String returns the string representation
func (s LimitForInnerGetLimitFromKeysOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s LimitForInnerGetLimitFromKeysOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *LimitForInnerGetLimitFromKeysOutput) SetKey(v string) *LimitForInnerGetLimitFromKeysOutput {
	s.Key = &v
	return s
}

// SetLimit sets the Limit field's value.
func (s *LimitForInnerGetLimitFromKeysOutput) SetLimit(v int64) *LimitForInnerGetLimitFromKeysOutput {
	s.Limit = &v
	return s
}

// SetType sets the Type field's value.
func (s *LimitForInnerGetLimitFromKeysOutput) SetType(v int64) *LimitForInnerGetLimitFromKeysOutput {
	s.Type = &v
	return s
}

type VpnConnectionForInnerPostDescribeVpnConnectionsOutput struct {
	_ struct{} `type:"structure"`

	AccountId *string `type:"string"`

	CreationTime *string `type:"string"`

	CustomerVpnGatewayId *string `type:"string"`

	Description *string `type:"string"`

	IkeConfig *VpnConnectionsIkeConfigForInnerPostDescribeVpnConnectionsOutput `type:"structure"`

	IpsecConfig *VpnConnectionsIpsecConfigForInnerPostDescribeVpnConnectionsOutput `type:"structure"`

	LocalSubnet []*string `type:"list"`

	NatTraversal *bool `type:"boolean"`

	ProjectName *string `type:"string"`

	RegionID *string `type:"string"`

	RemoteSubnet []*string `type:"list"`

	Status *string `type:"string"`

	UpdateTime *string `type:"string"`

	VpnConnectionId *string `type:"string"`

	VpnConnectionName *string `type:"string"`

	VpnGatewayId *string `type:"string"`
}

// String returns the string representation
func (s VpnConnectionForInnerPostDescribeVpnConnectionsOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s VpnConnectionForInnerPostDescribeVpnConnectionsOutput) GoString() string {
	return s.String()
}

// SetAccountId sets the AccountId field's value.
func (s *VpnConnectionForInnerPostDescribeVpnConnectionsOutput) SetAccountId(v string) *VpnConnectionForInnerPostDescribeVpnConnectionsOutput {
	s.AccountId = &v
	return s
}

// SetCreationTime sets the CreationTime field's value.
func (s *VpnConnectionForInnerPostDescribeVpnConnectionsOutput) SetCreationTime(v string) *VpnConnectionForInnerPostDescribeVpnConnectionsOutput {
	s.CreationTime = &v
	return s
}

// SetCustomerVpnGatewayId sets the CustomerVpnGatewayId field's value.
func (s *VpnConnectionForInnerPostDescribeVpnConnectionsOutput) SetCustomerVpnGatewayId(v string) *VpnConnectionForInnerPostDescribeVpnConnectionsOutput {
	s.CustomerVpnGatewayId = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *VpnConnectionForInnerPostDescribeVpnConnectionsOutput) SetDescription(v string) *VpnConnectionForInnerPostDescribeVpnConnectionsOutput {
	s.Description = &v
	return s
}

// SetIkeConfig sets the IkeConfig field's value.
func (s *VpnConnectionForInnerPostDescribeVpnConnectionsOutput) SetIkeConfig(v *VpnConnectionsIkeConfigForInnerPostDescribeVpnConnectionsOutput) *VpnConnectionForInnerPostDescribeVpnConnectionsOutput {
	s.IkeConfig = v
	return s
}

// SetIpsecConfig sets the IpsecConfig field's value.
func (s *VpnConnectionForInnerPostDescribeVpnConnectionsOutput) SetIpsecConfig(v *VpnConnectionsIpsecConfigForInnerPostDescribeVpnConnectionsOutput) *VpnConnectionForInnerPostDescribeVpnConnectionsOutput {
	s.IpsecConfig = v
	return s
}

// SetLocalSubnet sets the LocalSubnet field's value.
func (s *VpnConnectionForInnerPostDescribeVpnConnectionsOutput) SetLocalSubnet(v []*string) *VpnConnectionForInnerPostDescribeVpnConnectionsOutput {
	s.LocalSubnet = v
	return s
}

// SetNatTraversal sets the NatTraversal field's value.
func (s *VpnConnectionForInnerPostDescribeVpnConnectionsOutput) SetNatTraversal(v bool) *VpnConnectionForInnerPostDescribeVpnConnectionsOutput {
	s.NatTraversal = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *VpnConnectionForInnerPostDescribeVpnConnectionsOutput) SetProjectName(v string) *VpnConnectionForInnerPostDescribeVpnConnectionsOutput {
	s.ProjectName = &v
	return s
}

// SetRegionID sets the RegionID field's value.
func (s *VpnConnectionForInnerPostDescribeVpnConnectionsOutput) SetRegionID(v string) *VpnConnectionForInnerPostDescribeVpnConnectionsOutput {
	s.RegionID = &v
	return s
}

// SetRemoteSubnet sets the RemoteSubnet field's value.
func (s *VpnConnectionForInnerPostDescribeVpnConnectionsOutput) SetRemoteSubnet(v []*string) *VpnConnectionForInnerPostDescribeVpnConnectionsOutput {
	s.RemoteSubnet = v
	return s
}

// SetStatus sets the Status field's value.
func (s *VpnConnectionForInnerPostDescribeVpnConnectionsOutput) SetStatus(v string) *VpnConnectionForInnerPostDescribeVpnConnectionsOutput {
	s.Status = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *VpnConnectionForInnerPostDescribeVpnConnectionsOutput) SetUpdateTime(v string) *VpnConnectionForInnerPostDescribeVpnConnectionsOutput {
	s.UpdateTime = &v
	return s
}

// SetVpnConnectionId sets the VpnConnectionId field's value.
func (s *VpnConnectionForInnerPostDescribeVpnConnectionsOutput) SetVpnConnectionId(v string) *VpnConnectionForInnerPostDescribeVpnConnectionsOutput {
	s.VpnConnectionId = &v
	return s
}

// SetVpnConnectionName sets the VpnConnectionName field's value.
func (s *VpnConnectionForInnerPostDescribeVpnConnectionsOutput) SetVpnConnectionName(v string) *VpnConnectionForInnerPostDescribeVpnConnectionsOutput {
	s.VpnConnectionName = &v
	return s
}

// SetVpnGatewayId sets the VpnGatewayId field's value.
func (s *VpnConnectionForInnerPostDescribeVpnConnectionsOutput) SetVpnGatewayId(v string) *VpnConnectionForInnerPostDescribeVpnConnectionsOutput {
	s.VpnGatewayId = &v
	return s
}

type VpnConnectionsIkeConfigForInnerPostDescribeVpnConnectionsOutput struct {
	_ struct{} `type:"structure"`

	AuthAlg *string `type:"string"`

	DhGroup *string `type:"string"`

	EncAlg *string `type:"string"`

	Lifetime *int64 `type:"integer"`

	LocalId *string `type:"string"`

	Mode *string `type:"string"`

	Psk *string `type:"string"`

	RemoteId *string `type:"string"`

	Version *string `type:"string"`
}

// String returns the string representation
func (s VpnConnectionsIkeConfigForInnerPostDescribeVpnConnectionsOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s VpnConnectionsIkeConfigForInnerPostDescribeVpnConnectionsOutput) GoString() string {
	return s.String()
}

// SetAuthAlg sets the AuthAlg field's value.
func (s *VpnConnectionsIkeConfigForInnerPostDescribeVpnConnectionsOutput) SetAuthAlg(v string) *VpnConnectionsIkeConfigForInnerPostDescribeVpnConnectionsOutput {
	s.AuthAlg = &v
	return s
}

// SetDhGroup sets the DhGroup field's value.
func (s *VpnConnectionsIkeConfigForInnerPostDescribeVpnConnectionsOutput) SetDhGroup(v string) *VpnConnectionsIkeConfigForInnerPostDescribeVpnConnectionsOutput {
	s.DhGroup = &v
	return s
}

// SetEncAlg sets the EncAlg field's value.
func (s *VpnConnectionsIkeConfigForInnerPostDescribeVpnConnectionsOutput) SetEncAlg(v string) *VpnConnectionsIkeConfigForInnerPostDescribeVpnConnectionsOutput {
	s.EncAlg = &v
	return s
}

// SetLifetime sets the Lifetime field's value.
func (s *VpnConnectionsIkeConfigForInnerPostDescribeVpnConnectionsOutput) SetLifetime(v int64) *VpnConnectionsIkeConfigForInnerPostDescribeVpnConnectionsOutput {
	s.Lifetime = &v
	return s
}

// SetLocalId sets the LocalId field's value.
func (s *VpnConnectionsIkeConfigForInnerPostDescribeVpnConnectionsOutput) SetLocalId(v string) *VpnConnectionsIkeConfigForInnerPostDescribeVpnConnectionsOutput {
	s.LocalId = &v
	return s
}

// SetMode sets the Mode field's value.
func (s *VpnConnectionsIkeConfigForInnerPostDescribeVpnConnectionsOutput) SetMode(v string) *VpnConnectionsIkeConfigForInnerPostDescribeVpnConnectionsOutput {
	s.Mode = &v
	return s
}

// SetPsk sets the Psk field's value.
func (s *VpnConnectionsIkeConfigForInnerPostDescribeVpnConnectionsOutput) SetPsk(v string) *VpnConnectionsIkeConfigForInnerPostDescribeVpnConnectionsOutput {
	s.Psk = &v
	return s
}

// SetRemoteId sets the RemoteId field's value.
func (s *VpnConnectionsIkeConfigForInnerPostDescribeVpnConnectionsOutput) SetRemoteId(v string) *VpnConnectionsIkeConfigForInnerPostDescribeVpnConnectionsOutput {
	s.RemoteId = &v
	return s
}

// SetVersion sets the Version field's value.
func (s *VpnConnectionsIkeConfigForInnerPostDescribeVpnConnectionsOutput) SetVersion(v string) *VpnConnectionsIkeConfigForInnerPostDescribeVpnConnectionsOutput {
	s.Version = &v
	return s
}

type VpnConnectionsIpsecConfigForInnerPostDescribeVpnConnectionsOutput struct {
	_ struct{} `type:"structure"`

	AuthAlg *string `type:"string"`

	DhGroup *string `type:"string"`

	EncAlg *string `type:"string"`

	Lifetime *int64 `type:"integer"`
}

// String returns the string representation
func (s VpnConnectionsIpsecConfigForInnerPostDescribeVpnConnectionsOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s VpnConnectionsIpsecConfigForInnerPostDescribeVpnConnectionsOutput) GoString() string {
	return s.String()
}

// SetAuthAlg sets the AuthAlg field's value.
func (s *VpnConnectionsIpsecConfigForInnerPostDescribeVpnConnectionsOutput) SetAuthAlg(v string) *VpnConnectionsIpsecConfigForInnerPostDescribeVpnConnectionsOutput {
	s.AuthAlg = &v
	return s
}

// SetDhGroup sets the DhGroup field's value.
func (s *VpnConnectionsIpsecConfigForInnerPostDescribeVpnConnectionsOutput) SetDhGroup(v string) *VpnConnectionsIpsecConfigForInnerPostDescribeVpnConnectionsOutput {
	s.DhGroup = &v
	return s
}

// SetEncAlg sets the EncAlg field's value.
func (s *VpnConnectionsIpsecConfigForInnerPostDescribeVpnConnectionsOutput) SetEncAlg(v string) *VpnConnectionsIpsecConfigForInnerPostDescribeVpnConnectionsOutput {
	s.EncAlg = &v
	return s
}

// SetLifetime sets the Lifetime field's value.
func (s *VpnConnectionsIpsecConfigForInnerPostDescribeVpnConnectionsOutput) SetLifetime(v int64) *VpnConnectionsIpsecConfigForInnerPostDescribeVpnConnectionsOutput {
	s.Lifetime = &v
	return s
}

type VpnGatewayForInnerPostDescribeVpnGatewaysOutput struct {
	_ struct{} `type:"structure"`

	AccountId *string `type:"string"`

	Bandwidth *int64 `type:"integer"`

	BillingType *int64 `type:"integer"`

	BusinessStatus *string `type:"string"`

	ConnectionCount *int64 `type:"integer"`

	CreationTime *string `type:"string"`

	DeletedTime *string `type:"string"`

	Description *string `type:"string"`

	ExpiredTime *string `type:"string"`

	IpAddress *string `type:"string"`

	LockReason *string `type:"string"`

	ProjectName *string `type:"string"`

	RouteCount *int64 `type:"integer"`

	Status *string `type:"string"`

	SubnetId *string `type:"string"`

	UpdateTime *string `type:"string"`

	VpcId *string `type:"string"`

	VpnGatewayId *string `type:"string"`

	VpnGatewayName *string `type:"string"`
}

// String returns the string representation
func (s VpnGatewayForInnerPostDescribeVpnGatewaysOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s VpnGatewayForInnerPostDescribeVpnGatewaysOutput) GoString() string {
	return s.String()
}

// SetAccountId sets the AccountId field's value.
func (s *VpnGatewayForInnerPostDescribeVpnGatewaysOutput) SetAccountId(v string) *VpnGatewayForInnerPostDescribeVpnGatewaysOutput {
	s.AccountId = &v
	return s
}

// SetBandwidth sets the Bandwidth field's value.
func (s *VpnGatewayForInnerPostDescribeVpnGatewaysOutput) SetBandwidth(v int64) *VpnGatewayForInnerPostDescribeVpnGatewaysOutput {
	s.Bandwidth = &v
	return s
}

// SetBillingType sets the BillingType field's value.
func (s *VpnGatewayForInnerPostDescribeVpnGatewaysOutput) SetBillingType(v int64) *VpnGatewayForInnerPostDescribeVpnGatewaysOutput {
	s.BillingType = &v
	return s
}

// SetBusinessStatus sets the BusinessStatus field's value.
func (s *VpnGatewayForInnerPostDescribeVpnGatewaysOutput) SetBusinessStatus(v string) *VpnGatewayForInnerPostDescribeVpnGatewaysOutput {
	s.BusinessStatus = &v
	return s
}

// SetConnectionCount sets the ConnectionCount field's value.
func (s *VpnGatewayForInnerPostDescribeVpnGatewaysOutput) SetConnectionCount(v int64) *VpnGatewayForInnerPostDescribeVpnGatewaysOutput {
	s.ConnectionCount = &v
	return s
}

// SetCreationTime sets the CreationTime field's value.
func (s *VpnGatewayForInnerPostDescribeVpnGatewaysOutput) SetCreationTime(v string) *VpnGatewayForInnerPostDescribeVpnGatewaysOutput {
	s.CreationTime = &v
	return s
}

// SetDeletedTime sets the DeletedTime field's value.
func (s *VpnGatewayForInnerPostDescribeVpnGatewaysOutput) SetDeletedTime(v string) *VpnGatewayForInnerPostDescribeVpnGatewaysOutput {
	s.DeletedTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *VpnGatewayForInnerPostDescribeVpnGatewaysOutput) SetDescription(v string) *VpnGatewayForInnerPostDescribeVpnGatewaysOutput {
	s.Description = &v
	return s
}

// SetExpiredTime sets the ExpiredTime field's value.
func (s *VpnGatewayForInnerPostDescribeVpnGatewaysOutput) SetExpiredTime(v string) *VpnGatewayForInnerPostDescribeVpnGatewaysOutput {
	s.ExpiredTime = &v
	return s
}

// SetIpAddress sets the IpAddress field's value.
func (s *VpnGatewayForInnerPostDescribeVpnGatewaysOutput) SetIpAddress(v string) *VpnGatewayForInnerPostDescribeVpnGatewaysOutput {
	s.IpAddress = &v
	return s
}

// SetLockReason sets the LockReason field's value.
func (s *VpnGatewayForInnerPostDescribeVpnGatewaysOutput) SetLockReason(v string) *VpnGatewayForInnerPostDescribeVpnGatewaysOutput {
	s.LockReason = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *VpnGatewayForInnerPostDescribeVpnGatewaysOutput) SetProjectName(v string) *VpnGatewayForInnerPostDescribeVpnGatewaysOutput {
	s.ProjectName = &v
	return s
}

// SetRouteCount sets the RouteCount field's value.
func (s *VpnGatewayForInnerPostDescribeVpnGatewaysOutput) SetRouteCount(v int64) *VpnGatewayForInnerPostDescribeVpnGatewaysOutput {
	s.RouteCount = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *VpnGatewayForInnerPostDescribeVpnGatewaysOutput) SetStatus(v string) *VpnGatewayForInnerPostDescribeVpnGatewaysOutput {
	s.Status = &v
	return s
}

// SetSubnetId sets the SubnetId field's value.
func (s *VpnGatewayForInnerPostDescribeVpnGatewaysOutput) SetSubnetId(v string) *VpnGatewayForInnerPostDescribeVpnGatewaysOutput {
	s.SubnetId = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *VpnGatewayForInnerPostDescribeVpnGatewaysOutput) SetUpdateTime(v string) *VpnGatewayForInnerPostDescribeVpnGatewaysOutput {
	s.UpdateTime = &v
	return s
}

// SetVpcId sets the VpcId field's value.
func (s *VpnGatewayForInnerPostDescribeVpnGatewaysOutput) SetVpcId(v string) *VpnGatewayForInnerPostDescribeVpnGatewaysOutput {
	s.VpcId = &v
	return s
}

// SetVpnGatewayId sets the VpnGatewayId field's value.
func (s *VpnGatewayForInnerPostDescribeVpnGatewaysOutput) SetVpnGatewayId(v string) *VpnGatewayForInnerPostDescribeVpnGatewaysOutput {
	s.VpnGatewayId = &v
	return s
}

// SetVpnGatewayName sets the VpnGatewayName field's value.
func (s *VpnGatewayForInnerPostDescribeVpnGatewaysOutput) SetVpnGatewayName(v string) *VpnGatewayForInnerPostDescribeVpnGatewaysOutput {
	s.VpnGatewayName = &v
	return s
}
