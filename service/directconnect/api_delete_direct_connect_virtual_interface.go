// Code generated by volcstack with private/model/cli/gen-api/main.go. DO NOT EDIT.

package directconnect

import (
	"github.com/volcengine/volcstack-go-sdk/volcstack"
	"github.com/volcengine/volcstack-go-sdk/volcstack/request"
	"github.com/volcengine/volcstack-go-sdk/volcstack/response"
	"github.com/volcengine/volcstack-go-sdk/volcstack/volcstackutil"
)

const opDeleteDirectConnectVirtualInterfaceCommon = "DeleteDirectConnectVirtualInterface"

// DeleteDirectConnectVirtualInterfaceCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the DeleteDirectConnectVirtualInterfaceCommon operation. The "output" return
// value will be populated with the DeleteDirectConnectVirtualInterfaceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteDirectConnectVirtualInterfaceCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteDirectConnectVirtualInterfaceCommon Send returns without error.
//
// See DeleteDirectConnectVirtualInterfaceCommon for more information on using the DeleteDirectConnectVirtualInterfaceCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteDirectConnectVirtualInterfaceCommonRequest method.
//    req, resp := client.DeleteDirectConnectVirtualInterfaceCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DIRECTCONNECT) DeleteDirectConnectVirtualInterfaceCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteDirectConnectVirtualInterfaceCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DeleteDirectConnectVirtualInterfaceCommon API operation for DIRECTCONNECT.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for DIRECTCONNECT's
// API operation DeleteDirectConnectVirtualInterfaceCommon for usage and error information.
func (c *DIRECTCONNECT) DeleteDirectConnectVirtualInterfaceCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteDirectConnectVirtualInterfaceCommonRequest(input)
	return out, req.Send()
}

// DeleteDirectConnectVirtualInterfaceCommonWithContext is the same as DeleteDirectConnectVirtualInterfaceCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteDirectConnectVirtualInterfaceCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DIRECTCONNECT) DeleteDirectConnectVirtualInterfaceCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteDirectConnectVirtualInterfaceCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteDirectConnectVirtualInterface = "DeleteDirectConnectVirtualInterface"

// DeleteDirectConnectVirtualInterfaceRequest generates a "volcstack/request.Request" representing the
// client's request for the DeleteDirectConnectVirtualInterface operation. The "output" return
// value will be populated with the DeleteDirectConnectVirtualInterfaceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteDirectConnectVirtualInterfaceCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteDirectConnectVirtualInterfaceCommon Send returns without error.
//
// See DeleteDirectConnectVirtualInterface for more information on using the DeleteDirectConnectVirtualInterface
// API call, and error handling.
//
//    // Example sending a request using the DeleteDirectConnectVirtualInterfaceRequest method.
//    req, resp := client.DeleteDirectConnectVirtualInterfaceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DIRECTCONNECT) DeleteDirectConnectVirtualInterfaceRequest(input *DeleteDirectConnectVirtualInterfaceInput) (req *request.Request, output *DeleteDirectConnectVirtualInterfaceOutput) {
	op := &request.Operation{
		Name:       opDeleteDirectConnectVirtualInterface,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteDirectConnectVirtualInterfaceInput{}
	}

	output = &DeleteDirectConnectVirtualInterfaceOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DeleteDirectConnectVirtualInterface API operation for DIRECTCONNECT.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for DIRECTCONNECT's
// API operation DeleteDirectConnectVirtualInterface for usage and error information.
func (c *DIRECTCONNECT) DeleteDirectConnectVirtualInterface(input *DeleteDirectConnectVirtualInterfaceInput) (*DeleteDirectConnectVirtualInterfaceOutput, error) {
	req, out := c.DeleteDirectConnectVirtualInterfaceRequest(input)
	return out, req.Send()
}

// DeleteDirectConnectVirtualInterfaceWithContext is the same as DeleteDirectConnectVirtualInterface with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteDirectConnectVirtualInterface for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DIRECTCONNECT) DeleteDirectConnectVirtualInterfaceWithContext(ctx volcstack.Context, input *DeleteDirectConnectVirtualInterfaceInput, opts ...request.Option) (*DeleteDirectConnectVirtualInterfaceOutput, error) {
	req, out := c.DeleteDirectConnectVirtualInterfaceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteDirectConnectVirtualInterfaceInput struct {
	_ struct{} `type:"structure"`

	// VirtualInterfaceId is a required field
	VirtualInterfaceId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DeleteDirectConnectVirtualInterfaceInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteDirectConnectVirtualInterfaceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteDirectConnectVirtualInterfaceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DeleteDirectConnectVirtualInterfaceInput"}
	if s.VirtualInterfaceId == nil {
		invalidParams.Add(request.NewErrParamRequired("VirtualInterfaceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetVirtualInterfaceId sets the VirtualInterfaceId field's value.
func (s *DeleteDirectConnectVirtualInterfaceInput) SetVirtualInterfaceId(v string) *DeleteDirectConnectVirtualInterfaceInput {
	s.VirtualInterfaceId = &v
	return s
}

type DeleteDirectConnectVirtualInterfaceOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	RequestId *string `type:"string"`
}

// String returns the string representation
func (s DeleteDirectConnectVirtualInterfaceOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteDirectConnectVirtualInterfaceOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *DeleteDirectConnectVirtualInterfaceOutput) SetRequestId(v string) *DeleteDirectConnectVirtualInterfaceOutput {
	s.RequestId = &v
	return s
}
