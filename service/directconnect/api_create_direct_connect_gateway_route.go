// Code generated by volcstack with private/model/cli/gen-api/main.go. DO NOT EDIT.

package directconnect

import (
	"github.com/volcengine/volcstack-go-sdk/volcstack"
	"github.com/volcengine/volcstack-go-sdk/volcstack/request"
	"github.com/volcengine/volcstack-go-sdk/volcstack/response"
	"github.com/volcengine/volcstack-go-sdk/volcstack/volcstackutil"
)

const opCreateDirectConnectGatewayRouteCommon = "CreateDirectConnectGatewayRoute"

// CreateDirectConnectGatewayRouteCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the CreateDirectConnectGatewayRouteCommon operation. The "output" return
// value will be populated with the CreateDirectConnectGatewayRouteCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateDirectConnectGatewayRouteCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateDirectConnectGatewayRouteCommon Send returns without error.
//
// See CreateDirectConnectGatewayRouteCommon for more information on using the CreateDirectConnectGatewayRouteCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateDirectConnectGatewayRouteCommonRequest method.
//    req, resp := client.CreateDirectConnectGatewayRouteCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DIRECTCONNECT) CreateDirectConnectGatewayRouteCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateDirectConnectGatewayRouteCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// CreateDirectConnectGatewayRouteCommon API operation for DIRECTCONNECT.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for DIRECTCONNECT's
// API operation CreateDirectConnectGatewayRouteCommon for usage and error information.
func (c *DIRECTCONNECT) CreateDirectConnectGatewayRouteCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateDirectConnectGatewayRouteCommonRequest(input)
	return out, req.Send()
}

// CreateDirectConnectGatewayRouteCommonWithContext is the same as CreateDirectConnectGatewayRouteCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateDirectConnectGatewayRouteCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DIRECTCONNECT) CreateDirectConnectGatewayRouteCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateDirectConnectGatewayRouteCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateDirectConnectGatewayRoute = "CreateDirectConnectGatewayRoute"

// CreateDirectConnectGatewayRouteRequest generates a "volcstack/request.Request" representing the
// client's request for the CreateDirectConnectGatewayRoute operation. The "output" return
// value will be populated with the CreateDirectConnectGatewayRouteCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateDirectConnectGatewayRouteCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateDirectConnectGatewayRouteCommon Send returns without error.
//
// See CreateDirectConnectGatewayRoute for more information on using the CreateDirectConnectGatewayRoute
// API call, and error handling.
//
//    // Example sending a request using the CreateDirectConnectGatewayRouteRequest method.
//    req, resp := client.CreateDirectConnectGatewayRouteRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DIRECTCONNECT) CreateDirectConnectGatewayRouteRequest(input *CreateDirectConnectGatewayRouteInput) (req *request.Request, output *CreateDirectConnectGatewayRouteOutput) {
	op := &request.Operation{
		Name:       opCreateDirectConnectGatewayRoute,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateDirectConnectGatewayRouteInput{}
	}

	output = &CreateDirectConnectGatewayRouteOutput{}
	req = c.newRequest(op, input, output)

	return
}

// CreateDirectConnectGatewayRoute API operation for DIRECTCONNECT.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for DIRECTCONNECT's
// API operation CreateDirectConnectGatewayRoute for usage and error information.
func (c *DIRECTCONNECT) CreateDirectConnectGatewayRoute(input *CreateDirectConnectGatewayRouteInput) (*CreateDirectConnectGatewayRouteOutput, error) {
	req, out := c.CreateDirectConnectGatewayRouteRequest(input)
	return out, req.Send()
}

// CreateDirectConnectGatewayRouteWithContext is the same as CreateDirectConnectGatewayRoute with the addition of
// the ability to pass a context and additional request options.
//
// See CreateDirectConnectGatewayRoute for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DIRECTCONNECT) CreateDirectConnectGatewayRouteWithContext(ctx volcstack.Context, input *CreateDirectConnectGatewayRouteInput, opts ...request.Option) (*CreateDirectConnectGatewayRouteOutput, error) {
	req, out := c.CreateDirectConnectGatewayRouteRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateDirectConnectGatewayRouteInput struct {
	_ struct{} `type:"structure"`

	// DestinationCidrBlock is a required field
	DestinationCidrBlock *string `type:"string" required:"true"`

	// DirectConnectGatewayId is a required field
	DirectConnectGatewayId *string `type:"string" required:"true"`

	// NextHopId is a required field
	NextHopId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s CreateDirectConnectGatewayRouteInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateDirectConnectGatewayRouteInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateDirectConnectGatewayRouteInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateDirectConnectGatewayRouteInput"}
	if s.DestinationCidrBlock == nil {
		invalidParams.Add(request.NewErrParamRequired("DestinationCidrBlock"))
	}
	if s.DirectConnectGatewayId == nil {
		invalidParams.Add(request.NewErrParamRequired("DirectConnectGatewayId"))
	}
	if s.NextHopId == nil {
		invalidParams.Add(request.NewErrParamRequired("NextHopId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDestinationCidrBlock sets the DestinationCidrBlock field's value.
func (s *CreateDirectConnectGatewayRouteInput) SetDestinationCidrBlock(v string) *CreateDirectConnectGatewayRouteInput {
	s.DestinationCidrBlock = &v
	return s
}

// SetDirectConnectGatewayId sets the DirectConnectGatewayId field's value.
func (s *CreateDirectConnectGatewayRouteInput) SetDirectConnectGatewayId(v string) *CreateDirectConnectGatewayRouteInput {
	s.DirectConnectGatewayId = &v
	return s
}

// SetNextHopId sets the NextHopId field's value.
func (s *CreateDirectConnectGatewayRouteInput) SetNextHopId(v string) *CreateDirectConnectGatewayRouteInput {
	s.NextHopId = &v
	return s
}

type CreateDirectConnectGatewayRouteOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	DirectConnectGatewayRouteId *string `type:"string"`

	RequestId *string `type:"string"`
}

// String returns the string representation
func (s CreateDirectConnectGatewayRouteOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateDirectConnectGatewayRouteOutput) GoString() string {
	return s.String()
}

// SetDirectConnectGatewayRouteId sets the DirectConnectGatewayRouteId field's value.
func (s *CreateDirectConnectGatewayRouteOutput) SetDirectConnectGatewayRouteId(v string) *CreateDirectConnectGatewayRouteOutput {
	s.DirectConnectGatewayRouteId = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *CreateDirectConnectGatewayRouteOutput) SetRequestId(v string) *CreateDirectConnectGatewayRouteOutput {
	s.RequestId = &v
	return s
}
