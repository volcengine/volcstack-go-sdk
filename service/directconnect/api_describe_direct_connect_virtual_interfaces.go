// Code generated by volcstack with private/model/cli/gen-api/main.go. DO NOT EDIT.

package directconnect

import (
	"github.com/volcengine/volcstack-go-sdk/volcstack"
	"github.com/volcengine/volcstack-go-sdk/volcstack/request"
	"github.com/volcengine/volcstack-go-sdk/volcstack/response"
	"github.com/volcengine/volcstack-go-sdk/volcstack/volcstackutil"
)

const opDescribeDirectConnectVirtualInterfacesCommon = "DescribeDirectConnectVirtualInterfaces"

// DescribeDirectConnectVirtualInterfacesCommonRequest generates a "volcstack/request.Request" representing the
// client's request for the DescribeDirectConnectVirtualInterfacesCommon operation. The "output" return
// value will be populated with the DescribeDirectConnectVirtualInterfacesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDirectConnectVirtualInterfacesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDirectConnectVirtualInterfacesCommon Send returns without error.
//
// See DescribeDirectConnectVirtualInterfacesCommon for more information on using the DescribeDirectConnectVirtualInterfacesCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeDirectConnectVirtualInterfacesCommonRequest method.
//    req, resp := client.DescribeDirectConnectVirtualInterfacesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DIRECTCONNECT) DescribeDirectConnectVirtualInterfacesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeDirectConnectVirtualInterfacesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeDirectConnectVirtualInterfacesCommon API operation for DIRECTCONNECT.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for DIRECTCONNECT's
// API operation DescribeDirectConnectVirtualInterfacesCommon for usage and error information.
func (c *DIRECTCONNECT) DescribeDirectConnectVirtualInterfacesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeDirectConnectVirtualInterfacesCommonRequest(input)
	return out, req.Send()
}

// DescribeDirectConnectVirtualInterfacesCommonWithContext is the same as DescribeDirectConnectVirtualInterfacesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDirectConnectVirtualInterfacesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DIRECTCONNECT) DescribeDirectConnectVirtualInterfacesCommonWithContext(ctx volcstack.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeDirectConnectVirtualInterfacesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeDirectConnectVirtualInterfaces = "DescribeDirectConnectVirtualInterfaces"

// DescribeDirectConnectVirtualInterfacesRequest generates a "volcstack/request.Request" representing the
// client's request for the DescribeDirectConnectVirtualInterfaces operation. The "output" return
// value will be populated with the DescribeDirectConnectVirtualInterfacesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDirectConnectVirtualInterfacesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDirectConnectVirtualInterfacesCommon Send returns without error.
//
// See DescribeDirectConnectVirtualInterfaces for more information on using the DescribeDirectConnectVirtualInterfaces
// API call, and error handling.
//
//    // Example sending a request using the DescribeDirectConnectVirtualInterfacesRequest method.
//    req, resp := client.DescribeDirectConnectVirtualInterfacesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DIRECTCONNECT) DescribeDirectConnectVirtualInterfacesRequest(input *DescribeDirectConnectVirtualInterfacesInput) (req *request.Request, output *DescribeDirectConnectVirtualInterfacesOutput) {
	op := &request.Operation{
		Name:       opDescribeDirectConnectVirtualInterfaces,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeDirectConnectVirtualInterfacesInput{}
	}

	output = &DescribeDirectConnectVirtualInterfacesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeDirectConnectVirtualInterfaces API operation for DIRECTCONNECT.
//
// Returns volcstackerr.Error for service API and SDK errors. Use runtime type assertions
// with volcstackerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCSTACK API reference guide for DIRECTCONNECT's
// API operation DescribeDirectConnectVirtualInterfaces for usage and error information.
func (c *DIRECTCONNECT) DescribeDirectConnectVirtualInterfaces(input *DescribeDirectConnectVirtualInterfacesInput) (*DescribeDirectConnectVirtualInterfacesOutput, error) {
	req, out := c.DescribeDirectConnectVirtualInterfacesRequest(input)
	return out, req.Send()
}

// DescribeDirectConnectVirtualInterfacesWithContext is the same as DescribeDirectConnectVirtualInterfaces with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDirectConnectVirtualInterfaces for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DIRECTCONNECT) DescribeDirectConnectVirtualInterfacesWithContext(ctx volcstack.Context, input *DescribeDirectConnectVirtualInterfacesInput, opts ...request.Option) (*DescribeDirectConnectVirtualInterfacesOutput, error) {
	req, out := c.DescribeDirectConnectVirtualInterfacesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeDirectConnectVirtualInterfacesInput struct {
	_ struct{} `type:"structure"`

	DirectConnectConnectionId *string `type:"string"`

	DirectConnectGatewayId *string `type:"string"`

	LocalIp *string `type:"string"`

	PageNumber *int64 `type:"integer"`

	PageSize *int64 `type:"integer"`

	PeerIp *string `type:"string"`

	RouteType *string `type:"string"`

	Status *string `type:"string"`

	VirtualInterfaceIds []*string `type:"list"`

	VirtualInterfaceName *string `type:"string"`

	VlanId *int64 `type:"integer"`
}

// String returns the string representation
func (s DescribeDirectConnectVirtualInterfacesInput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDirectConnectVirtualInterfacesInput) GoString() string {
	return s.String()
}

// SetDirectConnectConnectionId sets the DirectConnectConnectionId field's value.
func (s *DescribeDirectConnectVirtualInterfacesInput) SetDirectConnectConnectionId(v string) *DescribeDirectConnectVirtualInterfacesInput {
	s.DirectConnectConnectionId = &v
	return s
}

// SetDirectConnectGatewayId sets the DirectConnectGatewayId field's value.
func (s *DescribeDirectConnectVirtualInterfacesInput) SetDirectConnectGatewayId(v string) *DescribeDirectConnectVirtualInterfacesInput {
	s.DirectConnectGatewayId = &v
	return s
}

// SetLocalIp sets the LocalIp field's value.
func (s *DescribeDirectConnectVirtualInterfacesInput) SetLocalIp(v string) *DescribeDirectConnectVirtualInterfacesInput {
	s.LocalIp = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeDirectConnectVirtualInterfacesInput) SetPageNumber(v int64) *DescribeDirectConnectVirtualInterfacesInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeDirectConnectVirtualInterfacesInput) SetPageSize(v int64) *DescribeDirectConnectVirtualInterfacesInput {
	s.PageSize = &v
	return s
}

// SetPeerIp sets the PeerIp field's value.
func (s *DescribeDirectConnectVirtualInterfacesInput) SetPeerIp(v string) *DescribeDirectConnectVirtualInterfacesInput {
	s.PeerIp = &v
	return s
}

// SetRouteType sets the RouteType field's value.
func (s *DescribeDirectConnectVirtualInterfacesInput) SetRouteType(v string) *DescribeDirectConnectVirtualInterfacesInput {
	s.RouteType = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *DescribeDirectConnectVirtualInterfacesInput) SetStatus(v string) *DescribeDirectConnectVirtualInterfacesInput {
	s.Status = &v
	return s
}

// SetVirtualInterfaceIds sets the VirtualInterfaceIds field's value.
func (s *DescribeDirectConnectVirtualInterfacesInput) SetVirtualInterfaceIds(v []*string) *DescribeDirectConnectVirtualInterfacesInput {
	s.VirtualInterfaceIds = v
	return s
}

// SetVirtualInterfaceName sets the VirtualInterfaceName field's value.
func (s *DescribeDirectConnectVirtualInterfacesInput) SetVirtualInterfaceName(v string) *DescribeDirectConnectVirtualInterfacesInput {
	s.VirtualInterfaceName = &v
	return s
}

// SetVlanId sets the VlanId field's value.
func (s *DescribeDirectConnectVirtualInterfacesInput) SetVlanId(v int64) *DescribeDirectConnectVirtualInterfacesInput {
	s.VlanId = &v
	return s
}

type DescribeDirectConnectVirtualInterfacesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	PageNumber *int64 `type:"integer"`

	PageSize *int64 `type:"integer"`

	RequestId *string `type:"string"`

	TotalCount *int64 `type:"integer"`

	VirtualInterfaces []*VirtualInterfaceForDescribeDirectConnectVirtualInterfacesOutput `type:"list"`
}

// String returns the string representation
func (s DescribeDirectConnectVirtualInterfacesOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDirectConnectVirtualInterfacesOutput) GoString() string {
	return s.String()
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeDirectConnectVirtualInterfacesOutput) SetPageNumber(v int64) *DescribeDirectConnectVirtualInterfacesOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeDirectConnectVirtualInterfacesOutput) SetPageSize(v int64) *DescribeDirectConnectVirtualInterfacesOutput {
	s.PageSize = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeDirectConnectVirtualInterfacesOutput) SetRequestId(v string) *DescribeDirectConnectVirtualInterfacesOutput {
	s.RequestId = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *DescribeDirectConnectVirtualInterfacesOutput) SetTotalCount(v int64) *DescribeDirectConnectVirtualInterfacesOutput {
	s.TotalCount = &v
	return s
}

// SetVirtualInterfaces sets the VirtualInterfaces field's value.
func (s *DescribeDirectConnectVirtualInterfacesOutput) SetVirtualInterfaces(v []*VirtualInterfaceForDescribeDirectConnectVirtualInterfacesOutput) *DescribeDirectConnectVirtualInterfacesOutput {
	s.VirtualInterfaces = v
	return s
}

type VirtualInterfaceForDescribeDirectConnectVirtualInterfacesOutput struct {
	_ struct{} `type:"structure"`

	AccountId *string `type:"string"`

	Bandwidth *int64 `type:"integer"`

	BfdDetectInterval *int64 `type:"integer"`

	BfdDetectMultiplier *int64 `type:"integer"`

	CreationTime *string `type:"string"`

	Description *string `type:"string"`

	DirectConnectConnectionId *string `type:"string"`

	DirectConnectGatewayId *string `type:"string"`

	EnableBfd *bool `type:"boolean"`

	LocalIp *string `type:"string"`

	PeerIp *string `type:"string"`

	RouteType *string `type:"string"`

	Status *string `type:"string"`

	UpdateTime *string `type:"string"`

	VirtualInterfaceId *string `type:"string"`

	VirtualInterfaceName *string `type:"string"`

	VlanId *int64 `type:"integer"`
}

// String returns the string representation
func (s VirtualInterfaceForDescribeDirectConnectVirtualInterfacesOutput) String() string {
	return volcstackutil.Prettify(s)
}

// GoString returns the string representation
func (s VirtualInterfaceForDescribeDirectConnectVirtualInterfacesOutput) GoString() string {
	return s.String()
}

// SetAccountId sets the AccountId field's value.
func (s *VirtualInterfaceForDescribeDirectConnectVirtualInterfacesOutput) SetAccountId(v string) *VirtualInterfaceForDescribeDirectConnectVirtualInterfacesOutput {
	s.AccountId = &v
	return s
}

// SetBandwidth sets the Bandwidth field's value.
func (s *VirtualInterfaceForDescribeDirectConnectVirtualInterfacesOutput) SetBandwidth(v int64) *VirtualInterfaceForDescribeDirectConnectVirtualInterfacesOutput {
	s.Bandwidth = &v
	return s
}

// SetBfdDetectInterval sets the BfdDetectInterval field's value.
func (s *VirtualInterfaceForDescribeDirectConnectVirtualInterfacesOutput) SetBfdDetectInterval(v int64) *VirtualInterfaceForDescribeDirectConnectVirtualInterfacesOutput {
	s.BfdDetectInterval = &v
	return s
}

// SetBfdDetectMultiplier sets the BfdDetectMultiplier field's value.
func (s *VirtualInterfaceForDescribeDirectConnectVirtualInterfacesOutput) SetBfdDetectMultiplier(v int64) *VirtualInterfaceForDescribeDirectConnectVirtualInterfacesOutput {
	s.BfdDetectMultiplier = &v
	return s
}

// SetCreationTime sets the CreationTime field's value.
func (s *VirtualInterfaceForDescribeDirectConnectVirtualInterfacesOutput) SetCreationTime(v string) *VirtualInterfaceForDescribeDirectConnectVirtualInterfacesOutput {
	s.CreationTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *VirtualInterfaceForDescribeDirectConnectVirtualInterfacesOutput) SetDescription(v string) *VirtualInterfaceForDescribeDirectConnectVirtualInterfacesOutput {
	s.Description = &v
	return s
}

// SetDirectConnectConnectionId sets the DirectConnectConnectionId field's value.
func (s *VirtualInterfaceForDescribeDirectConnectVirtualInterfacesOutput) SetDirectConnectConnectionId(v string) *VirtualInterfaceForDescribeDirectConnectVirtualInterfacesOutput {
	s.DirectConnectConnectionId = &v
	return s
}

// SetDirectConnectGatewayId sets the DirectConnectGatewayId field's value.
func (s *VirtualInterfaceForDescribeDirectConnectVirtualInterfacesOutput) SetDirectConnectGatewayId(v string) *VirtualInterfaceForDescribeDirectConnectVirtualInterfacesOutput {
	s.DirectConnectGatewayId = &v
	return s
}

// SetEnableBfd sets the EnableBfd field's value.
func (s *VirtualInterfaceForDescribeDirectConnectVirtualInterfacesOutput) SetEnableBfd(v bool) *VirtualInterfaceForDescribeDirectConnectVirtualInterfacesOutput {
	s.EnableBfd = &v
	return s
}

// SetLocalIp sets the LocalIp field's value.
func (s *VirtualInterfaceForDescribeDirectConnectVirtualInterfacesOutput) SetLocalIp(v string) *VirtualInterfaceForDescribeDirectConnectVirtualInterfacesOutput {
	s.LocalIp = &v
	return s
}

// SetPeerIp sets the PeerIp field's value.
func (s *VirtualInterfaceForDescribeDirectConnectVirtualInterfacesOutput) SetPeerIp(v string) *VirtualInterfaceForDescribeDirectConnectVirtualInterfacesOutput {
	s.PeerIp = &v
	return s
}

// SetRouteType sets the RouteType field's value.
func (s *VirtualInterfaceForDescribeDirectConnectVirtualInterfacesOutput) SetRouteType(v string) *VirtualInterfaceForDescribeDirectConnectVirtualInterfacesOutput {
	s.RouteType = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *VirtualInterfaceForDescribeDirectConnectVirtualInterfacesOutput) SetStatus(v string) *VirtualInterfaceForDescribeDirectConnectVirtualInterfacesOutput {
	s.Status = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *VirtualInterfaceForDescribeDirectConnectVirtualInterfacesOutput) SetUpdateTime(v string) *VirtualInterfaceForDescribeDirectConnectVirtualInterfacesOutput {
	s.UpdateTime = &v
	return s
}

// SetVirtualInterfaceId sets the VirtualInterfaceId field's value.
func (s *VirtualInterfaceForDescribeDirectConnectVirtualInterfacesOutput) SetVirtualInterfaceId(v string) *VirtualInterfaceForDescribeDirectConnectVirtualInterfacesOutput {
	s.VirtualInterfaceId = &v
	return s
}

// SetVirtualInterfaceName sets the VirtualInterfaceName field's value.
func (s *VirtualInterfaceForDescribeDirectConnectVirtualInterfacesOutput) SetVirtualInterfaceName(v string) *VirtualInterfaceForDescribeDirectConnectVirtualInterfacesOutput {
	s.VirtualInterfaceName = &v
	return s
}

// SetVlanId sets the VlanId field's value.
func (s *VirtualInterfaceForDescribeDirectConnectVirtualInterfacesOutput) SetVlanId(v int64) *VirtualInterfaceForDescribeDirectConnectVirtualInterfacesOutput {
	s.VlanId = &v
	return s
}
